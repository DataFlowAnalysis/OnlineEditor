{
  "version": 3,
  "sources": ["../../sprotty/src/utils/browser.ts", "../../sprotty/src/utils/keyboard.ts"],
  "sourcesContent": ["/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Point } from 'sprotty-protocol';\n\n/**\n * Returns whether the mouse or keyboard event includes the CMD key\n * on Mac or CTRL key on Linux / others.\n */\nexport function isCtrlOrCmd(event: KeyboardEvent | MouseEvent) {\n    if (isMac())\n        return event.metaKey;\n    else\n        return event.ctrlKey;\n}\n\nexport function isMac(): boolean {\n    return window.navigator.userAgent.indexOf(\"Mac\") !== -1;\n}\n\nexport function isCrossSite(url: string): boolean {\n    if (url && typeof window !== 'undefined' && window.location) {\n        let baseURL: string = '';\n        if (window.location.protocol)\n            baseURL += window.location.protocol + '//';\n        if (window.location.host)\n            baseURL += window.location.host;\n        return baseURL.length > 0 && !url.startsWith(baseURL);\n    }\n    return false;\n}\n\n/**\n * Returns the amount of scroll of the browser window as a point.\n */\nexport function getWindowScroll(): Point {\n    if (typeof window === 'undefined') {\n        return Point.ORIGIN;\n    }\n    return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n    };\n}\n\n/**\n * Checks whether the given mouse event hits the given DOM element.\n */\nexport function hitsMouseEvent(child: Element, event: MouseEvent): boolean {\n    const clientRect = child.getBoundingClientRect();\n    return event.clientX >= clientRect.left && event.clientX <= clientRect.right\n        && event.clientY >= clientRect.top && event.clientY <= clientRect.bottom;\n}\n\n/**\n * Checks whether the given DOM node is an SVG element.\n */\nexport function isSVGGraphicsElement(node: Node): node is SVGGraphicsElement {\n    return typeof (node as SVGGraphicsElement).getBBox === 'function';\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { isMac } from './browser';\n\n/**\n * Returns whether the keyboard event matches the keystroke described by the given\n * code and modifiers. The code must comply to the format of the `code` property\n * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is\n * considered by this function if possible.\n */\nexport function matchesKeystroke(event: KeyboardEvent, code: KeyCode, ...modifiers: KeyboardModifier[]): boolean {\n    if (getActualCode(event) !== code)\n        return false;\n    if (isMac()) {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta' || m === 'ctrlCmd') >= 0))\n            return false;\n    } else {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl' || m === 'ctrlCmd') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta') >= 0))\n            return false;\n    }\n    if (event.altKey !== (modifiers.findIndex(m => m === 'alt') >= 0))\n        return false;\n    if (event.shiftKey !== (modifiers.findIndex(m => m === 'shift') >= 0))\n        return false;\n    return true;\n}\n\nexport type KeyboardModifier = 'ctrl' | 'meta' | 'ctrlCmd' | 'alt' | 'shift';\n\nexport type KeyCode =\n    'AltLeft'|'AltRight'|'ArrowDown'|'ArrowLeft'|'ArrowRight'|'ArrowUp'|'Backslash'|'Backspace'|'Backquote'\n    |'BracketLeft'|'BracketRight'|'CapsLock'|'Comma'|'ContextMenu'|'ControlLeft'|'ControlRight'|'Convert'|'Delete'\n    |'Digit0'|'Digit1'|'Digit2'|'Digit3'|'Digit4'|'Digit5'|'Digit6'|'Digit7'|'Digit8'|'Digit9'\n    |'F1'|'F2'|'F3'|'F4'|'F5'|'F6'|'F7'|'F8'|'F9'|'F10'|'F11'|'F12'|'F13'|'F14'|'F15'|'F16'|'F17'|'F18'|'F19'|'F20'|'F21'|'F22'|'F23'|'F24'\n    |'End'|'Enter'|'Equal'|'Escape'|'Home'|'Insert'|'IntlBackslash'|'IntlRo'|'IntlYen'|'KanaMode'\n    |'KeyA'|'KeyB'|'KeyC'|'KeyD'|'KeyE'|'KeyF'|'KeyG'|'KeyH'|'KeyI'|'KeyJ'|'KeyK'|'KeyL'|'KeyM'\n    |'KeyN'|'KeyO'|'KeyP'|'KeyQ'|'KeyR'|'KeyS'|'KeyT'|'KeyU'|'KeyV'|'KeyW'|'KeyX'|'KeyY'|'KeyZ'\n    |'MetaLeft'|'MetaRight'|'Minus'|'NonConvert'|'NumLock'\n    |'Numpad0'|'Numpad1'|'Numpad2'|'Numpad3'|'Numpad4'|'Numpad5'|'Numpad6'|'Numpad7'|'Numpad8'|'Numpad9'\n    |'NumpadAdd'|'NumpadComma'|'NumpadDecimal'|'NumpadDivide'|'NumpadEnter'|'NumpadEqual'|'NumpadMultiply'\n    |'NumpadSeparator'|'NumpadSubtract'|'OSLeft'|'OSRight'|'PageDown'|'PageUp'|'Pause'|'Period'|'PrintScreen'\n    |'Quote'|'ScrollLock'|'Semicolon'|'ShiftLeft'|'ShiftRight'|'Slash'|'Space'|'Tab';\n\n/**\n * Determines a key code from the given event. This is necessary because the `code` property of\n * a KeyboardEvent does not consider keyboard layouts.\n */\nexport function getActualCode(event: KeyboardEvent): KeyCode {\n    if (event.keyCode) {\n        const result = STRING_CODE[event.keyCode];\n        if (result !== undefined)\n            return result;\n    }\n    return event.code as KeyCode;\n}\n\nconst STRING_CODE: { [keyCode: number]: KeyCode } = new Array(256);\n\n(() => {\n    function addKeyCode(stringCode: KeyCode, numericCode: number): void {\n        if (STRING_CODE[numericCode] === undefined)\n            STRING_CODE[numericCode] = stringCode;\n    }\n\n    addKeyCode('Pause', 3);\n    addKeyCode('Backspace', 8);\n    addKeyCode('Tab', 9);\n    addKeyCode('Enter', 13);\n    addKeyCode('ShiftLeft', 16);\n    addKeyCode('ShiftRight', 16);\n    addKeyCode('ControlLeft', 17);\n    addKeyCode('ControlRight', 17);\n    addKeyCode('AltLeft', 18);\n    addKeyCode('AltRight', 18);\n    addKeyCode('CapsLock', 20);\n    addKeyCode('Escape', 27);\n    addKeyCode('Space', 32);\n    addKeyCode('PageUp', 33);\n    addKeyCode('PageDown', 34);\n    addKeyCode('End', 35);\n    addKeyCode('Home', 36);\n    addKeyCode('ArrowLeft', 37);\n    addKeyCode('ArrowUp', 38);\n    addKeyCode('ArrowRight', 39);\n    addKeyCode('ArrowDown', 40);\n    addKeyCode('Insert', 45);\n    addKeyCode('Delete', 46);\n\n    addKeyCode('Digit1', 49);\n    addKeyCode('Digit2', 50);\n    addKeyCode('Digit3', 51);\n    addKeyCode('Digit4', 52);\n    addKeyCode('Digit5', 53);\n    addKeyCode('Digit6', 54);\n    addKeyCode('Digit7', 55);\n    addKeyCode('Digit8', 56);\n    addKeyCode('Digit9', 57);\n    addKeyCode('Digit0', 48);\n\n    addKeyCode('KeyA', 65);\n    addKeyCode('KeyB', 66);\n    addKeyCode('KeyC', 67);\n    addKeyCode('KeyD', 68);\n    addKeyCode('KeyE', 69);\n    addKeyCode('KeyF', 70);\n    addKeyCode('KeyG', 71);\n    addKeyCode('KeyH', 72);\n    addKeyCode('KeyI', 73);\n    addKeyCode('KeyJ', 74);\n    addKeyCode('KeyK', 75);\n    addKeyCode('KeyL', 76);\n    addKeyCode('KeyM', 77);\n    addKeyCode('KeyN', 78);\n    addKeyCode('KeyO', 79);\n    addKeyCode('KeyP', 80);\n    addKeyCode('KeyQ', 81);\n    addKeyCode('KeyR', 82);\n    addKeyCode('KeyS', 83);\n    addKeyCode('KeyT', 84);\n    addKeyCode('KeyU', 85);\n    addKeyCode('KeyV', 86);\n    addKeyCode('KeyW', 87);\n    addKeyCode('KeyX', 88);\n    addKeyCode('KeyY', 89);\n    addKeyCode('KeyZ', 90);\n\n    addKeyCode('OSLeft', 91);\n    addKeyCode('MetaLeft', 91);\n    addKeyCode('OSRight', 92);\n    addKeyCode('MetaRight', 92);\n    addKeyCode('ContextMenu', 93);\n\n    addKeyCode('Numpad0', 96);\n    addKeyCode('Numpad1', 97);\n    addKeyCode('Numpad2', 98);\n    addKeyCode('Numpad3', 99);\n    addKeyCode('Numpad4', 100);\n    addKeyCode('Numpad5', 101);\n    addKeyCode('Numpad6', 102);\n    addKeyCode('Numpad7', 103);\n    addKeyCode('Numpad8', 104);\n    addKeyCode('Numpad9', 105);\n    addKeyCode('NumpadMultiply', 106);\n    addKeyCode('NumpadAdd', 107);\n    addKeyCode('NumpadSeparator', 108);\n    addKeyCode('NumpadSubtract', 109);\n    addKeyCode('NumpadDecimal', 110);\n    addKeyCode('NumpadDivide', 111);\n\n    addKeyCode('F1', 112);\n    addKeyCode('F2', 113);\n    addKeyCode('F3', 114);\n    addKeyCode('F4', 115);\n    addKeyCode('F5', 116);\n    addKeyCode('F6', 117);\n    addKeyCode('F7', 118);\n    addKeyCode('F8', 119);\n    addKeyCode('F9', 120);\n    addKeyCode('F10', 121);\n    addKeyCode('F11', 122);\n    addKeyCode('F12', 123);\n    addKeyCode('F13', 124);\n    addKeyCode('F14', 125);\n    addKeyCode('F15', 126);\n    addKeyCode('F16', 127);\n    addKeyCode('F17', 128);\n    addKeyCode('F18', 129);\n    addKeyCode('F19', 130);\n    addKeyCode('F20', 131);\n    addKeyCode('F21', 132);\n    addKeyCode('F22', 133);\n    addKeyCode('F23', 134);\n    addKeyCode('F24', 135);\n\n    addKeyCode('NumLock', 144);\n    addKeyCode('ScrollLock', 145);\n\n    addKeyCode('Semicolon', 186);\n    addKeyCode('Equal', 187);\n    addKeyCode('Comma', 188);\n    addKeyCode('Minus', 189);\n    addKeyCode('Period', 190);\n    addKeyCode('Slash', 191);\n    addKeyCode('Backquote', 192);\n    addKeyCode('IntlRo', 193);\n    addKeyCode('BracketLeft', 219);\n    addKeyCode('Backslash', 220);\n    addKeyCode('BracketRight', 221);\n    addKeyCode('Quote', 222);\n    addKeyCode('IntlYen', 255);\n})();\n"],
  "mappings": "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",
  "names": []
}
