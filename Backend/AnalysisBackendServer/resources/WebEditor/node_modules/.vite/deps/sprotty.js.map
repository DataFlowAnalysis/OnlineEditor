{
  "version": 3,
  "sources": ["../../sprotty/src/base/actions/action.ts", "../../sprotty/src/base/types.ts", "../../sprotty/src/utils/registry.ts", "../../sprotty/src/utils/iterable.ts", "../../sprotty/src/base/model/smodel.ts", "../../sprotty/src/base/model/smodel-factory.ts", "../../sprotty/src/base/animations/animation-frame-syncer.ts", "../../sprotty/src/base/actions/action-dispatcher.ts", "../../sprotty/src/utils/inversify.ts", "../../sprotty/src/base/actions/action-handler.ts", "../../sprotty/src/base/actions/diagram-locker.ts", "../../sprotty/src/base/animations/easing.ts", "../../sprotty/src/base/animations/animation.ts", "../../sprotty/src/base/commands/command.ts", "../../sprotty/src/base/commands/command-registration.ts", "../../sprotty/src/base/commands/command-stack-options.ts", "../../sprotty/src/base/commands/command-stack.ts", "../../sprotty/src/base/features/initialize-canvas.ts", "../../sprotty/src/base/features/set-model.ts", "../../sprotty/src/base/model/smodel-utils.ts", "../../sprotty/src/base/ui-extensions/ui-extension-registry.ts", "../../sprotty/src/base/ui-extensions/ui-extension.ts", "../../sprotty/src/base/views/vnode-utils.ts", "../../sprotty/src/base/views/key-tool.ts", "../../sprotty/src/base/views/dom-helper.ts", "../../sprotty/src/base/views/mouse-tool.ts", "../../snabbdom/src/htmldomapi.ts", "../../snabbdom/src/vnode.ts", "../../snabbdom/src/is.ts", "../../snabbdom/src/init.ts", "../../snabbdom/src/h.ts", "../../snabbdom/src/thunk.ts", "../../snabbdom/src/helpers/attachto.ts", "../../snabbdom/src/tovnode.ts", "../../snabbdom/build/hooks.js", "../../snabbdom/src/modules/attributes.ts", "../../snabbdom/src/modules/class.ts", "../../snabbdom/src/modules/dataset.ts", "../../snabbdom/src/modules/eventlisteners.ts", "../../snabbdom/src/modules/props.ts", "../../snabbdom/src/modules/style.ts", "../../snabbdom/src/jsx.ts", "../../snabbdom/src/index.ts", "../../sprotty/src/base/views/thunk-view.ts", "../../sprotty/src/lib/jsx.ts", "../../sprotty/src/base/views/view.tsx", "../../sprotty/src/base/views/viewer-cache.ts", "../../sprotty/src/base/views/viewer-options.ts", "../../sprotty/src/base/views/viewer.tsx", "../../sprotty/src/base/views/vnode-postprocessor.ts", "../../sprotty/src/utils/logging.ts", "../../sprotty/src/base/views/id-postprocessor.ts", "../../sprotty/src/base/views/css-class-postprocessor.ts", "../../sprotty/src/base/di.config.ts", "../../sprotty/src/features/bounds/model.ts", "../../sprotty/src/features/bounds/bounds-manipulation.ts", "../../sprotty/src/features/bounds/layout.ts", "../../sprotty/src/features/bounds/hidden-bounds-updater.ts", "../../sprotty/src/features/bounds/abstract-layout.ts", "../../sprotty/src/features/bounds/vbox-layout.ts", "../../sprotty/src/features/bounds/hbox-layout.ts", "../../sprotty/src/features/bounds/stack-layout.ts", "../../sprotty/src/features/bounds/views.ts", "../../sprotty/src/features/button/button-handler.ts", "../../sprotty/src/features/fade/model.ts", "../../sprotty/src/features/button/model.ts", "../../sprotty/src/features/nameable/model.ts", "../../sprotty/src/features/command-palette/action-providers.ts", "../../sprotty/src/utils/codicon.ts", "../../sprotty/src/features/select/model.ts", "../../autocompleter/autocomplete.ts", "../../sprotty/src/features/command-palette/command-palette.ts", "../../sprotty/src/features/context-menu/context-menu-service.ts", "../../sprotty/src/features/edit/delete.ts", "../../sprotty/src/features/context-menu/menu-providers.ts", "../../sprotty/src/features/context-menu/mouse-listener.ts", "../../sprotty/src/features/hover/model.ts", "../../sprotty/src/features/move/model.ts", "../../sprotty/src/features/routing/model.ts", "../../sprotty/src/features/edge-layout/model.ts", "../../sprotty/src/features/edit/model.ts", "../../sprotty/src/utils/geometry.ts", "../../sprotty/src/features/viewport/model.ts", "../../sprotty/src/features/export/model.ts", "../../sprotty/src/features/viewport/viewport-root.ts", "../../sprotty/src/graph/sgraph.ts", "../../sprotty/src/features/routing/anchor.ts", "../../sprotty/src/features/routing/abstract-edge-router.ts", "../../sprotty/src/features/routing/polyline-edge-router.ts", "../../sprotty/src/features/routing/routing.ts", "../../sprotty/src/features/edge-layout/edge-layout.ts", "../../sprotty/src/features/edge-layout/di.config.ts", "../../sprotty/src/features/edit/create.ts", "../../sprotty/src/features/edit/create-on-drag.ts", "../../sprotty/src/lib/svg-views.tsx", "../../sprotty/src/features/edit/edit-label.ts", "../../sprotty/src/features/export/svg-exporter.ts", "../../sprotty/src/model-source/model-source.ts", "../../sprotty/src/model-source/commit-model.ts", "../../sprotty/src/features/viewport/zoom.ts", "../../sprotty/src/features/edit/edit-label-ui.ts", "../../sprotty/src/features/edit/edit-routing.ts", "../../sprotty/src/features/edit/reconnect.ts", "../../sprotty/src/features/edit/di.config.ts", "../../sprotty/src/features/expand/model.ts", "../../sprotty/src/features/expand/expand.ts", "../../sprotty/src/features/expand/views.tsx", "../../sprotty/src/features/export/export.ts", "../../sprotty/src/features/fade/fade.ts", "../../sprotty/src/features/hover/hover.ts", "../../sprotty/src/features/decoration/model.ts", "../../sprotty/src/features/decoration/views.tsx", "../../sprotty/src/features/decoration/decoration-placer.ts", "../../tinyqueue/index.js", "../../sprotty/src/features/edge-intersection/sweepline.ts", "../../sprotty/src/features/edge-intersection/intersection-finder.ts", "../../sprotty/src/features/move/move.ts", "../../sprotty/src/features/move/snap.ts", "../../sprotty/src/features/open/model.ts", "../../sprotty/src/features/open/open.ts", "../../sprotty/src/features/projection/model.ts", "../../sprotty/src/features/projection/views.tsx", "../../sprotty/src/features/routing/polyline-anchors.ts", "../../sprotty/src/features/routing/bezier-edge-router.ts", "../../sprotty/src/features/routing/bezier-anchors.ts", "../../sprotty/src/features/routing/manhattan-edge-router.ts", "../../sprotty/src/features/routing/manhattan-anchors.ts", "../../sprotty/src/features/routing/views.ts", "../../sprotty/src/base/commands/request-command.ts", "../../sprotty/src/features/viewport/scroll.ts", "../../sprotty/src/features/select/select.ts", "../../sprotty/src/features/undo-redo/undo-redo.ts", "../../sprotty/src/features/update/model-matching.ts", "../../sprotty/src/features/bounds/resize.ts", "../../sprotty/src/features/update/update-model.ts", "../../sprotty/src/features/viewport/viewport.ts", "../../sprotty/src/features/viewport/center-fit.ts", "../../sprotty/src/features/zorder/zorder.ts", "../../sprotty/src/features/bounds/di.config.ts", "../../sprotty/src/features/button/di.config.ts", "../../sprotty/src/features/command-palette/di.config.ts", "../../sprotty/src/features/context-menu/di.config.ts", "../../sprotty/src/features/decoration/di.config.ts", "../../sprotty/src/features/edge-intersection/di.config.ts", "../../sprotty/src/features/expand/di.config.ts", "../../sprotty/src/features/export/di.config.ts", "../../sprotty/src/features/fade/di.config.ts", "../../sprotty/src/features/hover/popup-position-updater.ts", "../../sprotty/src/features/hover/di.config.ts", "../../sprotty/src/features/move/di.config.ts", "../../sprotty/src/features/open/di.config.ts", "../../sprotty/src/features/routing/di.config.ts", "../../sprotty/src/features/select/di.config.ts", "../../sprotty/src/features/undo-redo/di.config.ts", "../../sprotty/src/features/update/di.config.ts", "../../sprotty/src/features/viewport/di.config.ts", "../../sprotty/src/features/zorder/di.config.ts", "../../sprotty/src/graph/views.tsx", "../../sprotty/src/model-source/di.config.ts", "../../sprotty/src/lib/modules.ts", "../../sprotty/src/lib/virtualize.ts", "../../sprotty/src/lib/model.ts", "../../sprotty/src/lib/generic-views.tsx", "../../sprotty/src/lib/html-views.tsx", "../../file-saver/src/FileSaver.js", "../../sprotty/src/model-source/diagram-server.ts", "../../sprotty/src/model-source/local-model-source.ts", "../../sprotty/src/model-source/logging.ts", "../../sprotty/src/model-source/websocket.ts", "../../sprotty/src/utils/color.ts", "../../sprotty/src/index.ts"],
  "sourcesContent": ["/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Action } from 'sprotty-protocol/lib/actions';\r\n\r\n/**\r\n * A list of actions with a label.\r\n * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,\r\n * to define an entry in the command palette or in the context menu.\r\n */\r\nexport class LabeledAction {\r\n    constructor(readonly label: string, readonly actions: Action[], readonly icon?: string) { }\r\n}\r\n\r\nexport function isLabeledAction(element: unknown): element is LabeledAction {\r\n    return element !== undefined\r\n        && (<LabeledAction>element).label !== undefined\r\n        && (<LabeledAction>element).actions !== undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n /* eslint-disable @typescript-eslint/naming-convention */\r\nexport const TYPES = {\r\n    Action: Symbol('Action'),\r\n    IActionDispatcher: Symbol('IActionDispatcher'),\r\n    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),\r\n    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),\r\n    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),\r\n    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),\r\n    IAnchorComputer: Symbol('IAnchor'),\r\n    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),\r\n    IButtonHandlerRegistration: Symbol('IButtonHandlerRegistration'),\r\n    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),\r\n    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),\r\n    CommandRegistration: Symbol('CommandRegistration'),\r\n    ICommandStack: Symbol('ICommandStack'),\r\n    CommandStackOptions: Symbol('CommandStackOptions'),\r\n    ICommandStackProvider: Symbol('ICommandStackProvider'),\r\n    IContextMenuItemProvider: Symbol.for(\"IContextMenuProvider\"),\r\n    IContextMenuProviderRegistry: Symbol.for(\"IContextMenuProviderRegistry\"),\r\n    IContextMenuService: Symbol.for(\"IContextMenuService\"),\r\n    IContextMenuServiceProvider: Symbol.for(\"IContextMenuServiceProvider\"),\r\n    DOMHelper: Symbol('DOMHelper'),\r\n    IDiagramLocker: Symbol('IDiagramLocker'),\r\n    IEdgeRouter: Symbol('IEdgeRouter'),\r\n    IEdgeRoutePostprocessor: Symbol('IEdgeRoutePostprocessor'),\r\n    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),\r\n    IEditLabelValidator: Symbol('IEditLabelValidator'),\r\n    HiddenModelViewer: Symbol('HiddenModelViewer'),\r\n    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),\r\n    HoverState: Symbol('HoverState'),\r\n    KeyListener: Symbol('KeyListener'),\r\n    LayoutRegistration: Symbol('LayoutRegistration'),\r\n    LayoutRegistry: Symbol('LayoutRegistry'),\r\n    Layouter: Symbol('Layouter'),\r\n    LogLevel: Symbol('LogLevel'),\r\n    ILogger: Symbol('ILogger'),\r\n    IModelFactory: Symbol('IModelFactory'),\r\n    IModelLayoutEngine: Symbol('IModelLayoutEngine'),\r\n    ModelRendererFactory: Symbol('ModelRendererFactory'),\r\n    ModelSource: Symbol('ModelSource'),\r\n    ModelSourceProvider: Symbol('ModelSourceProvider'),\r\n    ModelViewer: Symbol('ModelViewer'),\r\n    MouseListener: Symbol('MouseListener'),\r\n    PatcherProvider: Symbol('PatcherProvider'),\r\n    IPopupModelProvider: Symbol('IPopupModelProvider'),\r\n    PopupModelViewer: Symbol('PopupModelViewer'),\r\n    PopupMouseListener: Symbol('PopupMouseListener'),\r\n    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),\r\n    SModelElementRegistration: Symbol('SModelElementRegistration'),\r\n    SModelRegistry: Symbol('SModelRegistry'),\r\n    ISnapper: Symbol('ISnapper'),\r\n    SvgExporter: Symbol('SvgExporter'),\r\n    IUIExtension: Symbol('IUIExtension'),\r\n    UIExtensionRegistry: Symbol('UIExtensionRegistry'),\r\n    IVNodePostprocessor: Symbol('IVNodePostprocessor'),\r\n    ViewRegistration: Symbol('ViewRegistration'),\r\n    ViewRegistry: Symbol('ViewRegistry'),\r\n    IViewer: Symbol('IViewer'),\r\n    ViewerOptions: Symbol('ViewerOptions'),\r\n    IViewerProvider: Symbol('IViewerProvider'),\r\n};\r\n/* eslint-enable */\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\n\r\n@injectable()\r\nexport class ProviderRegistry<T, U> {\r\n    protected elements: Map<string, new (u: U) => T> = new Map;\r\n\r\n    register(key: string, cstr: new (u: U) => T) {\r\n        if (key === undefined)\r\n            throw new Error('Key is undefined');\r\n        if (this.hasKey(key))\r\n            throw new Error('Key is already registered: ' + key);\r\n        this.elements.set(key, cstr);\r\n    }\r\n\r\n    deregister(key: string) {\r\n        if (key === undefined)\r\n            throw new Error('Key is undefined');\r\n        this.elements.delete(key);\r\n    }\r\n\r\n    hasKey(key: string): boolean {\r\n        return this.elements.has(key);\r\n    }\r\n\r\n    get(key: string, arg: U): T {\r\n        const existingCstr = this.elements.get(key);\r\n        if (existingCstr)\r\n            return new existingCstr(arg);\r\n        else\r\n            return this.missing(key, arg);\r\n    }\r\n\r\n    protected missing(key: string, arg: U): T | never {\r\n        throw new Error('Unknown registry key: ' + key);\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class FactoryRegistry<T, U> {\r\n    protected elements: Map<string, (u: U) => T> = new Map;\r\n\r\n    register(key: string, factory: (u: U) => T) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        if (this.hasKey(key)) {\r\n            throw new Error('Key is already registered: ' + key);\r\n        }\r\n        this.elements.set(key, factory);\r\n    }\r\n\r\n    deregister(key: string) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        this.elements.delete(key);\r\n    }\r\n\r\n    hasKey(key: string): boolean {\r\n        return this.elements.has(key);\r\n    }\r\n\r\n    get(key: string, arg: U): T {\r\n        const existingFactory = this.elements.get(key);\r\n        if (existingFactory) {\r\n            return existingFactory(arg);\r\n        } else {\r\n            return this.missing(key, arg);\r\n        }\r\n    }\r\n\r\n    protected missing(key: string, arg: U): T | never {\r\n        throw new Error('Unknown registry key: ' + key);\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class InstanceRegistry<T> {\r\n    protected elements: Map<string, T> = new Map;\r\n\r\n    register(key: string, instance: T) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        if (this.hasKey(key)) {\r\n            throw new Error('Key is already registered: ' + key);\r\n        }\r\n        this.elements.set(key, instance);\r\n    }\r\n\r\n    deregister(key: string) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        this.elements.delete(key);\r\n    }\r\n\r\n    hasKey(key: string): boolean {\r\n        return this.elements.has(key);\r\n    }\r\n\r\n    get(key: string): T {\r\n        const existingInstance = this.elements.get(key);\r\n        if (existingInstance) {\r\n            return existingInstance;\r\n        } else {\r\n            return this.missing(key);\r\n        }\r\n    }\r\n\r\n    protected missing(key: string): T | never {\r\n        throw new Error('Unknown registry key: ' + key);\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class MultiInstanceRegistry<T> {\r\n    protected elements: Map<string, T[]> = new Map;\r\n\r\n    register(key: string, instance: T) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        const instances = this.elements.get(key);\r\n        if (instances !== undefined) {\r\n            instances.push(instance);\r\n        } else {\r\n            this.elements.set(key, [instance]);\r\n        }\r\n    }\r\n\r\n    deregisterAll(key: string) {\r\n        if (key === undefined) {\r\n            throw new Error('Key is undefined');\r\n        }\r\n        this.elements.delete(key);\r\n    }\r\n\r\n    get(key: string): T[] {\r\n        const existingInstances = this.elements.get(key);\r\n        if (existingInstances !== undefined) {\r\n            return existingInstances;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/**\r\n * An iterable that allows filtering, mapping values etc. with a fluent API.\r\n * Arrays conform to this interface, so an array can be passed at every place where\r\n * a FluentIterable is expected.\r\n */\r\nexport interface FluentIterable<T> extends Iterable<T> {\r\n    filter(callback: (element: T) => boolean): FluentIterable<T>\r\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2>\r\n    forEach(callback: (element: T, index: number) => void): void\r\n    indexOf(element: any): number\r\n}\r\n\r\n/**\r\n * A helper class that allows to easily create fluent iterables.\r\n */\r\nexport class FluentIterableImpl<S, T> implements FluentIterable<T> {\r\n\r\n    constructor(private readonly startFn: () => S,\r\n                private readonly nextFn: (state: S) => IteratorResult<T>) {}\r\n\r\n    [Symbol.iterator]() {\r\n        const iterator = {\r\n            state: this.startFn(),\r\n            next: () => this.nextFn(iterator.state),\r\n            [Symbol.iterator]: () => iterator\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    filter(callback: (element: T) => boolean): FluentIterable<T> {\r\n        return filterIterable(this, callback);\r\n    }\r\n\r\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2> {\r\n        return mapIterable(this, callback);\r\n    }\r\n\r\n    forEach(callback: (element: T, index: number) => void): void {\r\n        const iterator = this[Symbol.iterator]();\r\n        let index = 0;\r\n        let result: IteratorResult<T>;\r\n        do {\r\n            result = iterator.next();\r\n            if (result.value !== undefined)\r\n                callback(result.value, index);\r\n            index++;\r\n        } while (!result.done);\r\n    }\r\n\r\n    indexOf(element: any): number {\r\n        const iterator = this[Symbol.iterator]();\r\n        let index = 0;\r\n        let result: IteratorResult<T>;\r\n        do {\r\n            result = iterator.next();\r\n            if (result.value === element)\r\n                return index;\r\n            index++;\r\n        } while (!result.done);\r\n        return -1;\r\n    }\r\n}\r\n\r\n/**\r\n * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.\r\n */\r\nexport function toArray<T>(input: FluentIterable<T>): T[] {\r\n    if (input.constructor === Array) {\r\n        return input as T[];\r\n    }\r\n    const result: T[] = [];\r\n    input.forEach(element => result.push(element));\r\n    return result;\r\n}\r\n\r\nexport const DONE_RESULT: IteratorResult<any> = Object.freeze({ done: true, value: undefined });\r\n\r\n/**\r\n * Create a fluent iterable that filters the content of the given iterable or array.\r\n */\r\nexport function filterIterable<T>(input: Iterable<T> | ArrayLike<T>, callback: (element: T) => boolean): FluentIterable<T> {\r\n    return new FluentIterableImpl(\r\n        () => createIterator(input),\r\n        (iterator) => {\r\n            let result: IteratorResult<T>;\r\n            do {\r\n                result = iterator.next();\r\n            } while (!result.done && !callback(result.value));\r\n            return result;\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Create a fluent iterable that maps the content of the given iterable or array.\r\n */\r\nexport function mapIterable<T1, T2>(input: Iterable<T1> | ArrayLike<T1>, callback: (element: T1) => T2): FluentIterable<T2> {\r\n    return new FluentIterableImpl(\r\n        () => createIterator(input),\r\n        (iterator) => {\r\n            const { done, value } = iterator.next();\r\n            if (done)\r\n                return DONE_RESULT;\r\n            else\r\n                return { done: false, value: callback(value) };\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Create an iterator for the given iterable or array.\r\n */\r\nfunction createIterator<T>(collection: Iterable<T> | ArrayLike<T>): Iterator<T> {\r\n    const method = (collection as Iterable<T>)[Symbol.iterator];\r\n    if (typeof method === 'function') {\r\n        return method.call(collection);\r\n    }\r\n    const length = (collection as ArrayLike<T>).length;\r\n    if (typeof length === 'number' && length >= 0) {\r\n        return new ArrayIterator(collection as ArrayLike<T>);\r\n    }\r\n    return { next: () => DONE_RESULT };\r\n}\r\n\r\n/**\r\n * Iterator implementation for arrays.\r\n */\r\nclass ArrayIterator<T> implements IterableIterator<T> {\r\n    constructor(private readonly array: ArrayLike<T>) {}\r\n\r\n    private index = 0;\r\n\r\n    next(): IteratorResult<T> {\r\n        if (this.index < this.array.length)\r\n            return { done: false, value: this.array[this.index++] };\r\n        else\r\n            return DONE_RESULT;\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElement } from 'sprotty-protocol/lib/model';\r\nimport { Bounds, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { FluentIterable, mapIterable } from '../../utils/iterable';\r\n\r\n/**\r\n * Base class for all elements of the internal diagram model.\r\n * Each model element must have a unique ID and a type that is used to look up its view.\r\n */\r\nexport class SModelElementImpl {\r\n    type: string;\r\n    id: string;\r\n    features?: FeatureSet;\r\n    cssClasses?: string[];\r\n\r\n    get root(): SModelRootImpl {\r\n        let current: SModelElementImpl | undefined = this;\r\n        while (current) {\r\n            if (current instanceof SModelRootImpl)\r\n                return current;\r\n            else if (current instanceof SChildElementImpl)\r\n                current = current.parent;\r\n            else\r\n                current = undefined;\r\n        }\r\n        throw new Error('Element has no root');\r\n    }\r\n\r\n    get index(): ModelIndexImpl {\r\n        return this.root.index;\r\n    }\r\n\r\n    /**\r\n     * A feature is a symbol identifying some functionality that can be enabled or disabled for\r\n     * a model element. The set of supported features is determined by the `features` property.\r\n     */\r\n    hasFeature(feature: symbol): boolean {\r\n        return this.features !== undefined && this.features.has(feature);\r\n    }\r\n}\r\n\r\n\r\nexport interface FeatureSet {\r\n    has(feature: symbol): boolean\r\n}\r\n\r\nexport function isParent(element: SModelElement | SModelElementImpl):\r\n        element is SModelElement & { children: SModelElement[] } {\r\n    const children = (element as any).children;\r\n    return children !== undefined && children.constructor === Array;\r\n}\r\n\r\n/**\r\n * A parent element may contain child elements, thus the diagram model forms a tree.\r\n */\r\nexport class SParentElementImpl extends SModelElementImpl {\r\n    readonly children: ReadonlyArray<SChildElementImpl> = [];\r\n\r\n    add(child: SChildElementImpl, index?: number) {\r\n        const children = this.children as SChildElementImpl[];\r\n        if (index === undefined) {\r\n            children.push(child);\r\n        } else {\r\n            if (index < 0 || index > this.children.length) {\r\n                throw new Error(`Child index ${index} out of bounds (0..${children.length})`);\r\n            }\r\n            children.splice(index, 0, child);\r\n        }\r\n        (child as {parent: SParentElementImpl}).parent = this;\r\n        this.index.add(child);\r\n    }\r\n\r\n    remove(child: SChildElementImpl) {\r\n        const children = this.children as SChildElementImpl[];\r\n        const i = children.indexOf(child);\r\n        if (i < 0) {\r\n            throw new Error(`No such child ${child.id}`);\r\n        }\r\n        children.splice(i, 1);\r\n        this.index.remove(child);\r\n    }\r\n\r\n    removeAll(filter?: (e: SChildElementImpl) => boolean) {\r\n        const children = this.children as SChildElementImpl[];\r\n        if (filter !== undefined) {\r\n            for (let i = children.length - 1; i >= 0; i--) {\r\n                if (filter(children[i])) {\r\n                    const child = children.splice(i, 1)[0];\r\n                    this.index.remove(child);\r\n                }\r\n            }\r\n        } else {\r\n            children.forEach(child => {\r\n                this.index.remove(child);\r\n            });\r\n            children.splice(0, children.length);\r\n        }\r\n    }\r\n\r\n    move(child: SChildElementImpl, newIndex: number) {\r\n        const children = this.children as SChildElementImpl[];\r\n        const i = children.indexOf(child);\r\n        if (i === -1) {\r\n            throw new Error(`No such child ${child.id}`);\r\n        } else {\r\n            if (newIndex < 0 || newIndex > children.length - 1) {\r\n                throw new Error(`Child index ${newIndex} out of bounds (0..${children.length})`);\r\n            }\r\n            children.splice(i, 1);\r\n            children.splice(newIndex, 0, child);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transform the given bounds from the local coordinate system of this element to the coordinate\r\n     * system of its parent. This function should consider any transformation that is applied to the\r\n     * view of this element and its contents.\r\n     * The base implementation assumes that this element does not define a local coordinate system,\r\n     * so it leaves the bounds unchanged.\r\n     */\r\n    localToParent(point: Point | Bounds): Bounds {\r\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\r\n    }\r\n\r\n    /**\r\n     * Transform the given bounds from the coordinate system of this element's parent to its local\r\n     * coordinate system. This function should consider any transformation that is applied to the\r\n     * view of this element and its contents.\r\n     * The base implementation assumes that this element does not define a local coordinate system,\r\n     * so it leaves the bounds unchanged.\r\n     */\r\n    parentToLocal(point: Point | Bounds): Bounds {\r\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\r\n    }\r\n}\r\n\r\n/**\r\n * A child element is contained in a parent element. All elements except the model root are child\r\n * elements. In order to keep the model class hierarchy simple, every child element is also a\r\n * parent element, although for many elements the array of children is empty (i.e. they are\r\n * leafs in the model element tree).\r\n */\r\nexport class SChildElementImpl extends SParentElementImpl {\r\n    readonly parent: SParentElementImpl;\r\n}\r\n\r\n\r\n/**\r\n * Base class for the root element of the diagram model tree.\r\n */\r\nexport class SModelRootImpl extends SParentElementImpl {\r\n    revision?: number;\r\n\r\n    canvasBounds: Bounds = Bounds.EMPTY;\r\n\r\n    constructor(index = new ModelIndexImpl()) {\r\n        super();\r\n          // Override the index property from SModelElement, which has a getter, with a data property\r\n          Object.defineProperty(this, 'index', {\r\n            value: index,\r\n            writable: false\r\n        });\r\n    }\r\n}\r\n\r\nconst ID_CHARS = '0123456789abcdefghijklmnopqrstuvwxyz';\r\nexport function createRandomId(length: number = 8): string {\r\n    let id = '';\r\n    for (let i = 0; i < length; i++) {\r\n        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));\r\n    }\r\n    return id;\r\n}\r\n\r\n\r\n/**\r\n * Used to speed up model element lookup by id.\r\n */\r\n export interface IModelIndex {\r\n    add(element: SModelElement): void\r\n    remove(element: SModelElement): void\r\n    contains(element: SModelElement): boolean\r\n    getById(id: string): SModelElement | undefined\r\n}\r\n\r\n/**\r\n * This index implementation is for the _internal model_ that is used for rendering.\r\n */\r\nexport class ModelIndexImpl implements IModelIndex {\r\n\r\n    private readonly id2element: Map<string, SModelElementImpl> = new Map();\r\n\r\n    add(element: SModelElementImpl): void {\r\n        if (!element.id) {\r\n            do {\r\n                element.id = createRandomId();\r\n            } while (this.contains(element));\r\n        } else if (this.contains(element)) {\r\n            throw new Error('Duplicate ID in model: ' + element.id);\r\n        }\r\n        this.id2element.set(element.id, element);\r\n        if (element instanceof SParentElementImpl) {\r\n            for (const child of element.children) {\r\n                this.add(child as any);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove(element: SModelElementImpl): void {\r\n        this.id2element.delete(element.id);\r\n        if (element instanceof SParentElementImpl) {\r\n            for (const child of element.children) {\r\n                this.remove(child as any);\r\n            }\r\n        }\r\n    }\r\n\r\n    contains(element: SModelElementImpl): boolean {\r\n        return this.id2element.has(element.id);\r\n    }\r\n\r\n    getById(id: string): SModelElementImpl | undefined {\r\n        return this.id2element.get(id);\r\n    }\r\n\r\n    getAttachedElements(element: SModelElementImpl): FluentIterable<SModelElementImpl> {\r\n        return [];\r\n    }\r\n\r\n    all(): FluentIterable<SModelElementImpl> {\r\n        return mapIterable(this.id2element, ([key, value]: [string, SModelElementImpl]) => value);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject, optional, inject } from 'inversify';\r\nimport { SModelElement, SModelRoot } from 'sprotty-protocol/lib/model';\r\nimport { TYPES } from \"../types\";\r\nimport { FactoryRegistry } from '../../utils/registry';\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl, isParent, FeatureSet } from './smodel';\r\n\r\n/**\r\n * Model element classes registered here are considered automatically when constructring a model from its schema.\r\n */\r\n@injectable()\r\nexport class SModelRegistry extends FactoryRegistry<SModelElementImpl, void> {\r\n    constructor(@multiInject(TYPES.SModelElementRegistration) @optional() registrations: SModelElementRegistration[]) {\r\n        super();\r\n\r\n        registrations.forEach(registration => {\r\n            let defaultFeatures = this.getDefaultFeatures(registration.constr);\r\n            if (!defaultFeatures && registration.features && registration.features.enable)\r\n                defaultFeatures = [];\r\n            if (defaultFeatures) {\r\n                const featureSet = createFeatureSet(defaultFeatures, registration.features);\r\n                this.register(registration.type, () => {\r\n                    const element = new registration.constr();\r\n                    element.features = featureSet;\r\n                    return element;\r\n                });\r\n            } else {\r\n                this.register(registration.type, () => new registration.constr());\r\n            }\r\n        });\r\n    }\r\n\r\n    protected getDefaultFeatures(constr: SModelElementConstructor): ReadonlyArray<symbol> | undefined {\r\n        let obj = constr;\r\n        do {\r\n            const defaultFeatures = obj.DEFAULT_FEATURES;\r\n            if (defaultFeatures)\r\n                return defaultFeatures;\r\n            obj = Object.getPrototypeOf(obj);\r\n        } while (obj);\r\n        return undefined;\r\n    }\r\n}\r\n\r\n/**\r\n * A model factory transforms a serializable model schema into the model representation that is used\r\n * internally by sprotty.\r\n */\r\nexport interface IModelFactory {\r\n    createElement(schema: SModelElement | SModelElementImpl, parent?: SParentElementImpl): SChildElementImpl\r\n\r\n    createRoot(schema: SModelRoot | SModelRootImpl): SModelRootImpl\r\n\r\n    createSchema(element: SModelElementImpl): SModelElement\r\n}\r\n\r\n/**\r\n * The default model factory creates SModelRoot for the root element and SChildElement for all other\r\n * model elements.\r\n */\r\n@injectable()\r\nexport class SModelFactory implements IModelFactory {\r\n\r\n    @inject(TYPES.SModelRegistry) protected readonly registry: SModelRegistry;\r\n\r\n    createElement(schema: SModelElement | SModelElementImpl, parent?: SParentElementImpl): SChildElementImpl {\r\n        let child: SChildElementImpl;\r\n        if (this.registry.hasKey(schema.type)) {\r\n            const regElement = this.registry.get(schema.type, undefined);\r\n            if (!(regElement instanceof SChildElementImpl))\r\n                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);\r\n            child = regElement;\r\n        } else {\r\n            child = new SChildElementImpl();\r\n        }\r\n        return this.initializeChild(child, schema, parent);\r\n    }\r\n\r\n    createRoot(schema: SModelRoot | SModelRootImpl): SModelRootImpl {\r\n        let root: SModelRootImpl;\r\n        if (this.registry.hasKey(schema.type)) {\r\n            const regElement = this.registry.get(schema.type, undefined);\r\n            if (!(regElement instanceof SModelRootImpl))\r\n                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);\r\n            root = regElement;\r\n        } else {\r\n            root = new SModelRootImpl();\r\n        }\r\n        return this.initializeRoot(root, schema);\r\n    }\r\n\r\n    createSchema(element: SModelElementImpl): SModelElement {\r\n        const schema = {};\r\n        for (const key in element) {\r\n             if (!this.isReserved(element, key)) {\r\n                const value: any = (element as any)[key];\r\n                if (typeof value !== 'function')\r\n                    (schema as any)[key] = value;\r\n            }\r\n        }\r\n        if (element instanceof SParentElementImpl)\r\n            (schema as any)['children'] = element.children.map(child => this.createSchema(child));\r\n        return schema as SModelElement;\r\n    }\r\n\r\n    protected initializeElement(element: SModelElementImpl, schema: SModelElement | SModelElementImpl): SModelElementImpl {\r\n        for (const key in schema) {\r\n            if (!this.isReserved(element, key)) {\r\n                const value: any = (schema as any)[key];\r\n                if (typeof value !== 'function')\r\n                    (element as any)[key] = value;\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    protected isReserved(element: SModelElementImpl, propertyName: string) {\r\n        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)\r\n            return true;\r\n        let obj = element;\r\n        do {\r\n            const descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);\r\n            if (descriptor !== undefined)\r\n                return descriptor.get !== undefined;\r\n            obj = Object.getPrototypeOf(obj);\r\n        } while (obj);\r\n        return false;\r\n    }\r\n\r\n    protected initializeParent(parent: SParentElementImpl, schema: SModelElement | SParentElementImpl): SParentElementImpl {\r\n        this.initializeElement(parent, schema);\r\n        if (isParent(schema)) {\r\n            (parent as any).children = schema.children.map(childSchema => this.createElement(childSchema, parent));\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    protected initializeChild(child: SChildElementImpl, schema: SModelElement, parent?: SParentElementImpl): SChildElementImpl {\r\n        this.initializeParent(child, schema);\r\n        if (parent !== undefined) {\r\n            (child as any).parent = parent;\r\n        }\r\n        return child;\r\n    }\r\n\r\n    protected initializeRoot(root: SModelRootImpl, schema: SModelRoot | SModelRootImpl): SModelRootImpl {\r\n        this.initializeParent(root, schema);\r\n        root.index.add(root);\r\n        return root;\r\n    }\r\n}\r\n\r\nexport const EMPTY_ROOT: Readonly<SModelRoot> = Object.freeze({\r\n    type: 'NONE',\r\n    id: 'EMPTY'\r\n});\r\n\r\n/**\r\n * Used to bind a model element type to a class constructor in the SModelRegistry.\r\n */\r\nexport interface SModelElementRegistration {\r\n    type: string\r\n    constr: SModelElementConstructor\r\n    features?: CustomFeatures\r\n}\r\n\r\nexport interface SModelElementConstructor {\r\n    DEFAULT_FEATURES?: ReadonlyArray<symbol>\r\n    new (): SModelElementImpl\r\n}\r\n\r\nexport interface CustomFeatures {\r\n    enable?: symbol[]\r\n    disable?: symbol[]\r\n}\r\n\r\nexport function createFeatureSet(defaults: ReadonlyArray<symbol>, custom?: CustomFeatures): FeatureSet {\r\n    const featureSet = new Set<symbol>(defaults);\r\n    if (custom && custom.enable) {\r\n        for (const f of custom.enable) {\r\n            featureSet.add(f);\r\n        }\r\n    }\r\n    if (custom && custom.disable) {\r\n        for (const f of custom.disable) {\r\n            featureSet.delete(f);\r\n        }\r\n    }\r\n    return featureSet;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\n\r\n@injectable()\r\nexport class AnimationFrameSyncer {\r\n\r\n    tasks: ((x?: number) => void) [] = [];\r\n    endTasks: ((x?: number) => void) [] = [];\r\n    triggered: boolean = false;\r\n\r\n    isAvailable(): boolean {\r\n        return typeof requestAnimationFrame === \"function\";\r\n    }\r\n\r\n    onNextFrame(task: (x?: number) => void) {\r\n        this.tasks.push(task);\r\n        this.trigger();\r\n    }\r\n\r\n    onEndOfNextFrame(task: (x?: number) => void) {\r\n        this.endTasks.push(task);\r\n        this.trigger();\r\n    }\r\n\r\n    protected trigger() {\r\n        if (!this.triggered) {\r\n            this.triggered = true;\r\n            if (this.isAvailable())\r\n                requestAnimationFrame((time: number) => this.run(time));\r\n            else\r\n                setTimeout((time: number) => this.run(time));\r\n        }\r\n    }\r\n\r\n    protected run(time: number) {\r\n        const tasks = this.tasks;\r\n        const endTasks = this.endTasks;\r\n        this.triggered = false;\r\n        this.tasks = [];\r\n        this.endTasks = [];\r\n        tasks.forEach(task => task.call(undefined, time));\r\n        endTasks.forEach(task => task.call(undefined, time));\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport {\r\n    Action, isAction, isRequestAction, isResponseAction, RedoAction, RejectAction, RequestAction,\r\n    ResponseAction, SetModelAction, setRequestContext, UndoAction\r\n} from 'sprotty-protocol/lib/actions';\r\nimport { Deferred } from 'sprotty-protocol/lib/utils/async';\r\nimport { TYPES } from '../types';\r\nimport { ILogger } from '../../utils/logging';\r\nimport { EMPTY_ROOT } from '../model/smodel-factory';\r\nimport { ICommandStack } from '../commands/command-stack';\r\nimport { AnimationFrameSyncer } from '../animations/animation-frame-syncer';\r\nimport { ActionHandlerRegistry } from './action-handler';\r\nimport { IDiagramLocker } from './diagram-locker';\r\n\r\nexport interface IActionDispatcher {\r\n    dispatch(action: Action): Promise<void>\r\n    dispatchAll(actions: Action[]): Promise<void>\r\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res>\r\n}\r\n\r\n// This code should be used only in the client part of a Sprotty application.\r\n// We set the request context to 'client' to avoid collisions with requests created by the server.\r\nsetRequestContext('client');\r\n\r\n/**\r\n * Collects actions, converts them to commands and dispatches them.\r\n * Also acts as the proxy to model sources such as diagram servers.\r\n */\r\n@injectable()\r\nexport class ActionDispatcher implements IActionDispatcher {\r\n\r\n    @inject(TYPES.ActionHandlerRegistryProvider) protected actionHandlerRegistryProvider: () => Promise<ActionHandlerRegistry>;\r\n    @inject(TYPES.ICommandStack) protected commandStack: ICommandStack;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\r\n    @inject(TYPES.IDiagramLocker) protected diagramLocker: IDiagramLocker;\r\n\r\n    protected actionHandlerRegistry: ActionHandlerRegistry;\r\n\r\n    protected initialized: Promise<void> | undefined;\r\n    protected blockUntil?: (action: Action) => boolean;\r\n    protected postponedActions: PostponedAction[] = [];\r\n    protected readonly requests: Map<string, Deferred<ResponseAction>> = new Map();\r\n\r\n    initialize(): Promise<void> {\r\n        if (!this.initialized) {\r\n            this.initialized = this.actionHandlerRegistryProvider().then(registry => {\r\n                this.actionHandlerRegistry = registry;\r\n                this.handleAction(SetModelAction.create(EMPTY_ROOT)).catch(() => { /* Logged in handleAction method */ });\r\n            });\r\n        }\r\n        return this.initialized;\r\n    }\r\n\r\n    /**\r\n     * Dispatch an action by querying all handlers that are registered for its kind.\r\n     * The returned promise is resolved when all handler results (commands or actions)\r\n     * have been processed.\r\n     */\r\n    dispatch(action: Action): Promise<void> {\r\n        return this.initialize().then(() => {\r\n            if (this.blockUntil !== undefined) {\r\n                return this.handleBlocked(action, this.blockUntil);\r\n            } else if (this.diagramLocker.isAllowed(action)) {\r\n                return this.handleAction(action);\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls `dispatch` on every action in the given array. The returned promise\r\n     * is resolved when the promises of all `dispatch` calls have been resolved.\r\n     */\r\n    dispatchAll(actions: Action[]): Promise<void> {\r\n        return Promise.all(actions.map(action => this.dispatch(action))) as Promise<any>;\r\n    }\r\n\r\n    /**\r\n     * Dispatch a request. The returned promise is resolved when a response with matching\r\n     * identifier is dispatched. That response is _not_ passed to the registered action\r\n     * handlers. Instead, it is the responsibility of the caller of this method to handle\r\n     * the response properly. For example, it can be sent to the registered handlers by\r\n     * passing it again to the `dispatch` method.\r\n     */\r\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res> {\r\n        if (!action.requestId) {\r\n            return Promise.reject(new Error('Request without requestId'));\r\n        }\r\n        const deferred = new Deferred<Res>();\r\n        this.requests.set(action.requestId, deferred);\r\n        this.dispatch(action).catch(() => { /* Logged in handleAction method */ });\r\n        return deferred.promise;\r\n    }\r\n\r\n    protected handleAction(action: Action): Promise<void> {\r\n        if (action.kind === UndoAction.KIND) {\r\n            return this.commandStack.undo().then(() => {});\r\n        }\r\n        if (action.kind === RedoAction.KIND) {\r\n            return this.commandStack.redo().then(() => {});\r\n        }\r\n        if (isResponseAction(action)) {\r\n            const deferred = this.requests.get(action.responseId);\r\n            if (deferred !== undefined) {\r\n                this.requests.delete(action.responseId);\r\n                if (action.kind === RejectAction.KIND) {\r\n                    const rejectAction = action as RejectAction;\r\n                    deferred.reject(new Error(rejectAction.message));\r\n                    this.logger.warn(this, `Request with id ${action.responseId} failed.`,\r\n                            rejectAction.message, rejectAction.detail);\r\n                } else {\r\n                    deferred.resolve(action);\r\n                }\r\n                return Promise.resolve();\r\n            }\r\n            this.logger.log(this, 'No matching request for response', action);\r\n        }\r\n\r\n        const handlers = this.actionHandlerRegistry.get(action.kind);\r\n        if (handlers.length === 0) {\r\n            this.logger.warn(this, 'Missing handler for action', action);\r\n            const error = new Error(`Missing handler for action '${action.kind}'`);\r\n            if (isRequestAction(action)) {\r\n                const deferred = this.requests.get(action.requestId);\r\n                if (deferred !== undefined) {\r\n                    this.requests.delete(action.requestId);\r\n                    deferred.reject(error);\r\n                }\r\n            }\r\n            return Promise.reject(error);\r\n        }\r\n        this.logger.log(this, 'Handle', action);\r\n        const promises: Promise<any>[] = [];\r\n        for (const handler of handlers) {\r\n            const result = handler.handle(action);\r\n            if (isAction(result)) {\r\n                promises.push(this.dispatch(result));\r\n            } else if (result !== undefined) {\r\n                promises.push(this.commandStack.execute(result));\r\n                this.blockUntil = result.blockUntil;\r\n            }\r\n        }\r\n        return Promise.all(promises) as Promise<any>;\r\n    }\r\n\r\n    protected handleBlocked(action: Action, predicate: (action: Action) => boolean): Promise<void> {\r\n        if (predicate(action)) {\r\n            this.blockUntil = undefined;\r\n            const result = this.handleAction(action);\r\n            const actions = this.postponedActions;\r\n            this.postponedActions = [];\r\n            for (const a of actions) {\r\n                this.dispatch(a.action).then(a.resolve, a.reject);\r\n            }\r\n            return result;\r\n        } else {\r\n            this.logger.log(this, 'Action is postponed due to block condition', action);\r\n            return new Promise((resolve, reject) => {\r\n                this.postponedActions.push({ action, resolve, reject });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface PostponedAction {\r\n    action: Action\r\n    resolve: () => void\r\n    reject: (reason: any) => void\r\n}\r\n\r\nexport type IActionDispatcherProvider = () => Promise<IActionDispatcher>;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nexport function isInjectable(constr: new (...args: unknown[]) => unknown): boolean {\r\n    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject, optional, interfaces } from \"inversify\";\r\nimport { TYPES } from \"../types\";\r\nimport { MultiInstanceRegistry } from \"../../utils/registry\";\r\nimport { isInjectable } from \"../../utils/inversify\";\r\nimport { ICommand } from \"../commands/command\";\r\nimport { Action } from \"sprotty-protocol\";\r\n\r\n/**\r\n * An action handler accepts an action and reacts to it by returning either a command to be\r\n * executed, or another action to be dispatched.\r\n */\r\nexport interface IActionHandler {\r\n    handle(action: Action): ICommand | Action | void\r\n}\r\n\r\n/**\r\n * Used to bind an action kind to an action handler factory in the ActionHandlerRegistry.\r\n */\r\nexport interface ActionHandlerRegistration {\r\n    actionKind: string\r\n    factory: () => IActionHandler\r\n}\r\n\r\n/**\r\n * Initializes and registers an action handler for multiple action kinds. In most cases\r\n * `ActionHandlerRegistration` should be used instead.\r\n */\r\nexport interface IActionHandlerInitializer {\r\n    initialize(registry: ActionHandlerRegistry): void\r\n}\r\n\r\n/**\r\n * The action handler registry maps actions to their handlers using the Action.kind property.\r\n */\r\n@injectable()\r\nexport class ActionHandlerRegistry extends MultiInstanceRegistry<IActionHandler> {\r\n\r\n    constructor(@multiInject(TYPES.ActionHandlerRegistration) @optional() registrations: ActionHandlerRegistration[],\r\n                @multiInject(TYPES.IActionHandlerInitializer) @optional() initializers: IActionHandlerInitializer[]) {\r\n        super();\r\n        registrations.forEach(registration =>\r\n            this.register(registration.actionKind, registration.factory())\r\n        );\r\n        initializers.forEach(initializer =>\r\n            this.initializeActionHandler(initializer)\r\n        );\r\n    }\r\n\r\n    initializeActionHandler(initializer: IActionHandlerInitializer): void {\r\n        initializer.initialize(this);\r\n    }\r\n}\r\n\r\n/**\r\n * Utility function to register an action handler for an action kind.\r\n */\r\nexport function configureActionHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        kind: string, constr: interfaces.ServiceIdentifier<IActionHandler>): void {\r\n    if (typeof constr === 'function') {\r\n        if (!isInjectable(constr)) {\r\n            throw new Error(`Action handlers should be @injectable: ${constr.name}`);\r\n        }\r\n        if (!context.isBound(constr)) {\r\n            context.bind(constr).toSelf();\r\n        }\r\n    }\r\n    context.bind(TYPES.ActionHandlerRegistration).toDynamicValue(ctx => ({\r\n        actionKind: kind,\r\n        factory: () => ctx.container.get(constr)\r\n    }));\r\n}\r\n\r\n/**\r\n * Utility function to register an action handler for an action kind.\r\n */\r\nexport function onAction(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        kind: string, handle: (action: Action) => ICommand | Action | void): void {\r\n    context.bind(TYPES.ActionHandlerRegistration).toConstantValue({\r\n        actionKind: kind,\r\n        factory: () => ({ handle })\r\n    });\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\n\r\n/**\r\n * Allows to lock the diagram by preventing certain actions from being\r\n * dispatched.\r\n *\r\n * This could for example be used to prevent the diagram from being modified\r\n * when the underlying model is broken or the server is unavailable.\r\n */\r\nexport interface IDiagramLocker {\r\n    isAllowed(action: Action): boolean\r\n}\r\n\r\n@injectable()\r\nexport class DefaultDiagramLocker implements IDiagramLocker {\r\n    isAllowed(action: Action): boolean {\r\n        return true;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/**\r\n * Slows down animations towards the begin and the end.\r\n *\r\n * @param x the value between 0 (start of animation) and 1 (end of\r\n *     animation) linearly interpolated in time.\r\n * @returns {number} the eased value between 0 and 1\r\n */\r\nexport function easeInOut(x: number): number {\r\n    if (x < 0.5)\r\n        return x * x * 2;\r\n    else\r\n        return 1 - (1 - x) * (1 - x) * 2;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { CommandExecutionContext } from \"../commands/command\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { easeInOut } from \"./easing\";\r\n\r\n/**\r\n * An animation uses the rendering loop of the browser to smoothly\r\n * calculate a transition between two states of a model element.\r\n */\r\nexport abstract class Animation {\r\n\r\n    constructor(protected context: CommandExecutionContext, protected ease: (x: number) => number = easeInOut) {\r\n    }\r\n\r\n    start(): Promise<SModelRootImpl> {\r\n        return new Promise<SModelRootImpl>(\r\n            (resolve: (model: SModelRootImpl) => void, reject: (model: SModelRootImpl) => void) => {\r\n                let start: number | undefined = undefined;\r\n                let frames = 0;\r\n                const lambda = (time: number) => {\r\n                    frames++;\r\n                    let dtime: number;\r\n                    if (start === undefined) {\r\n                        start = time;\r\n                        dtime = 0;\r\n                    } else {\r\n                        dtime = time - start;\r\n                    }\r\n                    const t = Math.min(1, dtime / this.context.duration);\r\n                    const current = this.tween(this.ease(t), this.context);\r\n                    this.context.modelChanged.update(current);\r\n                    if (t === 1) {\r\n                        this.context.logger.log(this, (frames * 1000 / this.context.duration) + ' fps');\r\n                        resolve(current);\r\n                    } else {\r\n                        this.context.syncer.onNextFrame(lambda);\r\n                    }\r\n                };\r\n                if (this.context.syncer.isAvailable()) {\r\n                    this.context.syncer.onNextFrame(lambda);\r\n                } else {\r\n                    const finalModel = this.tween(1, this.context);\r\n                    resolve(finalModel);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This method called by the animation at each rendering pass until\r\n     * the duration is reached. Implement it to interpolate the state.\r\n     *\r\n     * @param t varies between 0 (start of animation) and 1 (end of animation)\r\n     * @param context\r\n     */\r\n    abstract tween(t: number, context: CommandExecutionContext): SModelRootImpl;\r\n}\r\n\r\nexport class CompoundAnimation extends Animation {\r\n\r\n    constructor(protected model: SModelRootImpl,\r\n                protected override context: CommandExecutionContext,\r\n                public components: Animation[] = [],\r\n                protected override ease: (x: number) => number = easeInOut) {\r\n        super(context, ease);\r\n    }\r\n\r\n    include(animation: Animation): this {\r\n        this.components.push(animation);\r\n        return this;\r\n    }\r\n\r\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\r\n        for (const a of this.components) {\r\n            a.tween(t, context);\r\n        }\r\n        return this.model;\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { ILogger } from \"../../utils/logging\";\r\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { IModelFactory } from \"../model/smodel-factory\";\r\nimport { IViewer } from \"../views/viewer\";\r\n\r\n/**\r\n * A command holds the behaviour of an action.\r\n * It is executed on a command stack and can be undone / redone.\r\n *\r\n * A command should store all information it needs to undo itself at a\r\n * later stage. It typically resolves the model elements it is going\r\n * to manipulate as a first step in the execute method.\r\n *\r\n * Each command should define a static string property KIND that\r\n * matches the associated action. This is used as a key in the\r\n * ActionHandlerRegistry.\r\n *\r\n * Clients should not implement the ICommand interface directly but\r\n * rather inherit from one of its abstract implementators.\r\n */\r\nexport interface ICommand {\r\n    /**\r\n     * If this property is present, all following actions are blocked\r\n     * until the function returns `true`.\r\n     */\r\n    readonly blockUntil?: (action: Action) => boolean;\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn\r\n}\r\n\r\n/**\r\n * Commands return the changed model or a Promise for it. Promises\r\n * serve animating commands to render some intermediate states before\r\n * finishing. The CommandStack is in charge of chaining these promises,\r\n * such that they run sequentially only one at a time. Due to that\r\n * chaining, it is essential that a command does not make any assumption\r\n * on the state of the model before execute() is called.\r\n */\r\nexport type CommandReturn = SModelRootImpl | Promise<SModelRootImpl> | CommandResult;\r\n\r\n/**\r\n * The `CommandResult` allows to specify whether the model has changed\r\n * and the original action that caused the command to be executed. In case such\r\n * an action is given, it is passed to the viewer in order to link any\r\n * subsequent response action to the original request.\r\n */\r\nexport type CommandResult = { model: SModelRootImpl, modelChanged: boolean, cause?: Action };\r\n\r\n/**\r\n * Base class for all commands.\r\n *\r\n * Command instances are created via dependency injection and should take\r\n * the respective action as an injected constructor parameter. They must\r\n * also define a static <code>KIND</code> which is used to map an\r\n * <code>Action#kind</code>.\r\n *\r\n * <pre>\r\n * export class MyCommand extends Command {\r\n *   static KIND = 'MyCommand'\r\n *   constructor(@inject(TYPES.Action) action: MyAction) {\r\n *   ...\r\n * }\r\n * @inject(TYPES.Action)\r\n * </pre>\r\n */\r\n@injectable()\r\nexport abstract class Command implements ICommand {\r\n\r\n    abstract execute(context: CommandExecutionContext): CommandReturn;\r\n\r\n    abstract undo(context: CommandExecutionContext): CommandReturn;\r\n\r\n    abstract redo(context: CommandExecutionContext): CommandReturn;\r\n}\r\n\r\n/**\r\n * A mergeable command can accumulate subsequent commands of the same kind.\r\n *\r\n * For example, multiple subsequent move commands can be merged to yield a\r\n * single command, such that undo will roll them back altogether. Otherwise\r\n * the user would have to push CTRL-Z for each mouse move element that\r\n * resuted in a command.\r\n */\r\n@injectable()\r\nexport abstract class MergeableCommand extends Command {\r\n    /**\r\n     * Tries to merge the given command with this.\r\n     *\r\n     * @param command\r\n     * @param context\r\n     */\r\n    merge(command: ICommand, context: CommandExecutionContext): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * A hidden command is used to trigger the rendering of a model on a\r\n * hidden canvas.\r\n *\r\n * Some graphical elements are styled using CSS, others have bounds that\r\n * require to layout their children before being computed. In such cases\r\n * we cannot tell about the size of elements without acutally rendering\r\n * the DOM. We render them to an invisible canvas. This can be achieved\r\n * using hidden commands.\r\n *\r\n * Hidden commands do not change the model directly, and are as such\r\n * neither undoable nor redoable. The command stack does not push them on\r\n * any stack and forwards the resulting model to the invisible viewer.\r\n */\r\n@injectable()\r\nexport abstract class HiddenCommand extends Command {\r\n    abstract override execute(context: CommandExecutionContext): SModelRootImpl | CommandResult;\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        context.logger.error(this, 'Cannot undo a hidden command');\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        context.logger.error(this, 'Cannot redo a hidden command');\r\n        return context.root;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport abstract class PopupCommand extends Command {\r\n}\r\n\r\n/**\r\n * A system command is triggered by the system, e.g. in order to update bounds\r\n * in the model with data fetched from the DOM.\r\n *\r\n * As it is automatically triggered it should not count as a single command in\r\n * undo/redo operations. Into the bargain, such an automatic command could occur\r\n * after an undo and as such make the next redo command invalid because it is\r\n * based on a model state that has changed. The command stack handles system\r\n * commands in a special way to overcome these issues.\r\n */\r\n@injectable()\r\nexport abstract class SystemCommand extends Command {\r\n}\r\n\r\n/**\r\n * A reset command deletes all undo/redo stacks and cannot be undone.\r\n *\r\n * It marks a point of no return.\r\n */\r\n@injectable()\r\nexport abstract class ResetCommand extends Command {\r\n}\r\n\r\n/**\r\n * The data that is passed into the execution methods of a command to give it\r\n * access to the context.\r\n */\r\nexport interface CommandExecutionContext {\r\n    /** The current Sprotty model (i.e. the main model that is visible to the user) */\r\n    root: SModelRootImpl\r\n\r\n    /** Used to turn sprotty external model elements (e.g. from the action) into internal model elements */\r\n    modelFactory: IModelFactory\r\n\r\n    /** Allows to give some feedback to the console */\r\n    logger: ILogger\r\n\r\n    /** Used for anmiations to trigger the rendering of a new frame */\r\n    modelChanged: IViewer\r\n\r\n    /** Duration of an anmiation */\r\n    duration: number\r\n\r\n    /** Provides the ticks for animations */\r\n    syncer: AnimationFrameSyncer\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject, optional, interfaces, Container } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { isInjectable } from \"../../utils/inversify\";\r\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from \"../actions/action-handler\";\r\nimport { ICommand } from \"./command\";\r\nimport { TYPES } from \"../types\";\r\n\r\nexport class CommandActionHandler implements IActionHandler {\r\n    constructor(private commandRegistration: CommandRegistration) {\r\n    }\r\n\r\n    handle(action: Action): ICommand {\r\n        return this.commandRegistration.factory(action);\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class CommandActionHandlerInitializer implements IActionHandlerInitializer {\r\n\r\n    constructor(@multiInject(TYPES.CommandRegistration) @optional() protected registrations: CommandRegistration[]) {\r\n    }\r\n\r\n    initialize(registry: ActionHandlerRegistry): void {\r\n        this.registrations.forEach(registration =>\r\n            registry.register(registration.kind, new CommandActionHandler(registration))\r\n        );\r\n    }\r\n}\r\n\r\nexport interface CommandRegistration {\r\n    kind: string\r\n    factory: (a: Action) => ICommand\r\n}\r\n\r\nexport interface ICommandConstructor<T extends Action> {\r\n    KIND: string\r\n    new (a: T, ...args: any[]): ICommand\r\n}\r\n\r\n/**\r\n * Use this method in your DI configuration to register a new command to the diagram.\r\n */\r\nexport function configureCommand<T extends Action>(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        constr: ICommandConstructor<T>) {\r\n    if (!isInjectable(constr)) {\r\n        throw new Error(`Commands should be @injectable: ${constr.name}`);\r\n    }\r\n    if (!context.isBound(constr)) {\r\n        context.bind(constr).toSelf();\r\n    }\r\n    context.bind(TYPES.CommandRegistration).toDynamicValue(ctx => ({\r\n        kind: constr.KIND,\r\n        factory: (action: Action) => {\r\n            const childContainer = new Container();\r\n            childContainer.parent = ctx.container;\r\n            childContainer.bind(TYPES.Action).toConstantValue(action);\r\n            return childContainer.get<ICommand>(constr);\r\n        }\r\n    }));\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Container } from \"inversify\";\r\nimport { safeAssign } from \"sprotty-protocol/lib/utils/object\";\r\nimport { TYPES } from '../types';\r\n\r\n/**\r\n * Options for the command execution\r\n */\r\nexport interface CommandStackOptions {\r\n    /**\r\n     * The default duration of an animated command in milliseconds\r\n     */\r\n    defaultDuration: number\r\n\r\n    /**\r\n     * The maximum number of commands that can be undone. Once the undo stack\r\n     * reaches this number, any additional command that is pushed will remove\r\n     * one from the bottom of the stack.\r\n     *\r\n     * If negative, there is no limit, which results in a memory leak.\r\n     */\r\n    undoHistoryLimit: number\r\n}\r\n\r\nexport function overrideCommandStackOptions(container: Container, options: Partial<CommandStackOptions>): CommandStackOptions {\r\n    const defaultOptions = container.get<CommandStackOptions>(TYPES.CommandStackOptions);\r\n    safeAssign(defaultOptions, options);\r\n    return defaultOptions;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, postConstruct } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { TYPES } from \"../types\";\r\nimport { ILogger } from \"../../utils/logging\";\r\nimport { EMPTY_ROOT, IModelFactory } from \"../model/smodel-factory\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\r\nimport { IViewer, IViewerProvider } from \"../views/viewer\";\r\nimport { CommandStackOptions } from './command-stack-options';\r\nimport {\r\n    HiddenCommand, ICommand, CommandExecutionContext, CommandReturn, SystemCommand,\r\n    MergeableCommand, PopupCommand, ResetCommand, CommandResult\r\n} from './command';\r\n\r\n/**\r\n * The component that holds the current model and applies the commands\r\n * to change it.\r\n *\r\n * The command stack is called by the ActionDispatcher and forwards the\r\n * changed model to the Viewer that renders it.\r\n */\r\nexport interface ICommandStack {\r\n    /**\r\n     * Executes the given command on the current model and returns a\r\n     * Promise for the new result.\r\n     *\r\n     * Unless it is a special command, it is pushed to the undo stack\r\n     * such that it can be rolled back later and the redo stack is\r\n     * cleared.\r\n     */\r\n    execute(command: ICommand): Promise<SModelRootImpl>\r\n\r\n    /**\r\n     * Executes all of the given commands. As opposed to calling\r\n     * execute() multiple times, the Viewer is only updated once after\r\n     * the last command has been executed.\r\n     */\r\n    executeAll(commands: ICommand[]): Promise<SModelRootImpl>\r\n\r\n    /**\r\n     * Takes the topmost command from the undo stack, undoes its\r\n     * changes and pushes it ot the redo stack. Returns a Promise for\r\n     * the changed model.\r\n     */\r\n    undo(): Promise<SModelRootImpl>\r\n\r\n    /**\r\n     * Takes the topmost command from the redo stack, redoes its\r\n     * changes and pushes it ot the undo stack. Returns a Promise for\r\n     * the changed model.\r\n     */\r\n    redo(): Promise<SModelRootImpl>\r\n}\r\n\r\n/**\r\n * As part of the event cylce, the ICommandStack should be injected\r\n * using a provider to avoid cyclic injection dependencies.\r\n */\r\nexport type CommandStackProvider = () => Promise<ICommandStack>;\r\n\r\n/**\r\n * The implementation of the ICommandStack. Clients should not use this\r\n * class directly.\r\n *\r\n * The command stack holds the current model as the result of the current\r\n * promise. When a new command is executed/undone/redone, its execution is\r\n * chained using <code>Promise#then()</code> to the current Promise. This\r\n * way we can handle long running commands without blocking the current\r\n * thread.\r\n *\r\n * The command stack also does the special handling for special commands:\r\n *\r\n * System commands should be transparent to the user and as such be\r\n * automatically undone/redone with the next plain command. Additional care\r\n * must be taken that system commands that are executed after undo don't\r\n * break the correspondence between the topmost commands on the undo and\r\n * redo stacks.\r\n *\r\n * Hidden commands only tell the viewer to render a hidden model such that\r\n * its bounds can be extracted from the DOM and forwarded as separate actions.\r\n * Hidden commands should not leave any trace on the undo/redo/off stacks.\r\n *\r\n * Mergeable commands should be merged with their predecessor if possible,\r\n * such that e.g. multiple subsequent moves of the smae element can be undone\r\n * in one single step.\r\n */\r\n@injectable()\r\nexport class CommandStack implements ICommandStack {\r\n\r\n    @inject(TYPES.IModelFactory) protected modelFactory: IModelFactory;\r\n    @inject(TYPES.IViewerProvider) protected viewerProvider: IViewerProvider;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\r\n    @inject(TYPES.CommandStackOptions) protected options: CommandStackOptions;\r\n\r\n    protected currentPromise: Promise<CommandStackState>;\r\n\r\n    protected modelViewer?: IViewer;\r\n    protected hiddenModelViewer?: IViewer;\r\n    protected popupModelViewer?: IViewer;\r\n\r\n    protected undoStack: ICommand[] = [];\r\n    protected redoStack: ICommand[] = [];\r\n\r\n    /**\r\n     * System commands should be transparent to the user in undo/redo\r\n     * operations. When a system command is executed when the redo\r\n     * stack is not empty, it is pushed to offStack instead.\r\n     *\r\n     * On redo, all commands form this stack are undone such that the\r\n     * redo operation gets the exact same model as when it was executed\r\n     * first.\r\n     *\r\n     * On undo, all commands form this stack are undone as well as\r\n     * system ommands should be transparent to the user.\r\n     */\r\n    protected offStack: ICommand[] = [];\r\n\r\n    @postConstruct()\r\n    protected initialize() {\r\n        this.currentPromise = Promise.resolve({\r\n            main: {\r\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\r\n                modelChanged: false,\r\n            },\r\n            hidden: {\r\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\r\n                modelChanged: false,\r\n            },\r\n            popup: {\r\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\r\n                modelChanged: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    protected get currentModel(): Promise<SModelRootImpl> {\r\n        return this.currentPromise.then(\r\n            state => state.main.model\r\n        );\r\n    }\r\n\r\n    executeAll(commands: ICommand[]): Promise<SModelRootImpl> {\r\n        commands.forEach(\r\n            command => {\r\n                this.logger.log(this, 'Executing', command);\r\n                this.handleCommand(command, command.execute, this.mergeOrPush);\r\n            }\r\n        );\r\n        return this.thenUpdate();\r\n    }\r\n\r\n    execute(command: ICommand): Promise<SModelRootImpl> {\r\n        this.logger.log(this, 'Executing', command);\r\n        this.handleCommand(command, command.execute, this.mergeOrPush);\r\n        return this.thenUpdate();\r\n    }\r\n\r\n    undo(): Promise<SModelRootImpl> {\r\n        this.undoOffStackSystemCommands();\r\n        this.undoPreceedingSystemCommands();\r\n        const command = this.undoStack[this.undoStack.length - 1];\r\n        if (command !== undefined && !this.isBlockUndo(command)) {\r\n            this.undoStack.pop();\r\n            this.logger.log(this, 'Undoing', command);\r\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\r\n                this.redoStack.push(c);\r\n            });\r\n        }\r\n        return this.thenUpdate();\r\n    }\r\n\r\n    redo(): Promise<SModelRootImpl> {\r\n        this.undoOffStackSystemCommands();\r\n        const command = this.redoStack.pop();\r\n        if (command !== undefined) {\r\n            this.logger.log(this, 'Redoing', command);\r\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\r\n                this.pushToUndoStack(c);\r\n            });\r\n        }\r\n        this.redoFollowingSystemCommands();\r\n        return this.thenUpdate();\r\n    }\r\n\r\n    /**\r\n     * Chains the current promise with another Promise that performs the\r\n     * given operation on the given command.\r\n     *\r\n     * @param beforeResolve a function that is called directly before\r\n     *      resolving the Promise to return the new model. Usually puts the\r\n     *      command on the appropriate stack.\r\n     */\r\n    protected handleCommand(command: ICommand,\r\n                            operation: (context: CommandExecutionContext) => CommandReturn,\r\n                            beforeResolve: (command: ICommand, context: CommandExecutionContext) => void) {\r\n        this.currentPromise = this.currentPromise.then(state =>\r\n            new Promise<CommandStackState>(resolve => {\r\n                let target: 'main' | 'hidden' | 'popup';\r\n                if (command instanceof HiddenCommand)\r\n                    target = 'hidden';\r\n                else if (command instanceof PopupCommand)\r\n                    target = 'popup';\r\n                else\r\n                    target = 'main';\r\n                const context = this.createContext(state.main.model);\r\n\r\n                let commandResult: CommandReturn;\r\n                try {\r\n                    commandResult = operation.call(command, context);\r\n                } catch (error) {\r\n                    this.logger.error(this, \"Failed to execute command:\", error);\r\n                    commandResult = state[target].model;\r\n                }\r\n\r\n                const newState = copyState(state);\r\n                if (commandResult instanceof Promise) {\r\n                    commandResult.then(newModel => {\r\n                        if (target === 'main')\r\n                            beforeResolve.call(this, command, context);\r\n                        newState[target] = { model: newModel, modelChanged: true };\r\n                        resolve(newState);\r\n                    });\r\n                } else if (commandResult instanceof SModelRootImpl) {\r\n                    if (target === 'main')\r\n                        beforeResolve.call(this, command, context);\r\n                    newState[target] = { model: commandResult, modelChanged: true };\r\n                    resolve(newState);\r\n                } else {\r\n                    if (target === 'main')\r\n                        beforeResolve.call(this, command, context);\r\n                    newState[target] = {\r\n                        model: commandResult.model,\r\n                        modelChanged: state[target].modelChanged || commandResult.modelChanged,\r\n                        cause: commandResult.cause\r\n                    };\r\n                    resolve(newState);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    protected pushToUndoStack(command: ICommand) {\r\n        this.undoStack.push(command);\r\n        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)\r\n            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);\r\n    }\r\n\r\n    /**\r\n     * Notifies the Viewer to render the new model and/or the new hidden model\r\n     * and returns a Promise for the new model.\r\n     */\r\n    protected thenUpdate(): Promise<SModelRootImpl> {\r\n        this.currentPromise = this.currentPromise.then(state => {\r\n            const newState = copyState(state);\r\n            if (state.hidden.modelChanged) {\r\n                this.updateHidden(state.hidden.model, state.hidden.cause);\r\n                newState.hidden.modelChanged = false;\r\n                newState.hidden.cause = undefined;\r\n            }\r\n            if (state.main.modelChanged) {\r\n                this.update(state.main.model, state.main.cause);\r\n                newState.main.modelChanged = false;\r\n                newState.main.cause = undefined;\r\n            }\r\n            if (state.popup.modelChanged) {\r\n                this.updatePopup(state.popup.model, state.popup.cause);\r\n                newState.popup.modelChanged = false;\r\n                newState.popup.cause = undefined;\r\n            }\r\n            return newState;\r\n        });\r\n        return this.currentModel;\r\n    }\r\n\r\n    /**\r\n     * Notify the `ModelViewer` that the model has changed.\r\n     */\r\n    update(model: SModelRootImpl, cause?: Action): void {\r\n        if (this.modelViewer === undefined) {\r\n            this.modelViewer = this.viewerProvider.modelViewer;\r\n        }\r\n        this.modelViewer.update(model, cause);\r\n    }\r\n\r\n    /**\r\n     * Notify the `HiddenModelViewer` that the hidden model has changed.\r\n     */\r\n    updateHidden(model: SModelRootImpl, cause?: Action): void {\r\n        if (this.hiddenModelViewer === undefined) {\r\n            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;\r\n        }\r\n        this.hiddenModelViewer.update(model, cause);\r\n    }\r\n\r\n    /**\r\n     * Notify the `PopupModelViewer` that the popup model has changed.\r\n     */\r\n    updatePopup(model: SModelRootImpl, cause?: Action): void {\r\n        if (this.popupModelViewer === undefined) {\r\n            this.popupModelViewer = this.viewerProvider.popupModelViewer;\r\n        }\r\n        this.popupModelViewer.update(model, cause);\r\n    }\r\n\r\n    /**\r\n     * Handling of commands after their execution.\r\n     *\r\n     * Hidden commands are not pushed to any stack.\r\n     *\r\n     * System commands are pushed to the <code>offStack</code> when the redo\r\n     * stack is not empty, allowing to undo the before a redo to keep the chain\r\n     * of commands consistent.\r\n     *\r\n     * Mergable commands are merged if possible.\r\n     */\r\n    protected mergeOrPush(command: ICommand, context: CommandExecutionContext): void {\r\n        if (this.isBlockUndo(command)) {\r\n            this.undoStack = [];\r\n            this.redoStack = [];\r\n            this.offStack = [];\r\n            this.pushToUndoStack(command);\r\n            return;\r\n        }\r\n        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {\r\n            if (this.offStack.length > 0) {\r\n                const lastCommand = this.offStack[this.offStack.length - 1];\r\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\r\n                    return;\r\n            }\r\n            this.offStack.push(command);\r\n            return;\r\n        }\r\n        if (this.isPushToUndoStack(command)) {\r\n            this.offStack.forEach(c => this.undoStack.push(c));\r\n            this.offStack = [];\r\n            this.redoStack = [];\r\n            if (this.undoStack.length > 0) {\r\n                const lastCommand = this.undoStack[this.undoStack.length - 1];\r\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\r\n                    return;\r\n            }\r\n            this.pushToUndoStack(command);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverts all system commands on the offStack.\r\n     */\r\n    protected undoOffStackSystemCommands(): void {\r\n        let command = this.offStack.pop();\r\n        while (command !== undefined) {\r\n            this.logger.log(this, 'Undoing off-stack', command);\r\n            this.handleCommand(command, command.undo, () => {});\r\n            command = this.offStack.pop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * System commands should be transparent to the user, so this method\r\n     * is called from <code>undo()</code> to revert all system commands\r\n     * at the top of the undoStack.\r\n     */\r\n    protected undoPreceedingSystemCommands(): void {\r\n        let command = this.undoStack[this.undoStack.length - 1];\r\n        while (command !== undefined && this.isPushToOffStack(command)) {\r\n            this.undoStack.pop();\r\n            this.logger.log(this, 'Undoing', command);\r\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\r\n                this.redoStack.push(c);\r\n            });\r\n            command = this.undoStack[this.undoStack.length - 1];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * System commands should be transparent to the user, so this method\r\n     * is called from <code>redo()</code> to re-execute all system commands\r\n     * at the top of the redoStack.\r\n     */\r\n    protected redoFollowingSystemCommands(): void {\r\n        let command = this.redoStack[this.redoStack.length - 1];\r\n        while (command !== undefined && this.isPushToOffStack(command)) {\r\n            this.redoStack.pop();\r\n            this.logger.log(this, 'Redoing ', command);\r\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\r\n                this.pushToUndoStack(c);\r\n            });\r\n            command = this.redoStack[this.redoStack.length - 1];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Assembles the context object that is passed to the commands execution method.\r\n     */\r\n    protected createContext(currentModel: SModelRootImpl): CommandExecutionContext {\r\n        return {\r\n            root: currentModel,\r\n            modelChanged: this,\r\n            modelFactory: this.modelFactory,\r\n            duration: this.options.defaultDuration,\r\n            logger: this.logger,\r\n            syncer: this.syncer\r\n        };\r\n    }\r\n\r\n    protected isPushToOffStack(command: ICommand): boolean {\r\n        return command instanceof SystemCommand;\r\n    }\r\n\r\n    protected isPushToUndoStack(command: ICommand): boolean {\r\n        return !(command instanceof HiddenCommand);\r\n    }\r\n\r\n    protected isBlockUndo(command: ICommand): boolean {\r\n        return command instanceof ResetCommand;\r\n    }\r\n}\r\n\r\n/**\r\n * Internal type to pass the results between the promises in the `CommandStack`.\r\n */\r\nexport interface CommandStackState {\r\n    main: CommandResult,\r\n    hidden: CommandResult,\r\n    popup: CommandResult\r\n}\r\n\r\nfunction copyState(state: CommandStackState): CommandStackState {\r\n    return {\r\n        main: {...state.main},\r\n        hidden: {...state.hidden},\r\n        popup: {...state.popup}\r\n    };\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { almostEquals, Bounds, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { TYPES } from \"../types\";\r\nimport { IActionDispatcher } from '../actions/action-dispatcher';\r\nimport { IVNodePostprocessor } from \"../views/vnode-postprocessor\";\r\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\r\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from '../commands/command';\r\nimport { getWindowScroll } from \"../../utils/browser\";\r\n\r\n/**\r\n * Grabs the bounds from the root element in page coordinates and fires a\r\n * InitializeCanvasBoundsAction. This size is needed for other actions such\r\n * as FitToScreenAction.\r\n */\r\n@injectable()\r\nexport class CanvasBoundsInitializer implements IVNodePostprocessor {\r\n\r\n    protected rootAndVnode: [SModelRootImpl, VNode] | undefined;\r\n\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (element instanceof SModelRootImpl && !Dimension.isValid(element.canvasBounds)) {\r\n            this.rootAndVnode = [element, vnode];\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate() {\r\n        if (this.rootAndVnode !== undefined) {\r\n            const domElement = this.rootAndVnode[1].elm;\r\n            const oldBounds = this.rootAndVnode[0].canvasBounds;\r\n            if (domElement !== undefined) {\r\n                const newBounds = this.getBoundsInPage(domElement as Element);\r\n                if (!(almostEquals(newBounds.x, oldBounds.x)\r\n                        && almostEquals(newBounds.y, oldBounds.y)\r\n                        && almostEquals(newBounds.width, oldBounds.width)\r\n                        && almostEquals(newBounds.height, oldBounds.width)))\r\n                    this.actionDispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\r\n\r\n            }\r\n            this.rootAndVnode = undefined;\r\n        }\r\n    }\r\n\r\n    protected getBoundsInPage(element: Element) {\r\n        const bounds = element.getBoundingClientRect();\r\n        const scroll = getWindowScroll();\r\n        return {\r\n            x: bounds.left + scroll.x,\r\n            y: bounds.top + scroll.y,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n    }\r\n}\r\n\r\nexport interface InitializeCanvasBoundsAction extends Action {\r\n    kind: typeof InitializeCanvasBoundsAction.KIND\r\n    newCanvasBounds: Bounds\r\n}\r\nexport namespace InitializeCanvasBoundsAction {\r\n    export const KIND = 'initializeCanvasBounds';\r\n\r\n    export function create(newCanvasBounds: Bounds): InitializeCanvasBoundsAction {\r\n        return {\r\n            kind: KIND,\r\n            newCanvasBounds\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class InitializeCanvasBoundsCommand extends SystemCommand {\r\n    static readonly KIND: string = InitializeCanvasBoundsAction.KIND;\r\n\r\n    private newCanvasBounds: Bounds;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: InitializeCanvasBoundsAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.newCanvasBounds = this.action.newCanvasBounds;\r\n        context.root.canvasBounds = this.newCanvasBounds;\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return context.root;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { Action, SetModelAction } from \"sprotty-protocol/lib/actions\";\r\nimport { CommandExecutionContext, ResetCommand } from \"../commands/command\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { TYPES } from \"../types\";\r\nimport { InitializeCanvasBoundsCommand } from './initialize-canvas';\r\n\r\n@injectable()\r\nexport class SetModelCommand extends ResetCommand {\r\n    static readonly KIND = SetModelAction.KIND;\r\n\r\n    oldRoot: SModelRootImpl;\r\n    newRoot: SModelRootImpl;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SetModelAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): SModelRootImpl {\r\n        this.oldRoot = context.modelFactory.createRoot(context.root);\r\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\r\n        return this.newRoot;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): SModelRootImpl {\r\n        return this.oldRoot;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): SModelRootImpl {\r\n        return this.newRoot;\r\n    }\r\n\r\n    get blockUntil(): (action: Action) => boolean {\r\n        return action => action.kind === InitializeCanvasBoundsCommand.KIND;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { interfaces } from \"inversify\";\r\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { TYPES } from \"../types\";\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from \"./smodel\";\r\nimport { SModelElementRegistration, CustomFeatures } from \"./smodel-factory\";\r\n\r\n/**\r\n * Register a model element constructor for an element type.\r\n */\r\nexport function registerModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        type: string, constr: new () => SModelElementImpl, features?: CustomFeatures): void {\r\n    context.bind<SModelElementRegistration>(TYPES.SModelElementRegistration).toConstantValue({\r\n        type, constr, features\r\n    });\r\n}\r\n\r\n/**\r\n * Find a parent element that satisfies the given predicate.\r\n */\r\nexport function findParent(element: SModelElementImpl, predicate: (e: SModelElementImpl) => boolean): SModelElementImpl | undefined {\r\n    let current: SModelElementImpl | undefined = element;\r\n    while (current !== undefined) {\r\n        if (predicate(current))\r\n            return current;\r\n        else if (current instanceof SChildElementImpl)\r\n            current = current.parent;\r\n        else\r\n            current = undefined;\r\n    }\r\n    return current;\r\n}\r\n\r\n/**\r\n * Find a parent element that implements the feature identified with the given predicate.\r\n */\r\nexport function findParentByFeature<T>(element: SModelElementImpl, predicate: (t: SModelElementImpl) => t is SModelElementImpl & T): SModelElementImpl & T | undefined {\r\n    let current: SModelElementImpl | undefined = element;\r\n    while (current !== undefined) {\r\n        if (predicate(current))\r\n            return current;\r\n        else if (current instanceof SChildElementImpl)\r\n            current = current.parent;\r\n        else\r\n            current = undefined;\r\n    }\r\n    return current;\r\n}\r\n\r\n/**\r\n * Translate a point from the coordinate system of the source element to the coordinate system\r\n * of the target element.\r\n */\r\nexport function translatePoint(point: Point, source: SModelElementImpl, target: SModelElementImpl): Point {\r\n    if (source !== target) {\r\n        // Translate from the source to the root element\r\n        while (source instanceof SChildElementImpl) {\r\n            point = source.localToParent(point);\r\n            source = source.parent;\r\n            if (source === target)\r\n                return point;\r\n        }\r\n        // Translate from the root to the target element\r\n        const targetTrace = [];\r\n        while (target instanceof SChildElementImpl) {\r\n            targetTrace.push(target);\r\n            target = target.parent;\r\n        }\r\n        if (source !== target)\r\n            throw new Error(\"Incompatible source and target: \" + source.id + \", \" + target.id);\r\n        for (let i = targetTrace.length - 1; i >= 0; i--) {\r\n            point = targetTrace[i].parentToLocal(point);\r\n        }\r\n    }\r\n    return point;\r\n}\r\n\r\n/**\r\n * Translate some bounds from the coordinate system of the source element to the coordinate system\r\n * of the target element.\r\n */\r\nexport function translateBounds(bounds: Bounds, source: SModelElementImpl, target: SModelElementImpl): Bounds {\r\n    const upperLeft = translatePoint(bounds, source, target);\r\n    const lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);\r\n    return {\r\n        x: upperLeft.x,\r\n        y: upperLeft.y,\r\n        width: lowerRight.x - upperLeft.x,\r\n        height: lowerRight.y - upperLeft.y\r\n    };\r\n}\r\n\r\n/**\r\n * Tests if the given model contains an id of then given element or one of its descendants.\r\n */\r\nexport function containsSome(root: SModelRootImpl, element: SChildElementImpl): boolean {\r\n    const test = (el: SChildElementImpl) => root.index.getById(el.id) !== undefined;\r\n    const find = (elements: readonly SChildElementImpl[]): boolean => elements.some(el => test(el) || find(el.children));\r\n    return find([element]);\r\n}\r\n\r\n/**\r\n * Transforms the local bounds all the way up to the root.\r\n */\r\nexport function  transformToRootBounds(parent: SParentElementImpl, bounds: Bounds) {\r\n    while (parent instanceof SChildElementImpl) {\r\n        bounds = parent.localToParent(bounds);\r\n        parent = parent.parent;\r\n    }\r\n    return bounds;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { inject, injectable, multiInject, optional } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { InstanceRegistry } from \"../../utils/registry\";\r\nimport { CommandExecutionContext, SystemCommand, CommandReturn } from \"../commands/command\";\r\nimport { TYPES } from \"../types\";\r\nimport { IUIExtension } from \"./ui-extension\";\r\n\r\n/**\r\n * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.\r\n */\r\n@injectable()\r\nexport class UIExtensionRegistry extends InstanceRegistry<IUIExtension>  {\r\n    constructor(@multiInject(TYPES.IUIExtension) @optional() extensions: (IUIExtension)[] = []) {\r\n        super();\r\n        extensions.forEach((extension) => this.register(extension.id(), extension));\r\n    }\r\n}\r\n\r\n/**\r\n * Action to set the visibility state of the UI extension with the specified `id`.\r\n */\r\nexport interface SetUIExtensionVisibilityAction extends Action {\r\n    kind: typeof SetUIExtensionVisibilityAction.KIND;\r\n    extensionId: string\r\n    visible: boolean\r\n    contextElementsId: string[]\r\n}\r\nexport namespace SetUIExtensionVisibilityAction {\r\n    export const KIND = \"setUIExtensionVisibility\";\r\n\r\n    export function create(options: { extensionId: string, visible: boolean, contextElementsId?: string[] }): SetUIExtensionVisibilityAction {\r\n        return {\r\n            kind: KIND,\r\n            extensionId: options.extensionId,\r\n            visible: options.visible,\r\n            contextElementsId: options.contextElementsId ?? []\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SetUIExtensionVisibilityCommand extends SystemCommand {\r\n    static readonly KIND = SetUIExtensionVisibilityAction.KIND;\r\n\r\n    @inject(TYPES.UIExtensionRegistry) protected readonly registry: UIExtensionRegistry;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SetUIExtensionVisibilityAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const extension = this.registry.get(this.action.extensionId);\r\n        if (extension) {\r\n            this.action.visible ? extension.show(context.root, ...this.action.contextElementsId) : extension.hide();\r\n        }\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { inject, injectable } from \"inversify\";\r\nimport { hasOwnProperty } from \"sprotty-protocol\";\r\nimport { ILogger } from \"../../utils/logging\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { TYPES } from \"../types\";\r\nimport { ViewerOptions } from \"../views/viewer-options\";\r\n\r\n/**\r\n * A UI extension displaying additional UI elements on top of a sprotty diagram.\r\n */\r\nexport interface IUIExtension {\r\n    id(): string;\r\n    show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void;\r\n    hide(): void;\r\n    enableOnStartup?: boolean\r\n}\r\n\r\nexport function isUIExtension(object: unknown): object is IUIExtension {\r\n    return hasOwnProperty<string, Function>(object, 'id', 'function')\r\n    && hasOwnProperty<string, Function>(object, 'show', 'function')\r\n    && hasOwnProperty<string, Function>(object, 'hide', 'function');\r\n}\r\n\r\n/**\r\n * Abstract base class for UI extensions.\r\n */\r\n@injectable()\r\nexport abstract class AbstractUIExtension implements IUIExtension {\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n\r\n    protected containerElement: HTMLElement;\r\n    protected activeElement: Element | null;\r\n\r\n    abstract id(): string;\r\n    abstract containerClass(): string;\r\n\r\n    show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void {\r\n        this.activeElement = document.activeElement;\r\n        if (!this.containerElement) {\r\n            if (!this.initialize()) return;\r\n        }\r\n        this.onBeforeShow(this.containerElement, root, ...contextElementIds);\r\n        this.setContainerVisible(true);\r\n    }\r\n\r\n    hide(): void {\r\n        this.setContainerVisible(false);\r\n        this.restoreFocus();\r\n        this.activeElement = null;\r\n    }\r\n\r\n    protected restoreFocus() {\r\n        const focusedElement = this.activeElement as HTMLElement;\r\n        if (focusedElement) {\r\n            focusedElement.focus();\r\n        }\r\n    }\r\n\r\n    protected initialize(): boolean {\r\n        const baseDiv = document.getElementById(this.options.baseDiv);\r\n        if (!baseDiv) {\r\n            this.logger.warn(this, `Could not obtain sprotty base container for initializing UI extension ${this.id}`, this);\r\n            return false;\r\n        }\r\n        this.containerElement = this.getOrCreateContainer(baseDiv.id);\r\n        this.initializeContents(this.containerElement);\r\n        if (baseDiv) {\r\n            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    protected getOrCreateContainer(baseDivId: string): HTMLElement {\r\n        let container = document.getElementById(this.id());\r\n        if (container === null) {\r\n            container = document.createElement('div');\r\n            container.id = baseDivId + \"_\" + this.id();\r\n            container.classList.add(this.containerClass());\r\n        }\r\n        return container;\r\n    }\r\n\r\n    protected setContainerVisible(visible: boolean) {\r\n        if (this.containerElement) {\r\n            if (visible) {\r\n                this.containerElement.style.visibility = 'visible';\r\n                this.containerElement.style.opacity = '1';\r\n            } else {\r\n                this.containerElement.style.visibility = 'hidden';\r\n                this.containerElement.style.opacity = '0';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the `containerElement` under the given `context` before it becomes visible.\r\n     *\r\n     * Subclasses may override this method to, for instance, modifying the position of the\r\n     * `containerElement`, add or remove elements, etc. depending on the specified `root`\r\n     * or `contextElementIds`.\r\n     */\r\n    protected onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void {\r\n        // default: do nothing\r\n    }\r\n\r\n    /**\r\n     * Initializes the contents of this UI extension.\r\n     *\r\n     * Subclasses must implement this method to initialize the UI elements of this UI extension inside the specified `containerElement`.\r\n     */\r\n    protected abstract initializeContents(containerElement: HTMLElement): void;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { VNode } from \"snabbdom\";\r\n\r\nexport function setAttr(vnode: VNode, name: string, value: any) {\r\n    getAttrs(vnode)[name] = value;\r\n}\r\n\r\nexport function setClass(vnode: VNode, name: string, value: boolean) {\r\n    getClass(vnode)[name] = value;\r\n}\r\n\r\nexport function setNamespace(node: VNode, ns: string) {\r\n    if (node.data === undefined)\r\n        node.data = {};\r\n    node.data.ns = ns;\r\n    const children = node.children;\r\n    if (children !== undefined) {\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            if (typeof child !== 'string')\r\n                setNamespace(child, ns);\r\n        }\r\n    }\r\n}\r\n\r\nexport function copyClassesFromVNode(source: VNode, target: VNode) {\r\n    const classList = getClass(source);\r\n    Object.keys(classList).forEach(c => setClass(target, c, true));\r\n}\r\n\r\nexport function copyClassesFromElement(element: HTMLElement, target: VNode) {\r\n    const classList = element.classList;\r\n    for (let i = 0; i < classList.length; i++) {\r\n        const item = classList.item(i);\r\n        if (item)\r\n            setClass(target, item, true);\r\n    }\r\n}\r\n\r\nexport function mergeStyle(vnode: VNode, style: any) {\r\n    getData(vnode).style = {...(getData(vnode).style || {}), ...style};\r\n}\r\n\r\nexport function on(vnode: VNode, event: string, listener: (event: Event) => void) {\r\n    const val = getOn(vnode);\r\n    if (val[event]) {\r\n        throw new Error('EventListener for ' + event + ' already registered on VNode');\r\n    }\r\n    (val as any)[event] = listener;\r\n}\r\n\r\nexport function getAttrs(vnode: VNode) {\r\n    const data = getData(vnode);\r\n    if (!data.attrs)\r\n        data.attrs = {};\r\n    return data.attrs;\r\n}\r\n\r\nfunction getData(vnode: VNode) {\r\n    if (!vnode.data)\r\n        vnode.data = {};\r\n    return vnode.data;\r\n}\r\n\r\nfunction getClass(vnode: VNode) {\r\n    const data = getData(vnode);\r\n    if (!data.class)\r\n        data.class = {};\r\n    return data.class;\r\n}\r\n\r\nfunction getOn(vnode: VNode) {\r\n    const data = getData(vnode);\r\n    if (!data.on)\r\n        data.on = {};\r\n    return data.on;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, multiInject, optional } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { TYPES } from \"../types\";\r\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\r\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\r\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\r\nimport { on } from \"./vnode-utils\";\r\n\r\n@injectable()\r\nexport class KeyTool implements IVNodePostprocessor {\r\n\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n\r\n    constructor(@multiInject(TYPES.KeyListener)@optional() protected keyListeners: KeyListener[] = []) {}\r\n\r\n    register(keyListener: KeyListener) {\r\n        this.keyListeners.push(keyListener);\r\n    }\r\n\r\n    deregister(keyListener: KeyListener) {\r\n        const index = this.keyListeners.indexOf(keyListener);\r\n        if (index >= 0)\r\n            this.keyListeners.splice(index, 1);\r\n    }\r\n\r\n    protected handleEvent<K extends keyof KeyListener>(methodName: K, model: SModelRootImpl, event: KeyboardEvent) {\r\n        const actions = this.keyListeners\r\n            .map(listener => listener[methodName].apply(listener, [model, event]))\r\n            .reduce((a, b) => a.concat(b));\r\n        if (actions.length > 0) {\r\n            event.preventDefault();\r\n            this.actionDispatcher.dispatchAll(actions);\r\n        }\r\n    }\r\n\r\n    keyDown(element: SModelRootImpl, event: KeyboardEvent): void {\r\n        this.handleEvent('keyDown', element, event);\r\n    }\r\n\r\n    keyUp(element: SModelRootImpl, event: KeyboardEvent): void {\r\n        this.handleEvent('keyUp', element, event);\r\n    }\r\n\r\n    focus() {}\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (element instanceof SModelRootImpl) {\r\n            on(vnode, 'focus', this.focus.bind(this, element));\r\n            on(vnode, 'keydown', this.keyDown.bind(this, element));\r\n            on(vnode, 'keyup', this.keyUp.bind(this, element));\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate() {\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class KeyListener {\r\n    keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        return [];\r\n    }\r\n\r\n    keyUp(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { ViewerOptions } from \"./viewer-options\";\r\nimport { TYPES } from \"../types\";\r\nimport { SModelElementImpl } from \"../model/smodel\";\r\n\r\n@injectable()\r\nexport class DOMHelper {\r\n\r\n    @inject(TYPES.ViewerOptions) private viewerOptions: ViewerOptions;\r\n\r\n    private getPrefix() {\r\n        const prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?\r\n            this.viewerOptions.baseDiv + \"_\" : \"\";\r\n        return prefix;\r\n    }\r\n\r\n    createUniqueDOMElementId(element: SModelElementImpl): string {\r\n        return this.getPrefix() + element.id;\r\n    }\r\n\r\n    findSModelIdByDOMElement(element: Element): string {\r\n        return element.id.replace(this.getPrefix(), '');\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, multiInject, optional } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Action, isAction } from \"sprotty-protocol/lib/actions\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\r\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\r\nimport { TYPES } from \"../types\";\r\nimport { DOMHelper } from \"./dom-helper\";\r\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\r\nimport { on } from \"./vnode-utils\";\r\n\r\n@injectable()\r\nexport class MouseTool implements IVNodePostprocessor {\r\n\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\r\n\r\n    constructor(@multiInject(TYPES.MouseListener) @optional() protected mouseListeners: MouseListener[] = []) { }\r\n\r\n    register(mouseListener: MouseListener) {\r\n        this.mouseListeners.push(mouseListener);\r\n    }\r\n\r\n    deregister(mouseListener: MouseListener) {\r\n        const index = this.mouseListeners.indexOf(mouseListener);\r\n        if (index >= 0)\r\n            this.mouseListeners.splice(index, 1);\r\n    }\r\n\r\n    protected getTargetElement(model: SModelRootImpl, event: MouseEvent): SModelElementImpl | undefined {\r\n        let target = event.target as Element;\r\n        const index = model.index;\r\n        while (target) {\r\n            if (target.id) {\r\n                const element = index.getById(this.domHelper.findSModelIdByDOMElement(target));\r\n                if (element !== undefined)\r\n                    return element;\r\n            }\r\n            target = target.parentNode as Element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected handleEvent(methodName: MouseEventKind, model: SModelRootImpl, event: MouseEvent) {\r\n        this.focusOnMouseEvent(methodName, model);\r\n        const element = this.getTargetElement(model, event);\r\n        if (!element)\r\n            return;\r\n        const actions = this.mouseListeners\r\n            .map(listener => listener[methodName](element, event as WheelEvent))\r\n            .reduce((a, b) => a.concat(b));\r\n        if (actions.length > 0) {\r\n            event.preventDefault();\r\n            for (const actionOrPromise of actions) {\r\n                if (isAction(actionOrPromise)) {\r\n                    this.actionDispatcher.dispatch(actionOrPromise);\r\n                } else {\r\n                    actionOrPromise.then((action: Action) => {\r\n                        this.actionDispatcher.dispatch(action);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected focusOnMouseEvent<K extends keyof MouseListener>(methodName: K, model: SModelRootImpl) {\r\n        if (document && methodName === 'mouseDown') {\r\n            const domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));\r\n            if (domElement !== null && typeof domElement.focus === 'function')\r\n                domElement.focus();\r\n        }\r\n    }\r\n\r\n    mouseOver(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseOver', model, event);\r\n    }\r\n\r\n    mouseOut(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseOut', model, event);\r\n    }\r\n\r\n    mouseEnter(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseEnter', model, event);\r\n    }\r\n\r\n    mouseLeave(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseLeave', model, event);\r\n    }\r\n\r\n    mouseDown(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseDown', model, event);\r\n    }\r\n\r\n    mouseMove(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseMove', model, event);\r\n    }\r\n\r\n    mouseUp(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('mouseUp', model, event);\r\n    }\r\n\r\n    wheel(model: SModelRootImpl, event: WheelEvent) {\r\n        this.handleEvent('wheel', model, event);\r\n    }\r\n\r\n    contextMenu(model: SModelRootImpl, event: MouseEvent) {\r\n        event.preventDefault();\r\n        this.handleEvent('contextMenu', model, event);\r\n    }\r\n\r\n    doubleClick(model: SModelRootImpl, event: MouseEvent) {\r\n        this.handleEvent('doubleClick', model, event);\r\n    }\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl) {\r\n        if (element instanceof SModelRootImpl) {\r\n            on(vnode, 'mouseover', this.mouseOver.bind(this, element));\r\n            on(vnode, 'mouseout', this.mouseOut.bind(this, element));\r\n            on(vnode, 'mouseenter', this.mouseEnter.bind(this, element));\r\n            on(vnode, 'mouseleave', this.mouseLeave.bind(this, element));\r\n            on(vnode, 'mousedown', this.mouseDown.bind(this, element));\r\n            on(vnode, 'mouseup', this.mouseUp.bind(this, element));\r\n            on(vnode, 'mousemove', this.mouseMove.bind(this, element));\r\n            on(vnode, 'wheel', this.wheel.bind(this, element));\r\n            on(vnode, 'contextmenu', this.contextMenu.bind(this, element));\r\n            on(vnode, 'dblclick', this.doubleClick.bind(this, element));\r\n            on(vnode, 'dragover', (event: MouseEvent) => this.handleEvent('dragOver', element, event));\r\n            on(vnode, 'drop', (event: MouseEvent) => this.handleEvent('drop', element, event));\r\n        }\r\n        vnode = this.mouseListeners.reduce(\r\n            (n: VNode, listener: MouseListener) => listener.decorate(n, element),\r\n            vnode);\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate() {\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class PopupMouseTool extends MouseTool {\r\n    constructor(@multiInject(TYPES.PopupMouseListener) @optional() protected override mouseListeners: MouseListener[] = []) {\r\n        super(mouseListeners);\r\n    }\r\n}\r\n\r\nexport type MouseEventKind =\r\n    'mouseOver' | 'mouseOut' | 'mouseEnter' | 'mouseLeave' | 'mouseDown' | 'mouseMove' | 'mouseUp'\r\n    | 'wheel' | 'doubleClick' | 'contextMenu' | 'dragOver' | 'drop';\r\n\r\n@injectable()\r\nexport class MouseListener {\r\n\r\n    mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseEnter(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseLeave(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    wheel(target: SModelElementImpl, event: WheelEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    contextMenu(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    dragOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    drop(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [];\r\n    }\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        return vnode;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class MousePositionTracker extends MouseListener {\r\n\r\n    protected lastPosition: Point | undefined;\r\n\r\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`\r\n     * if no mouse cursor position was ever tracked yet.\r\n     */\r\n    get lastPositionOnDiagram(): Point | undefined {\r\n        return this.lastPosition;\r\n    }\r\n}\r\n", "export interface SnabbdomFragment extends DocumentFragment {\r\n  parent: Node | null;\r\n  firstChildNode: ChildNode | null;\r\n  lastChildNode: ChildNode | null;\r\n}\r\n\r\nexport interface DOMAPI {\r\n  createElement: (\r\n    tagName: any,\r\n    options?: ElementCreationOptions\r\n  ) => HTMLElement;\r\n  createElementNS: (\r\n    namespaceURI: string,\r\n    qualifiedName: string,\r\n    options?: ElementCreationOptions\r\n  ) => Element;\r\n  /**\r\n   * @experimental\r\n   * @todo Make it required when the fragment is considered stable.\r\n   */\r\n  createDocumentFragment?: () => SnabbdomFragment;\r\n  createTextNode: (text: string) => Text;\r\n  createComment: (text: string) => Comment;\r\n  insertBefore: (\r\n    parentNode: Node,\r\n    newNode: Node,\r\n    referenceNode: Node | null\r\n  ) => void;\r\n  removeChild: (node: Node, child: Node) => void;\r\n  appendChild: (node: Node, child: Node) => void;\r\n  parentNode: (node: Node) => Node | null;\r\n  nextSibling: (node: Node) => Node | null;\r\n  tagName: (elm: Element) => string;\r\n  setTextContent: (node: Node, text: string | null) => void;\r\n  getTextContent: (node: Node) => string | null;\r\n  isElement: (node: Node) => node is Element;\r\n  isText: (node: Node) => node is Text;\r\n  isComment: (node: Node) => node is Comment;\r\n  /**\r\n   * @experimental\r\n   * @todo Make it required when the fragment is considered stable.\r\n   */\r\n  isDocumentFragment?: (node: Node) => node is DocumentFragment;\r\n}\r\n\r\nfunction createElement(\r\n  tagName: any,\r\n  options?: ElementCreationOptions\r\n): HTMLElement {\r\n  return document.createElement(tagName, options);\r\n}\r\n\r\nfunction createElementNS(\r\n  namespaceURI: string,\r\n  qualifiedName: string,\r\n  options?: ElementCreationOptions\r\n): Element {\r\n  return document.createElementNS(namespaceURI, qualifiedName, options);\r\n}\r\n\r\nfunction createDocumentFragment(): SnabbdomFragment {\r\n  return parseFragment(document.createDocumentFragment());\r\n}\r\n\r\nfunction createTextNode(text: string): Text {\r\n  return document.createTextNode(text);\r\n}\r\n\r\nfunction createComment(text: string): Comment {\r\n  return document.createComment(text);\r\n}\r\n\r\nfunction insertBefore(\r\n  parentNode: Node,\r\n  newNode: Node,\r\n  referenceNode: Node | null\r\n): void {\r\n  if (isDocumentFragment(parentNode)) {\r\n    let node: Node | null = parentNode;\r\n    while (node && isDocumentFragment(node)) {\r\n      const fragment = parseFragment(node);\r\n      node = fragment.parent;\r\n    }\r\n    parentNode = node ?? parentNode;\r\n  }\r\n  if (isDocumentFragment(newNode)) {\r\n    newNode = parseFragment(newNode, parentNode);\r\n  }\r\n  if (referenceNode && isDocumentFragment(referenceNode)) {\r\n    referenceNode = parseFragment(referenceNode).firstChildNode;\r\n  }\r\n  parentNode.insertBefore(newNode, referenceNode);\r\n}\r\n\r\nfunction removeChild(node: Node, child: Node): void {\r\n  node.removeChild(child);\r\n}\r\n\r\nfunction appendChild(node: Node, child: Node): void {\r\n  if (isDocumentFragment(child)) {\r\n    child = parseFragment(child, node);\r\n  }\r\n  node.appendChild(child);\r\n}\r\n\r\nfunction parentNode(node: Node): Node | null {\r\n  if (isDocumentFragment(node)) {\r\n    while (node && isDocumentFragment(node)) {\r\n      const fragment = parseFragment(node);\r\n      node = fragment.parent as Node;\r\n    }\r\n    return node ?? null;\r\n  }\r\n  return node.parentNode;\r\n}\r\n\r\nfunction nextSibling(node: Node): Node | null {\r\n  if (isDocumentFragment(node)) {\r\n    const fragment = parseFragment(node);\r\n    const parent = parentNode(fragment);\r\n    if (parent && fragment.lastChildNode) {\r\n      const children = Array.from(parent.childNodes);\r\n      const index = children.indexOf(fragment.lastChildNode);\r\n      return children[index + 1] ?? null;\r\n    }\r\n    return null;\r\n  }\r\n  return node.nextSibling;\r\n}\r\n\r\nfunction tagName(elm: Element): string {\r\n  return elm.tagName;\r\n}\r\n\r\nfunction setTextContent(node: Node, text: string | null): void {\r\n  node.textContent = text;\r\n}\r\n\r\nfunction getTextContent(node: Node): string | null {\r\n  return node.textContent;\r\n}\r\n\r\nfunction isElement(node: Node): node is Element {\r\n  return node.nodeType === 1;\r\n}\r\n\r\nfunction isText(node: Node): node is Text {\r\n  return node.nodeType === 3;\r\n}\r\n\r\nfunction isComment(node: Node): node is Comment {\r\n  return node.nodeType === 8;\r\n}\r\n\r\nfunction isDocumentFragment(node: Node): node is DocumentFragment {\r\n  return node.nodeType === 11;\r\n}\r\n\r\nfunction parseFragment(\r\n  fragmentNode: DocumentFragment,\r\n  parentNode?: Node | null\r\n): SnabbdomFragment {\r\n  const fragment = fragmentNode as SnabbdomFragment;\r\n  fragment.parent ??= parentNode ?? null;\r\n  fragment.firstChildNode ??= fragmentNode.firstChild;\r\n  fragment.lastChildNode ??= fragmentNode.lastChild;\r\n  return fragment;\r\n}\r\n\r\nexport const htmlDomApi: DOMAPI = {\r\n  createElement,\r\n  createElementNS,\r\n  createTextNode,\r\n  createDocumentFragment,\r\n  createComment,\r\n  insertBefore,\r\n  removeChild,\r\n  appendChild,\r\n  parentNode,\r\n  nextSibling,\r\n  tagName,\r\n  setTextContent,\r\n  getTextContent,\r\n  isElement,\r\n  isText,\r\n  isComment,\r\n  isDocumentFragment,\r\n};\r\n", "import { Hooks } from \"./hooks\";\r\nimport { AttachData } from \"./helpers/attachto\";\r\nimport { VNodeStyle } from \"./modules/style\";\r\nimport { On } from \"./modules/eventlisteners\";\r\nimport { Attrs } from \"./modules/attributes\";\r\nimport { Classes } from \"./modules/class\";\r\nimport { Props } from \"./modules/props\";\r\nimport { Dataset } from \"./modules/dataset\";\r\n\r\nexport type Key = string | number | symbol;\r\n\r\nexport interface VNode {\r\n  sel: string | undefined;\r\n  data: VNodeData | undefined;\r\n  children: Array<VNode | string> | undefined;\r\n  elm: Node | undefined;\r\n  text: string | undefined;\r\n  key: Key | undefined;\r\n}\r\n\r\nexport interface VNodeData {\r\n  props?: Props;\r\n  attrs?: Attrs;\r\n  class?: Classes;\r\n  style?: VNodeStyle;\r\n  dataset?: Dataset;\r\n  on?: On;\r\n  attachData?: AttachData;\r\n  hook?: Hooks;\r\n  key?: Key;\r\n  ns?: string; // for SVGs\r\n  fn?: () => VNode; // for thunks\r\n  args?: any[]; // for thunks\r\n  is?: string; // for custom elements v1\r\n  [key: string]: any; // for any other 3rd party module\r\n}\r\n\r\nexport function vnode(\r\n  sel: string | undefined,\r\n  data: any | undefined,\r\n  children: Array<VNode | string> | undefined,\r\n  text: string | undefined,\r\n  elm: Element | DocumentFragment | Text | undefined\r\n): VNode {\r\n  const key = data === undefined ? undefined : data.key;\r\n  return { sel, data, children, text, elm, key };\r\n}\r\n", "export const array = Array.isArray;\r\nexport function primitive(s: any): s is string | number {\r\n  return (\r\n    typeof s === \"string\" ||\r\n    typeof s === \"number\" ||\r\n    s instanceof String ||\r\n    s instanceof Number\r\n  );\r\n}\r\n", "import { Module } from \"./modules/module\";\r\nimport { vnode, VNode } from \"./vnode\";\r\nimport * as is from \"./is\";\r\nimport { htmlDomApi, DOMAPI } from \"./htmldomapi\";\r\n\r\ntype NonUndefined<T> = T extends undefined ? never : T;\r\n\r\nfunction isUndef(s: any): boolean {\r\n  return s === undefined;\r\n}\r\nfunction isDef<A>(s: A): s is NonUndefined<A> {\r\n  return s !== undefined;\r\n}\r\n\r\ntype VNodeQueue = VNode[];\r\n\r\nconst emptyNode = vnode(\"\", {}, [], undefined, undefined);\r\n\r\nfunction sameVnode(vnode1: VNode, vnode2: VNode): boolean {\r\n  const isSameKey = vnode1.key === vnode2.key;\r\n  const isSameIs = vnode1.data?.is === vnode2.data?.is;\r\n  const isSameSel = vnode1.sel === vnode2.sel;\r\n  const isSameTextOrFragment =\r\n    !vnode1.sel && vnode1.sel === vnode2.sel\r\n      ? typeof vnode1.text === typeof vnode2.text\r\n      : true;\r\n\r\n  return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\r\n}\r\n\r\n/**\r\n * @todo Remove this function when the document fragment is considered stable.\r\n */\r\nfunction documentFragmentIsNotSupported(): never {\r\n  throw new Error(\"The document fragment is not supported on this platform.\");\r\n}\r\n\r\nfunction isElement(\r\n  api: DOMAPI,\r\n  vnode: Element | DocumentFragment | VNode\r\n): vnode is Element {\r\n  return api.isElement(vnode as any);\r\n}\r\n\r\nfunction isDocumentFragment(\r\n  api: DOMAPI,\r\n  vnode: DocumentFragment | VNode\r\n): vnode is DocumentFragment {\r\n  return api.isDocumentFragment!(vnode as any);\r\n}\r\n\r\ntype KeyToIndexMap = { [key: string]: number };\r\n\r\ntype ArraysOf<T> = {\r\n  [K in keyof T]: Array<T[K]>;\r\n};\r\n\r\ntype ModuleHooks = ArraysOf<Required<Module>>;\r\n\r\nfunction createKeyToOldIdx(\r\n  children: VNode[],\r\n  beginIdx: number,\r\n  endIdx: number\r\n): KeyToIndexMap {\r\n  const map: KeyToIndexMap = {};\r\n  for (let i = beginIdx; i <= endIdx; ++i) {\r\n    const key = children[i]?.key;\r\n    if (key !== undefined) {\r\n      map[key as string] = i;\r\n    }\r\n  }\r\n  return map;\r\n}\r\n\r\nconst hooks: Array<keyof Module> = [\r\n  \"create\",\r\n  \"update\",\r\n  \"remove\",\r\n  \"destroy\",\r\n  \"pre\",\r\n  \"post\",\r\n];\r\n\r\n// TODO Should `domApi` be put into this in the next major version bump?\r\nexport type Options = {\r\n  experimental?: {\r\n    fragments?: boolean;\r\n  };\r\n};\r\n\r\nexport function init(\r\n  modules: Array<Partial<Module>>,\r\n  domApi?: DOMAPI,\r\n  options?: Options\r\n) {\r\n  const cbs: ModuleHooks = {\r\n    create: [],\r\n    update: [],\r\n    remove: [],\r\n    destroy: [],\r\n    pre: [],\r\n    post: [],\r\n  };\r\n\r\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi;\r\n\r\n  for (const hook of hooks) {\r\n    for (const module of modules) {\r\n      const currentHook = module[hook];\r\n      if (currentHook !== undefined) {\r\n        (cbs[hook] as any[]).push(currentHook);\r\n      }\r\n    }\r\n  }\r\n\r\n  function emptyNodeAt(elm: Element) {\r\n    const id = elm.id ? \"#\" + elm.id : \"\";\r\n\r\n    // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.\r\n    // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring\r\n    const classes = elm.getAttribute(\"class\");\r\n\r\n    const c = classes ? \".\" + classes.split(\" \").join(\".\") : \"\";\r\n    return vnode(\r\n      api.tagName(elm).toLowerCase() + id + c,\r\n      {},\r\n      [],\r\n      undefined,\r\n      elm\r\n    );\r\n  }\r\n\r\n  function emptyDocumentFragmentAt(frag: DocumentFragment) {\r\n    return vnode(undefined, {}, [], undefined, frag);\r\n  }\r\n\r\n  function createRmCb(childElm: Node, listeners: number) {\r\n    return function rmCb() {\r\n      if (--listeners === 0) {\r\n        const parent = api.parentNode(childElm) as Node;\r\n        api.removeChild(parent, childElm);\r\n      }\r\n    };\r\n  }\r\n\r\n  function createElm(vnode: VNode, insertedVnodeQueue: VNodeQueue): Node {\r\n    let i: any;\r\n    let data = vnode.data;\r\n    if (data !== undefined) {\r\n      const init = data.hook?.init;\r\n      if (isDef(init)) {\r\n        init(vnode);\r\n        data = vnode.data;\r\n      }\r\n    }\r\n    const children = vnode.children;\r\n    const sel = vnode.sel;\r\n    if (sel === \"!\") {\r\n      if (isUndef(vnode.text)) {\r\n        vnode.text = \"\";\r\n      }\r\n      vnode.elm = api.createComment(vnode.text!);\r\n    } else if (sel !== undefined) {\r\n      // Parse selector\r\n      const hashIdx = sel.indexOf(\"#\");\r\n      const dotIdx = sel.indexOf(\".\", hashIdx);\r\n      const hash = hashIdx > 0 ? hashIdx : sel.length;\r\n      const dot = dotIdx > 0 ? dotIdx : sel.length;\r\n      const tag =\r\n        hashIdx !== -1 || dotIdx !== -1\r\n          ? sel.slice(0, Math.min(hash, dot))\r\n          : sel;\r\n      const elm = (vnode.elm =\r\n        isDef(data) && isDef((i = data.ns))\r\n          ? api.createElementNS(i, tag, data)\r\n          : api.createElement(tag, data));\r\n      if (hash < dot) elm.setAttribute(\"id\", sel.slice(hash + 1, dot));\r\n      if (dotIdx > 0)\r\n        elm.setAttribute(\"class\", sel.slice(dot + 1).replace(/\\./g, \" \"));\r\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\r\n      if (is.array(children)) {\r\n        for (i = 0; i < children.length; ++i) {\r\n          const ch = children[i];\r\n          if (ch != null) {\r\n            api.appendChild(elm, createElm(ch as VNode, insertedVnodeQueue));\r\n          }\r\n        }\r\n      } else if (is.primitive(vnode.text)) {\r\n        api.appendChild(elm, api.createTextNode(vnode.text));\r\n      }\r\n      const hook = vnode.data!.hook;\r\n      if (isDef(hook)) {\r\n        hook.create?.(emptyNode, vnode);\r\n        if (hook.insert) {\r\n          insertedVnodeQueue.push(vnode);\r\n        }\r\n      }\r\n    } else if (options?.experimental?.fragments && vnode.children) {\r\n      vnode.elm = (\r\n        api.createDocumentFragment ?? documentFragmentIsNotSupported\r\n      )();\r\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\r\n      for (i = 0; i < vnode.children.length; ++i) {\r\n        const ch = vnode.children[i];\r\n        if (ch != null) {\r\n          api.appendChild(\r\n            vnode.elm,\r\n            createElm(ch as VNode, insertedVnodeQueue)\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      vnode.elm = api.createTextNode(vnode.text!);\r\n    }\r\n    return vnode.elm;\r\n  }\r\n\r\n  function addVnodes(\r\n    parentElm: Node,\r\n    before: Node | null,\r\n    vnodes: VNode[],\r\n    startIdx: number,\r\n    endIdx: number,\r\n    insertedVnodeQueue: VNodeQueue\r\n  ) {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n      const ch = vnodes[startIdx];\r\n      if (ch != null) {\r\n        api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\r\n      }\r\n    }\r\n  }\r\n\r\n  function invokeDestroyHook(vnode: VNode) {\r\n    const data = vnode.data;\r\n    if (data !== undefined) {\r\n      data?.hook?.destroy?.(vnode);\r\n      for (let i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\r\n      if (vnode.children !== undefined) {\r\n        for (let j = 0; j < vnode.children.length; ++j) {\r\n          const child = vnode.children[j];\r\n          if (child != null && typeof child !== \"string\") {\r\n            invokeDestroyHook(child);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeVnodes(\r\n    parentElm: Node,\r\n    vnodes: VNode[],\r\n    startIdx: number,\r\n    endIdx: number\r\n  ): void {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n      let listeners: number;\r\n      let rm: () => void;\r\n      const ch = vnodes[startIdx];\r\n      if (ch != null) {\r\n        if (isDef(ch.sel)) {\r\n          invokeDestroyHook(ch);\r\n          listeners = cbs.remove.length + 1;\r\n          rm = createRmCb(ch.elm!, listeners);\r\n          for (let i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\r\n          const removeHook = ch?.data?.hook?.remove;\r\n          if (isDef(removeHook)) {\r\n            removeHook(ch, rm);\r\n          } else {\r\n            rm();\r\n          }\r\n        } else if (ch.children) {\r\n          // Fragment node\r\n          invokeDestroyHook(ch);\r\n          removeVnodes(\r\n            parentElm,\r\n            ch.children as VNode[],\r\n            0,\r\n            ch.children.length - 1\r\n          );\r\n        } else {\r\n          // Text node\r\n          api.removeChild(parentElm, ch.elm!);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateChildren(\r\n    parentElm: Node,\r\n    oldCh: VNode[],\r\n    newCh: VNode[],\r\n    insertedVnodeQueue: VNodeQueue\r\n  ) {\r\n    let oldStartIdx = 0;\r\n    let newStartIdx = 0;\r\n    let oldEndIdx = oldCh.length - 1;\r\n    let oldStartVnode = oldCh[0];\r\n    let oldEndVnode = oldCh[oldEndIdx];\r\n    let newEndIdx = newCh.length - 1;\r\n    let newStartVnode = newCh[0];\r\n    let newEndVnode = newCh[newEndIdx];\r\n    let oldKeyToIdx: KeyToIndexMap | undefined;\r\n    let idxInOld: number;\r\n    let elmToMove: VNode;\r\n    let before: any;\r\n\r\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n      if (oldStartVnode == null) {\r\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\r\n      } else if (oldEndVnode == null) {\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n      } else if (newStartVnode == null) {\r\n        newStartVnode = newCh[++newStartIdx];\r\n      } else if (newEndVnode == null) {\r\n        newEndVnode = newCh[--newEndIdx];\r\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\r\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\r\n        oldStartVnode = oldCh[++oldStartIdx];\r\n        newStartVnode = newCh[++newStartIdx];\r\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\r\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n        newEndVnode = newCh[--newEndIdx];\r\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\r\n        // Vnode moved right\r\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\r\n        api.insertBefore(\r\n          parentElm,\r\n          oldStartVnode.elm!,\r\n          api.nextSibling(oldEndVnode.elm!)\r\n        );\r\n        oldStartVnode = oldCh[++oldStartIdx];\r\n        newEndVnode = newCh[--newEndIdx];\r\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\r\n        // Vnode moved left\r\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\r\n        api.insertBefore(parentElm, oldEndVnode.elm!, oldStartVnode.elm!);\r\n        oldEndVnode = oldCh[--oldEndIdx];\r\n        newStartVnode = newCh[++newStartIdx];\r\n      } else {\r\n        if (oldKeyToIdx === undefined) {\r\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\r\n        }\r\n        idxInOld = oldKeyToIdx[newStartVnode.key as string];\r\n        if (isUndef(idxInOld)) {\r\n          // New element\r\n          api.insertBefore(\r\n            parentElm,\r\n            createElm(newStartVnode, insertedVnodeQueue),\r\n            oldStartVnode.elm!\r\n          );\r\n        } else {\r\n          elmToMove = oldCh[idxInOld];\r\n          if (elmToMove.sel !== newStartVnode.sel) {\r\n            api.insertBefore(\r\n              parentElm,\r\n              createElm(newStartVnode, insertedVnodeQueue),\r\n              oldStartVnode.elm!\r\n            );\r\n          } else {\r\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\r\n            oldCh[idxInOld] = undefined as any;\r\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVnode.elm!);\r\n          }\r\n        }\r\n        newStartVnode = newCh[++newStartIdx];\r\n      }\r\n    }\r\n\r\n    if (newStartIdx <= newEndIdx) {\r\n      before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\r\n      addVnodes(\r\n        parentElm,\r\n        before,\r\n        newCh,\r\n        newStartIdx,\r\n        newEndIdx,\r\n        insertedVnodeQueue\r\n      );\r\n    }\r\n    if (oldStartIdx <= oldEndIdx) {\r\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\r\n    }\r\n  }\r\n\r\n  function patchVnode(\r\n    oldVnode: VNode,\r\n    vnode: VNode,\r\n    insertedVnodeQueue: VNodeQueue\r\n  ) {\r\n    const hook = vnode.data?.hook;\r\n    hook?.prepatch?.(oldVnode, vnode);\r\n    const elm = (vnode.elm = oldVnode.elm)!;\r\n    if (oldVnode === vnode) return;\r\n    if (\r\n      vnode.data !== undefined ||\r\n      (isDef(vnode.text) && vnode.text !== oldVnode.text)\r\n    ) {\r\n      vnode.data ??= {};\r\n      oldVnode.data ??= {};\r\n      for (let i = 0; i < cbs.update.length; ++i)\r\n        cbs.update[i](oldVnode, vnode);\r\n      vnode.data?.hook?.update?.(oldVnode, vnode);\r\n    }\r\n    const oldCh = oldVnode.children as VNode[];\r\n    const ch = vnode.children as VNode[];\r\n    if (isUndef(vnode.text)) {\r\n      if (isDef(oldCh) && isDef(ch)) {\r\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\r\n      } else if (isDef(ch)) {\r\n        if (isDef(oldVnode.text)) api.setTextContent(elm, \"\");\r\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\r\n      } else if (isDef(oldCh)) {\r\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n      } else if (isDef(oldVnode.text)) {\r\n        api.setTextContent(elm, \"\");\r\n      }\r\n    } else if (oldVnode.text !== vnode.text) {\r\n      if (isDef(oldCh)) {\r\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n      }\r\n      api.setTextContent(elm, vnode.text!);\r\n    }\r\n    hook?.postpatch?.(oldVnode, vnode);\r\n  }\r\n\r\n  return function patch(\r\n    oldVnode: VNode | Element | DocumentFragment,\r\n    vnode: VNode\r\n  ): VNode {\r\n    let i: number, elm: Node, parent: Node;\r\n    const insertedVnodeQueue: VNodeQueue = [];\r\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\r\n\r\n    if (isElement(api, oldVnode)) {\r\n      oldVnode = emptyNodeAt(oldVnode);\r\n    } else if (isDocumentFragment(api, oldVnode)) {\r\n      oldVnode = emptyDocumentFragmentAt(oldVnode);\r\n    }\r\n\r\n    if (sameVnode(oldVnode, vnode)) {\r\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\r\n    } else {\r\n      elm = oldVnode.elm!;\r\n      parent = api.parentNode(elm) as Node;\r\n\r\n      createElm(vnode, insertedVnodeQueue);\r\n\r\n      if (parent !== null) {\r\n        api.insertBefore(parent, vnode.elm!, api.nextSibling(elm));\r\n        removeVnodes(parent, [oldVnode], 0, 0);\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\r\n      insertedVnodeQueue[i].data!.hook!.insert!(insertedVnodeQueue[i]);\r\n    }\r\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\r\n    return vnode;\r\n  };\r\n}\r\n", "import { vnode, VNode, VNodeData } from \"./vnode\";\r\nimport * as is from \"./is\";\r\n\r\nexport type VNodes = VNode[];\r\nexport type VNodeChildElement =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | String\r\n  | Number\r\n  | undefined\r\n  | null;\r\nexport type ArrayOrElement<T> = T | T[];\r\nexport type VNodeChildren = ArrayOrElement<VNodeChildElement>;\r\n\r\nexport function addNS(\r\n  data: any,\r\n  children: Array<VNode | string> | undefined,\r\n  sel: string | undefined\r\n): void {\r\n  data.ns = \"http://www.w3.org/2000/svg\";\r\n  if (sel !== \"foreignObject\" && children !== undefined) {\r\n    for (let i = 0; i < children.length; ++i) {\r\n      const child = children[i];\r\n      if (typeof child === \"string\") continue;\r\n      const childData = child.data;\r\n      if (childData !== undefined) {\r\n        addNS(childData, child.children as VNodes, child.sel);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function h(sel: string): VNode;\r\nexport function h(sel: string, data: VNodeData | null): VNode;\r\nexport function h(sel: string, children: VNodeChildren): VNode;\r\nexport function h(\r\n  sel: string,\r\n  data: VNodeData | null,\r\n  children: VNodeChildren\r\n): VNode;\r\nexport function h(sel: any, b?: any, c?: any): VNode {\r\n  let data: VNodeData = {};\r\n  let children: any;\r\n  let text: any;\r\n  let i: number;\r\n  if (c !== undefined) {\r\n    if (b !== null) {\r\n      data = b;\r\n    }\r\n    if (is.array(c)) {\r\n      children = c;\r\n    } else if (is.primitive(c)) {\r\n      text = c.toString();\r\n    } else if (c && c.sel) {\r\n      children = [c];\r\n    }\r\n  } else if (b !== undefined && b !== null) {\r\n    if (is.array(b)) {\r\n      children = b;\r\n    } else if (is.primitive(b)) {\r\n      text = b.toString();\r\n    } else if (b && b.sel) {\r\n      children = [b];\r\n    } else {\r\n      data = b;\r\n    }\r\n  }\r\n  if (children !== undefined) {\r\n    for (i = 0; i < children.length; ++i) {\r\n      if (is.primitive(children[i]))\r\n        children[i] = vnode(\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          children[i],\r\n          undefined\r\n        );\r\n    }\r\n  }\r\n  if (\r\n    sel[0] === \"s\" &&\r\n    sel[1] === \"v\" &&\r\n    sel[2] === \"g\" &&\r\n    (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")\r\n  ) {\r\n    addNS(data, children, sel);\r\n  }\r\n  return vnode(sel, data, children, text, undefined);\r\n}\r\n\r\n/**\r\n * @experimental\r\n */\r\nexport function fragment(children: VNodeChildren): VNode {\r\n  let c: any;\r\n  let text: any;\r\n\r\n  if (is.array(children)) {\r\n    c = children;\r\n  } else if (is.primitive(c)) {\r\n    text = children;\r\n  } else if (c && c.sel) {\r\n    c = [children];\r\n  }\r\n\r\n  if (c !== undefined) {\r\n    for (let i = 0; i < c.length; ++i) {\r\n      if (is.primitive(c[i]))\r\n        c[i] = vnode(undefined, undefined, undefined, c[i], undefined);\r\n    }\r\n  }\r\n\r\n  return vnode(undefined, {}, c, text, undefined);\r\n}\r\n", "import { VNode, VNodeData } from \"./vnode\";\r\nimport { h, addNS } from \"./h\";\r\n\r\nexport interface ThunkData extends VNodeData {\r\n  fn: () => VNode;\r\n  args: any[];\r\n}\r\n\r\nexport interface Thunk extends VNode {\r\n  data: ThunkData;\r\n}\r\n\r\nexport interface ThunkFn {\r\n  (sel: string, fn: (...args: any[]) => any, args: any[]): Thunk;\r\n  (sel: string, key: any, fn: (...args: any[]) => any, args: any[]): Thunk;\r\n}\r\n\r\nfunction copyToThunk(vnode: VNode, thunk: VNode): void {\r\n  const ns = thunk.data?.ns;\r\n  (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\r\n  (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\r\n  thunk.data = vnode.data;\r\n  thunk.children = vnode.children;\r\n  thunk.text = vnode.text;\r\n  thunk.elm = vnode.elm;\r\n  if (ns) addNS(thunk.data, thunk.children, thunk.sel);\r\n}\r\n\r\nfunction init(thunk: VNode): void {\r\n  const cur = thunk.data as VNodeData;\r\n  const vnode = (cur.fn as any)(...cur.args!);\r\n  copyToThunk(vnode, thunk);\r\n}\r\n\r\nfunction prepatch(oldVnode: VNode, thunk: VNode): void {\r\n  let i: number;\r\n  const old = oldVnode.data as VNodeData;\r\n  const cur = thunk.data as VNodeData;\r\n  const oldArgs = old.args;\r\n  const args = cur.args;\r\n  if (old.fn !== cur.fn || (oldArgs as any).length !== (args as any).length) {\r\n    copyToThunk((cur.fn as any)(...args!), thunk);\r\n    return;\r\n  }\r\n  for (i = 0; i < (args as any).length; ++i) {\r\n    if ((oldArgs as any)[i] !== (args as any)[i]) {\r\n      copyToThunk((cur.fn as any)(...args!), thunk);\r\n      return;\r\n    }\r\n  }\r\n  copyToThunk(oldVnode, thunk);\r\n}\r\n\r\nexport const thunk = function thunk(\r\n  sel: string,\r\n  key?: any,\r\n  fn?: any,\r\n  args?: any\r\n): VNode {\r\n  if (args === undefined) {\r\n    args = fn;\r\n    fn = key;\r\n    key = undefined;\r\n  }\r\n  return h(sel, {\r\n    key: key,\r\n    hook: { init, prepatch },\r\n    fn: fn,\r\n    args: args,\r\n  });\r\n} as ThunkFn;\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\n\r\nexport interface AttachData {\r\n  [key: string]: any;\r\n  [i: number]: any;\r\n  placeholder?: any;\r\n  real?: Node;\r\n}\r\n\r\ninterface VNodeDataWithAttach extends VNodeData {\r\n  attachData: AttachData;\r\n}\r\n\r\ninterface VNodeWithAttachData extends VNode {\r\n  data: VNodeDataWithAttach;\r\n}\r\n\r\nfunction pre(vnode: VNodeWithAttachData, newVnode: VNodeWithAttachData): void {\r\n  const attachData = vnode.data.attachData;\r\n  // Copy created placeholder and real element from old vnode\r\n  newVnode.data.attachData.placeholder = attachData.placeholder;\r\n  newVnode.data.attachData.real = attachData.real;\r\n  // Mount real element in vnode so the patch process operates on it\r\n  vnode.elm = vnode.data.attachData.real;\r\n}\r\n\r\nfunction post(_: any, vnode: VNodeWithAttachData): void {\r\n  // Mount dummy placeholder in vnode so potential reorders use it\r\n  vnode.elm = vnode.data.attachData.placeholder;\r\n}\r\n\r\nfunction destroy(vnode: VNodeWithAttachData): void {\r\n  // Remove placeholder\r\n  if (vnode.elm !== undefined) {\r\n    (vnode.elm.parentNode as HTMLElement).removeChild(vnode.elm);\r\n  }\r\n  // Remove real element from where it was inserted\r\n  vnode.elm = vnode.data.attachData.real;\r\n}\r\n\r\nfunction create(_: any, vnode: VNodeWithAttachData): void {\r\n  const real = vnode.elm;\r\n  const attachData = vnode.data.attachData;\r\n  const placeholder = document.createElement(\"span\");\r\n  // Replace actual element with dummy placeholder\r\n  // Snabbdom will then insert placeholder instead\r\n  vnode.elm = placeholder;\r\n  attachData.target.appendChild(real);\r\n  attachData.real = real;\r\n  attachData.placeholder = placeholder;\r\n}\r\n\r\nexport function attachTo(target: Element, vnode: VNode): VNode {\r\n  if (vnode.data === undefined) vnode.data = {};\r\n  if (vnode.data.hook === undefined) vnode.data.hook = {};\r\n  const data = vnode.data;\r\n  const hook = vnode.data.hook;\r\n  data.attachData = { target: target, placeholder: undefined, real: undefined };\r\n  hook.create = create;\r\n  hook.prepatch = pre;\r\n  hook.postpatch = post;\r\n  hook.destroy = destroy;\r\n  return vnode;\r\n}\r\n", "import { addNS } from \"./h\";\r\nimport { vnode, VNode } from \"./vnode\";\r\nimport { htmlDomApi, DOMAPI } from \"./htmldomapi\";\r\n\r\nexport function toVNode(node: Node, domApi?: DOMAPI): VNode {\r\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi;\r\n  let text: string;\r\n  if (api.isElement(node)) {\r\n    const id = node.id ? \"#\" + node.id : \"\";\r\n    const cn = node.getAttribute(\"class\");\r\n    const c = cn ? \".\" + cn.split(\" \").join(\".\") : \"\";\r\n    const sel = api.tagName(node).toLowerCase() + id + c;\r\n    const attrs: any = {};\r\n    const dataset: Record<string, string> = {};\r\n    const data: Record<string, any> = {};\r\n\r\n    const children: VNode[] = [];\r\n    let name: string;\r\n    let i: number, n: number;\r\n    const elmAttrs = node.attributes;\r\n    const elmChildren = node.childNodes;\r\n    for (i = 0, n = elmAttrs.length; i < n; i++) {\r\n      name = elmAttrs[i].nodeName;\r\n      if (\r\n        name[0] === \"d\" &&\r\n        name[1] === \"a\" &&\r\n        name[2] === \"t\" &&\r\n        name[3] === \"a\" &&\r\n        name[4] === \"-\"\r\n      ) {\r\n        dataset[name.slice(5)] = elmAttrs[i].nodeValue || \"\";\r\n      } else if (name !== \"id\" && name !== \"class\") {\r\n        attrs[name] = elmAttrs[i].nodeValue;\r\n      }\r\n    }\r\n    for (i = 0, n = elmChildren.length; i < n; i++) {\r\n      children.push(toVNode(elmChildren[i], domApi));\r\n    }\r\n\r\n    if (Object.keys(attrs).length > 0) data.attrs = attrs;\r\n    if (Object.keys(dataset).length > 0) data.dataset = dataset;\r\n\r\n    if (\r\n      sel[0] === \"s\" &&\r\n      sel[1] === \"v\" &&\r\n      sel[2] === \"g\" &&\r\n      (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")\r\n    ) {\r\n      addNS(data, children, sel);\r\n    }\r\n    return vnode(sel, data, children, undefined, node);\r\n  } else if (api.isText(node)) {\r\n    text = api.getTextContent(node) as string;\r\n    return vnode(undefined, undefined, undefined, text, node);\r\n  } else if (api.isComment(node)) {\r\n    text = api.getTextContent(node) as string;\r\n    return vnode(\"!\", {}, [], text, node as any);\r\n  } else {\r\n    return vnode(\"\", {}, [], undefined, node as any);\r\n  }\r\n}\r\n", "export {};\r\n//# sourceMappingURL=hooks.js.map", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\nexport type Attrs = Record<string, string | number | boolean>;\r\n\r\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\r\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\r\nconst colonChar = 58;\r\nconst xChar = 120;\r\n\r\nfunction updateAttrs(oldVnode: VNode, vnode: VNode): void {\r\n  let key: string;\r\n  const elm: Element = vnode.elm as Element;\r\n  let oldAttrs = (oldVnode.data as VNodeData).attrs;\r\n  let attrs = (vnode.data as VNodeData).attrs;\r\n\r\n  if (!oldAttrs && !attrs) return;\r\n  if (oldAttrs === attrs) return;\r\n  oldAttrs = oldAttrs || {};\r\n  attrs = attrs || {};\r\n\r\n  // update modified attributes, add new attributes\r\n  for (key in attrs) {\r\n    const cur = attrs[key];\r\n    const old = oldAttrs[key];\r\n    if (old !== cur) {\r\n      if (cur === true) {\r\n        elm.setAttribute(key, \"\");\r\n      } else if (cur === false) {\r\n        elm.removeAttribute(key);\r\n      } else {\r\n        if (key.charCodeAt(0) !== xChar) {\r\n          elm.setAttribute(key, cur as any);\r\n        } else if (key.charCodeAt(3) === colonChar) {\r\n          // Assume xml namespace\r\n          elm.setAttributeNS(xmlNS, key, cur as any);\r\n        } else if (key.charCodeAt(5) === colonChar) {\r\n          // Assume xlink namespace\r\n          elm.setAttributeNS(xlinkNS, key, cur as any);\r\n        } else {\r\n          elm.setAttribute(key, cur as any);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // remove removed attributes\r\n  // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\r\n  // the other option is to remove all attributes with value == undefined\r\n  for (key in oldAttrs) {\r\n    if (!(key in attrs)) {\r\n      elm.removeAttribute(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport const attributesModule: Module = {\r\n  create: updateAttrs,\r\n  update: updateAttrs,\r\n};\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\nexport type Classes = Record<string, boolean>;\r\n\r\nfunction updateClass(oldVnode: VNode, vnode: VNode): void {\r\n  let cur: any;\r\n  let name: string;\r\n  const elm: Element = vnode.elm as Element;\r\n  let oldClass = (oldVnode.data as VNodeData).class;\r\n  let klass = (vnode.data as VNodeData).class;\r\n\r\n  if (!oldClass && !klass) return;\r\n  if (oldClass === klass) return;\r\n  oldClass = oldClass || {};\r\n  klass = klass || {};\r\n\r\n  for (name in oldClass) {\r\n    if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {\r\n      // was `true` and now not provided\r\n      elm.classList.remove(name);\r\n    }\r\n  }\r\n  for (name in klass) {\r\n    cur = klass[name];\r\n    if (cur !== oldClass[name]) {\r\n      (elm.classList as any)[cur ? \"add\" : \"remove\"](name);\r\n    }\r\n  }\r\n}\r\n\r\nexport const classModule: Module = { create: updateClass, update: updateClass };\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\nexport type Dataset = Record<string, string>;\r\n\r\nconst CAPS_REGEX = /[A-Z]/g;\r\n\r\nfunction updateDataset(oldVnode: VNode, vnode: VNode): void {\r\n  const elm: HTMLElement = vnode.elm as HTMLElement;\r\n  let oldDataset = (oldVnode.data as VNodeData).dataset;\r\n  let dataset = (vnode.data as VNodeData).dataset;\r\n  let key: string;\r\n\r\n  if (!oldDataset && !dataset) return;\r\n  if (oldDataset === dataset) return;\r\n  oldDataset = oldDataset || {};\r\n  dataset = dataset || {};\r\n  const d = elm.dataset;\r\n\r\n  for (key in oldDataset) {\r\n    if (!dataset[key]) {\r\n      if (d) {\r\n        if (key in d) {\r\n          delete d[key];\r\n        }\r\n      } else {\r\n        elm.removeAttribute(\r\n          \"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase()\r\n        );\r\n      }\r\n    }\r\n  }\r\n  for (key in dataset) {\r\n    if (oldDataset[key] !== dataset[key]) {\r\n      if (d) {\r\n        d[key] = dataset[key];\r\n      } else {\r\n        elm.setAttribute(\r\n          \"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase(),\r\n          dataset[key]\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const datasetModule: Module = {\r\n  create: updateDataset,\r\n  update: updateDataset,\r\n};\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\ntype Listener<T> = (this: VNode, ev: T, vnode: VNode) => void;\r\n\r\nexport type On = {\r\n  [N in keyof HTMLElementEventMap]?:\r\n    | Listener<HTMLElementEventMap[N]>\r\n    | Array<Listener<HTMLElementEventMap[N]>>;\r\n} & {\r\n  [event: string]: Listener<any> | Array<Listener<any>>;\r\n};\r\n\r\ntype SomeListener<N extends keyof HTMLElementEventMap> =\r\n  | Listener<HTMLElementEventMap[N]>\r\n  | Listener<any>;\r\n\r\nfunction invokeHandler<N extends keyof HTMLElementEventMap>(\r\n  handler: SomeListener<N> | Array<SomeListener<N>>,\r\n  vnode: VNode,\r\n  event?: Event\r\n): void {\r\n  if (typeof handler === \"function\") {\r\n    // call function handler\r\n    handler.call(vnode, event, vnode);\r\n  } else if (typeof handler === \"object\") {\r\n    // call multiple handlers\r\n    for (let i = 0; i < handler.length; i++) {\r\n      invokeHandler(handler[i], vnode, event);\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleEvent(event: Event, vnode: VNode) {\r\n  const name = event.type;\r\n  const on = (vnode.data as VNodeData).on;\r\n\r\n  // call event handler(s) if exists\r\n  if (on && on[name]) {\r\n    invokeHandler(on[name], vnode, event);\r\n  }\r\n}\r\n\r\nfunction createListener() {\r\n  return function handler(event: Event) {\r\n    handleEvent(event, (handler as any).vnode);\r\n  };\r\n}\r\n\r\nfunction updateEventListeners(oldVnode: VNode, vnode?: VNode): void {\r\n  const oldOn = (oldVnode.data as VNodeData).on;\r\n  const oldListener = (oldVnode as any).listener;\r\n  const oldElm: Element = oldVnode.elm as Element;\r\n  const on = vnode && (vnode.data as VNodeData).on;\r\n  const elm: Element = (vnode && vnode.elm) as Element;\r\n  let name: string;\r\n\r\n  // optimization for reused immutable handlers\r\n  if (oldOn === on) {\r\n    return;\r\n  }\r\n\r\n  // remove existing listeners which no longer used\r\n  if (oldOn && oldListener) {\r\n    // if element changed or deleted we remove all existing listeners unconditionally\r\n    if (!on) {\r\n      for (name in oldOn) {\r\n        // remove listener if element was changed or existing listeners removed\r\n        oldElm.removeEventListener(name, oldListener, false);\r\n      }\r\n    } else {\r\n      for (name in oldOn) {\r\n        // remove listener if existing listener removed\r\n        if (!on[name]) {\r\n          oldElm.removeEventListener(name, oldListener, false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // add new listeners which has not already attached\r\n  if (on) {\r\n    // reuse existing listener or create new\r\n    const listener = ((vnode as any).listener =\r\n      (oldVnode as any).listener || createListener());\r\n    // update vnode for listener\r\n    listener.vnode = vnode;\r\n\r\n    // if element changed or added we add all needed listeners unconditionally\r\n    if (!oldOn) {\r\n      for (name in on) {\r\n        // add listener if element was changed or new listeners added\r\n        elm.addEventListener(name, listener, false);\r\n      }\r\n    } else {\r\n      for (name in on) {\r\n        // add listener if new listener added\r\n        if (!oldOn[name]) {\r\n          elm.addEventListener(name, listener, false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const eventListenersModule: Module = {\r\n  create: updateEventListeners,\r\n  update: updateEventListeners,\r\n  destroy: updateEventListeners,\r\n};\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\nexport type Props = Record<string, any>;\r\n\r\nfunction updateProps(oldVnode: VNode, vnode: VNode): void {\r\n  let key: string;\r\n  let cur: any;\r\n  let old: any;\r\n  const elm = vnode.elm;\r\n  let oldProps = (oldVnode.data as VNodeData).props;\r\n  let props = (vnode.data as VNodeData).props;\r\n\r\n  if (!oldProps && !props) return;\r\n  if (oldProps === props) return;\r\n  oldProps = oldProps || {};\r\n  props = props || {};\r\n\r\n  for (key in props) {\r\n    cur = props[key];\r\n    old = oldProps[key];\r\n    if (old !== cur && (key !== \"value\" || (elm as any)[key] !== cur)) {\r\n      (elm as any)[key] = cur;\r\n    }\r\n  }\r\n}\r\n\r\nexport const propsModule: Module = { create: updateProps, update: updateProps };\r\n", "import { VNode, VNodeData } from \"../vnode\";\r\nimport { Module } from \"./module\";\r\n\r\nexport type VNodeStyle = Record<string, string> & {\r\n  delayed?: Record<string, string>;\r\n  remove?: Record<string, string>;\r\n};\r\n\r\n// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.\r\nconst raf =\r\n  (typeof window !== \"undefined\" &&\r\n    window.requestAnimationFrame.bind(window)) ||\r\n  setTimeout;\r\nconst nextFrame = function (fn: any) {\r\n  raf(function () {\r\n    raf(fn);\r\n  });\r\n};\r\nlet reflowForced = false;\r\n\r\nfunction setNextFrame(obj: any, prop: string, val: any): void {\r\n  nextFrame(function () {\r\n    obj[prop] = val;\r\n  });\r\n}\r\n\r\nfunction updateStyle(oldVnode: VNode, vnode: VNode): void {\r\n  let cur: any;\r\n  let name: string;\r\n  const elm = vnode.elm;\r\n  let oldStyle = (oldVnode.data as VNodeData).style;\r\n  let style = (vnode.data as VNodeData).style;\r\n\r\n  if (!oldStyle && !style) return;\r\n  if (oldStyle === style) return;\r\n  oldStyle = oldStyle || {};\r\n  style = style || {};\r\n  const oldHasDel = \"delayed\" in oldStyle;\r\n\r\n  for (name in oldStyle) {\r\n    if (!style[name]) {\r\n      if (name[0] === \"-\" && name[1] === \"-\") {\r\n        (elm as any).style.removeProperty(name);\r\n      } else {\r\n        (elm as any).style[name] = \"\";\r\n      }\r\n    }\r\n  }\r\n  for (name in style) {\r\n    cur = style[name];\r\n    if (name === \"delayed\" && style.delayed) {\r\n      for (const name2 in style.delayed) {\r\n        cur = style.delayed[name2];\r\n        if (!oldHasDel || cur !== (oldStyle.delayed as any)[name2]) {\r\n          setNextFrame((elm as any).style, name2, cur);\r\n        }\r\n      }\r\n    } else if (name !== \"remove\" && cur !== oldStyle[name]) {\r\n      if (name[0] === \"-\" && name[1] === \"-\") {\r\n        (elm as any).style.setProperty(name, cur);\r\n      } else {\r\n        (elm as any).style[name] = cur;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyDestroyStyle(vnode: VNode): void {\r\n  let style: any;\r\n  let name: string;\r\n  const elm = vnode.elm;\r\n  const s = (vnode.data as VNodeData).style;\r\n  if (!s || !(style = s.destroy)) return;\r\n  for (name in style) {\r\n    (elm as any).style[name] = style[name];\r\n  }\r\n}\r\n\r\nfunction applyRemoveStyle(vnode: VNode, rm: () => void): void {\r\n  const s = (vnode.data as VNodeData).style;\r\n  if (!s || !s.remove) {\r\n    rm();\r\n    return;\r\n  }\r\n  if (!reflowForced) {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n    (vnode.elm as any).offsetLeft;\r\n    reflowForced = true;\r\n  }\r\n  let name: string;\r\n  const elm = vnode.elm;\r\n  let i = 0;\r\n  const style = s.remove;\r\n  let amount = 0;\r\n  const applied: string[] = [];\r\n  for (name in style) {\r\n    applied.push(name);\r\n    (elm as any).style[name] = style[name];\r\n  }\r\n  const compStyle = getComputedStyle(elm as Element);\r\n  const props = (compStyle as any)[\"transition-property\"].split(\", \");\r\n  for (; i < props.length; ++i) {\r\n    if (applied.indexOf(props[i]) !== -1) amount++;\r\n  }\r\n  (elm as Element).addEventListener(\r\n    \"transitionend\",\r\n    function (ev: TransitionEvent) {\r\n      if (ev.target === elm) --amount;\r\n      if (amount === 0) rm();\r\n    }\r\n  );\r\n}\r\n\r\nfunction forceReflow() {\r\n  reflowForced = false;\r\n}\r\n\r\nexport const styleModule: Module = {\r\n  pre: forceReflow,\r\n  create: updateStyle,\r\n  update: updateStyle,\r\n  destroy: applyDestroyStyle,\r\n  remove: applyRemoveStyle,\r\n};\r\n", "/* eslint-disable @typescript-eslint/no-namespace, import/export */\r\nimport { Key, vnode, VNode, VNodeData } from \"./vnode\";\r\nimport { h, ArrayOrElement } from \"./h\";\r\n\r\n// See https://www.typescriptlang.org/docs/handbook/jsx.html#type-checking\r\nnamespace JSXInternal {\r\n  export type Element = VNode;\r\n  export interface IntrinsicElements {\r\n    [elemName: string]: VNodeData;\r\n  }\r\n}\r\n\r\n// for conditional rendering we support boolean child element e.g cond && <tag />\r\nexport type JsxVNodeChild =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | undefined\r\n  | null;\r\nexport type JsxVNodeChildren = ArrayOrElement<JsxVNodeChild>;\r\n\r\nexport type FunctionComponent = (\r\n  props: { [prop: string]: any } | null,\r\n  children?: VNode[]\r\n) => VNode;\r\n\r\nexport function Fragment(\r\n  data: { key?: Key } | null,\r\n  ...children: JsxVNodeChildren[]\r\n): VNode {\r\n  const flatChildren = flattenAndFilter(children, []);\r\n\r\n  if (\r\n    flatChildren.length === 1 &&\r\n    !flatChildren[0].sel &&\r\n    flatChildren[0].text\r\n  ) {\r\n    // only child is a simple text node, pass as text for a simpler vtree\r\n    return vnode(\r\n      undefined,\r\n      undefined,\r\n      undefined,\r\n      flatChildren[0].text,\r\n      undefined\r\n    );\r\n  } else {\r\n    return vnode(undefined, data ?? {}, flatChildren, undefined, undefined);\r\n  }\r\n}\r\n\r\nfunction flattenAndFilter(\r\n  children: JsxVNodeChildren[],\r\n  flattened: VNode[]\r\n): VNode[] {\r\n  for (const child of children) {\r\n    // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart\r\n    if (\r\n      child !== undefined &&\r\n      child !== null &&\r\n      child !== false &&\r\n      child !== \"\"\r\n    ) {\r\n      if (Array.isArray(child)) {\r\n        flattenAndFilter(child, flattened);\r\n      } else if (\r\n        typeof child === \"string\" ||\r\n        typeof child === \"number\" ||\r\n        typeof child === \"boolean\"\r\n      ) {\r\n        flattened.push(\r\n          vnode(undefined, undefined, undefined, String(child), undefined)\r\n        );\r\n      } else {\r\n        flattened.push(child);\r\n      }\r\n    }\r\n  }\r\n  return flattened;\r\n}\r\n\r\n/**\r\n * jsx/tsx compatible factory function\r\n * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions\r\n */\r\nexport function jsx(\r\n  tag: string | FunctionComponent,\r\n  data: VNodeData | null,\r\n  ...children: JsxVNodeChildren[]\r\n): VNode {\r\n  const flatChildren = flattenAndFilter(children, []);\r\n  if (typeof tag === \"function\") {\r\n    // tag is a function component\r\n    return tag(data, flatChildren);\r\n  } else {\r\n    if (\r\n      flatChildren.length === 1 &&\r\n      !flatChildren[0].sel &&\r\n      flatChildren[0].text\r\n    ) {\r\n      // only child is a simple text node, pass as text for a simpler vtree\r\n      return h(tag, data, flatChildren[0].text);\r\n    } else {\r\n      return h(tag, data, flatChildren);\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace jsx {\r\n  export import JSX = JSXInternal; // eslint-disable-line @typescript-eslint/no-unused-vars\r\n}\r\n", "// core\r\nexport { DOMAPI, htmlDomApi } from \"./htmldomapi\";\r\nexport { init, Options } from \"./init\";\r\nexport { ThunkData, Thunk, ThunkFn, thunk } from \"./thunk\";\r\nexport { Key, VNode, VNodeData, vnode } from \"./vnode\";\r\n\r\n// helpers\r\nexport { AttachData, attachTo } from \"./helpers/attachto\";\r\nexport { array, primitive } from \"./is\";\r\nexport { toVNode } from \"./tovnode\";\r\nexport {\r\n  VNodes,\r\n  VNodeChildElement,\r\n  ArrayOrElement,\r\n  VNodeChildren,\r\n  h,\r\n  fragment,\r\n} from \"./h\";\r\n\r\n// types\r\nexport * from \"./hooks\";\r\nexport { Module } from \"./modules/module\";\r\n\r\n// modules\r\nexport { Attrs, attributesModule } from \"./modules/attributes\";\r\nexport { Classes, classModule } from \"./modules/class\";\r\nexport { Dataset, datasetModule } from \"./modules/dataset\";\r\nexport { On, eventListenersModule } from \"./modules/eventlisteners\";\r\nexport { Props, propsModule } from \"./modules/props\";\r\nexport { VNodeStyle, styleModule } from \"./modules/style\";\r\n\r\n// JSX\r\nexport {\r\n  JsxVNodeChild,\r\n  JsxVNodeChildren,\r\n  FunctionComponent,\r\n  jsx,\r\n  Fragment,\r\n} from \"./jsx\";\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { h, VNode, VNodeData } from \"snabbdom\";\r\nimport { SModelElementImpl } from \"../model/smodel\";\r\nimport { RenderingContext, IView } from \"./view\";\r\nimport { injectable } from \"inversify\";\r\n\r\n/**\r\n * An view that avoids calculation and patching of VNodes unless some model properties have changed.\r\n * Based on snabbdom's thunks.\r\n */\r\n@injectable()\r\nexport abstract class ThunkView implements IView {\r\n\r\n    /**\r\n     * Returns the array of values that are watched for changes.\r\n     * If they haven't change since the last rendering, the VNode is neither recalculated nor patched.\r\n     */\r\n    abstract watchedArgs(model: SModelElementImpl): any[];\r\n\r\n    /**\r\n     * Returns the selector of the VNode root, i.e. it's element type.\r\n     */\r\n    abstract selector(model: SModelElementImpl): string;\r\n\r\n    /**\r\n     * Calculate the VNode from the input data. Only called if the watched properties change.\r\n     */\r\n    abstract doRender(model: SModelElementImpl, context: RenderingContext): VNode;\r\n\r\n    render(model: SModelElementImpl, context: RenderingContext): VNode {\r\n        return h(this.selector(model), {\r\n            key: model.id,\r\n            hook: {\r\n                init: this.init.bind(this),\r\n                prepatch: this.prepatch.bind(this)},\r\n            fn: () => this.renderAndDecorate(model, context),\r\n            args: this.watchedArgs(model),\r\n            thunk: true\r\n        });\r\n    }\r\n\r\n    protected renderAndDecorate(model: SModelElementImpl, context: RenderingContext): VNode {\r\n        const vnode = this.doRender(model, context);\r\n        context.decorate(vnode, model);\r\n        return vnode;\r\n    }\r\n\r\n    protected copyToThunk(vnode: VNode, thunk: VNode): void {\r\n        thunk.elm = vnode.elm;\r\n        (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\r\n        (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\r\n        thunk.data = vnode.data;\r\n        thunk.children = vnode.children;\r\n        thunk.text = vnode.text;\r\n        thunk.elm = vnode.elm;\r\n    }\r\n\r\n    protected init(thunk: VNode): void {\r\n        const cur = thunk.data as VNodeData;\r\n        const vnode = (cur.fn as any).apply(undefined, cur.args);\r\n        this.copyToThunk(vnode, thunk);\r\n    }\r\n\r\n    protected prepatch(oldVnode: VNode, thunk: VNode): void {\r\n        const old = oldVnode.data as VNodeData, cur = thunk.data as VNodeData;\r\n        if (!this.equals(old.args as any[], cur.args as any[]))\r\n            this.copyToThunk((cur.fn as any).apply(undefined, cur.args), thunk);\r\n        else\r\n            this.copyToThunk(oldVnode, thunk);\r\n    }\r\n\r\n    protected equals(oldArg: any, newArg: any) {\r\n        if (Array.isArray(oldArg) && Array.isArray(newArg)) {\r\n            if (oldArg.length !== newArg.length)\r\n                return false;\r\n            for (let i = 0; i < newArg.length; ++i) {\r\n                if (!this.equals(oldArg[i], newArg[i]))\r\n                    return false;\r\n            }\r\n        } else if (typeof oldArg === 'object' && typeof newArg === 'object') {\r\n            if (Object.keys(oldArg).length !== Object.keys(newArg).length)\r\n                return false;\r\n            for (const key in oldArg) {\r\n                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))\r\n                    return false;\r\n            }\r\n        } else if (oldArg !== newArg) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ThunkVNode extends VNode {\r\n    thunk: boolean\r\n}\r\n\r\nexport function isThunk(vnode: VNode): vnode is ThunkVNode {\r\n    return 'thunk' in vnode;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { VNodeData, JsxVNodeChildren, JsxVNodeChild, jsx, FunctionComponent } from \"snabbdom\";\r\n\r\n\r\ndeclare global {\r\n  // eslint-disable-next-line no-redeclare\r\n  namespace JSX {\r\n      // Based on the tag list in github:DefinitelyTyped/DefinitelyTyped:React\r\n      interface IntrinsicElements {\r\n          [elemName: string]: VNodeData\r\n      }\r\n  }\r\n}\r\n\r\nconst modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];\r\nconst SVGNS = 'http://www.w3.org/2000/svg';\r\n\r\nfunction normalizeAttrs(source: VNodeData | null, defNS: string, namespace?: string) {\r\n  const data: VNodeData = {};\r\n\r\n  if (namespace) {\r\n    data.ns = namespace;\r\n  }\r\n  if (source === null) {\r\n    return data;\r\n  }\r\n\r\n  modulesNS.forEach(mod => {\r\n    if (source[mod]) {\r\n      data[mod] = source[mod];\r\n    }\r\n  });\r\n  Object.keys(source).forEach(key => {\r\n    if (key === 'key' || key === 'classNames' || key === 'selector') return;\r\n    const idx = key.indexOf('-');\r\n    if (idx > 0)\r\n      addAttr(key.slice(0, idx), key.slice(idx + 1), source[key]);\r\n    else if (!data[key])\r\n      addAttr(defNS, key, source[key]);\r\n  });\r\n  return data;\r\n\r\n  function addAttr(modname: string, key: string, val: JsxVNodeChildren) {\r\n    const mod = data[modname] || (data[modname] = {});\r\n    mod[key] = val;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction JSX(namespace?: string, defNS: string = 'props') {\r\n  return (tag: FunctionComponent | string, attrs: VNodeData | null, ...children: JsxVNodeChild[]) => jsx(tag, normalizeAttrs(attrs, defNS, namespace), children);\r\n}\r\n\r\nconst html = JSX();\r\nconst svg = JSX(SVGNS, 'attrs');\r\n\r\nexport { html, svg, JSX };\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx svg */\r\nimport { svg } from '../../lib/jsx';\r\n\r\nimport { injectable, multiInject, optional, interfaces } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { TYPES } from '../types';\r\nimport { InstanceRegistry } from '../../utils/registry';\r\nimport { isInjectable } from '../../utils/inversify';\r\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../model/smodel';\r\nimport { EMPTY_ROOT, CustomFeatures } from '../model/smodel-factory';\r\nimport { registerModelElement } from '../model/smodel-utils';\r\nimport { Point } from 'sprotty-protocol';\r\n\r\n/**\r\n * Arguments for `IView` rendering.\r\n */\r\nexport interface IViewArgs {\r\n    parentArgs?: IViewArgs;\r\n    [key: string]: any;\r\n}\r\n\r\n/**\r\n * Searches for the property specified in `key` in the specified `args`,\r\n * including its direct or indirect `IRenderingArgs#parentArgs`.\r\n *\r\n * @param arg the rendering arguments.\r\n * @param key the key to search for.\r\n * @returns the found value or `undefined.\r\n */\r\nexport function findArgValue<T>(arg: IViewArgs | undefined, key: string): T | undefined {\r\n    while (arg !== undefined && !(key in arg) && arg.parentArgs) {\r\n        arg = arg.parentArgs;\r\n    }\r\n    return arg ? arg[key] : undefined;\r\n}\r\n\r\n/**\r\n * Base interface for the components that turn GModelElements into virtual DOM elements.\r\n */\r\nexport interface IView<A extends IViewArgs = {}> {\r\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext, args?: A): VNode | undefined\r\n}\r\n\r\n/**\r\n * Indicates the target of the view rendering. `main` is the actually visible diagram,\r\n * `popup` is the mouse hover popup, and `hidden` is for computing element bounds prior\r\n * to the main rendering.\r\n */\r\nexport type RenderingTargetKind = 'main' | 'popup' | 'hidden';\r\n\r\n/**\r\n * Bundles additional data that is passed to views for VNode creation.\r\n */\r\nexport interface RenderingContext {\r\n    readonly viewRegistry: ViewRegistry\r\n    readonly targetKind: RenderingTargetKind;\r\n    readonly parentArgs?: IViewArgs;\r\n\r\n    decorate(vnode: VNode, element: Readonly<SModelElementImpl>): VNode\r\n\r\n    renderElement(element: Readonly<SModelElementImpl>): VNode | undefined\r\n\r\n    renderChildren(element: Readonly<SParentElementImpl>, args?: IViewArgs): VNode[]\r\n}\r\n\r\n/**\r\n * Used to bind a model element type to a view factory in the ViewRegistry.\r\n */\r\nexport interface ViewRegistration {\r\n    type: string\r\n    factory: () => IView\r\n}\r\n\r\nexport type ViewRegistrationFactory = () => ViewRegistration;\r\n\r\n/**\r\n * Allows to look up the IView for a given SModelElement based on its type.\r\n */\r\n@injectable()\r\nexport class ViewRegistry extends InstanceRegistry<IView> {\r\n    constructor(@multiInject(TYPES.ViewRegistration) @optional() registrations: ViewRegistration[]) {\r\n        super();\r\n        this.registerDefaults();\r\n        registrations.forEach(registration =>\r\n            this.register(registration.type, registration.factory())\r\n        );\r\n    }\r\n\r\n    protected registerDefaults() {\r\n        this.register(EMPTY_ROOT.type, new EmptyView());\r\n    }\r\n\r\n    override missing(key: string): IView {\r\n        return new MissingView();\r\n    }\r\n}\r\n\r\n/**\r\n * Combines `registerModelElement` and `configureView`.\r\n */\r\nexport function configureModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        type: string, modelConstr: new () => SModelElementImpl, viewConstr: interfaces.ServiceIdentifier<IView>,\r\n        features?: CustomFeatures): void {\r\n    registerModelElement(context, type, modelConstr, features);\r\n    configureView(context, type, viewConstr);\r\n}\r\n\r\n/**\r\n * Utility function to register a view for a model element type.\r\n */\r\nexport function configureView(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n        type: string, constr: interfaces.ServiceIdentifier<IView>): void {\r\n    if (typeof constr === 'function') {\r\n        if (!isInjectable(constr)) {\r\n            throw new Error(`Views should be @injectable: ${constr.name}`);\r\n        }\r\n        if (!context.isBound(constr)) {\r\n            context.bind(constr).toSelf();\r\n        }\r\n    }\r\n    context.bind(TYPES.ViewRegistration).toDynamicValue(ctx => ({\r\n        type,\r\n        factory: () => ctx.container.get(constr)\r\n    }));\r\n}\r\n\r\n/**\r\n * This view is used when the model is the EMPTY_ROOT.\r\n */\r\n@injectable()\r\nexport class EmptyView implements IView {\r\n    render(model: SModelRootImpl, context: RenderingContext): VNode {\r\n        return <svg class-sprotty-empty={true} />;\r\n    }\r\n}\r\n\r\n/**\r\n * This view is used when no view has been registered for a model element type.\r\n */\r\n@injectable()\r\nexport class MissingView implements IView {\r\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext): VNode {\r\n        const position: Point = (model as any).position || Point.ORIGIN;\r\n        return <text class-sprotty-missing={true} x={position.x} y={position.y}>?{model.id}?</text>;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { SModelRootImpl } from \"../model/smodel\";\r\nimport { TYPES } from \"../types\";\r\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\r\nimport { IViewer } from \"./viewer\";\r\n\r\n/**\r\n * Updating the view is rather expensive, and it doesn't make sense to calculate\r\n * more then one update per animation (rendering) frame. So this class batches\r\n * all incoming model changes and only renders the last one when the next animation\r\n * frame comes.\r\n */\r\n@injectable()\r\nexport class ViewerCache implements IViewer {\r\n\r\n    @inject(TYPES.IViewer) protected delegate: IViewer;\r\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\r\n\r\n    protected cachedModel?: SModelRootImpl;\r\n\r\n    update(model: SModelRootImpl, cause?: Action): void {\r\n        if (cause !== undefined) {\r\n            // Forward the update immediately in order to pass the cause action\r\n            this.delegate.update(model, cause);\r\n            this.cachedModel = undefined;\r\n        } else {\r\n            const isCacheEmpty = this.cachedModel === undefined;\r\n            this.cachedModel = model;\r\n            if (isCacheEmpty) {\r\n                this.scheduleUpdate();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected scheduleUpdate() {\r\n        this.syncer.onEndOfNextFrame(() => {\r\n            if (this.cachedModel) {\r\n                this.delegate.update(this.cachedModel);\r\n                this.cachedModel = undefined;\r\n            }\r\n        });\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2023 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Container, interfaces } from 'inversify';\r\nimport { safeAssign } from 'sprotty-protocol/lib/utils/object';\r\nimport { Limits } from '../../utils/geometry';\r\nimport { TYPES } from '../types';\r\n\r\nexport interface ViewerOptions {\r\n    /** ID of the HTML element into which the visible diagram is rendered. */\r\n    baseDiv: string\r\n    /** CSS class added to the base element of the visible diagram. */\r\n    baseClass: string\r\n    /** ID of the HTML element into which the hidden diagram is rendered. */\r\n    hiddenDiv: string\r\n    /** CSS class added to the base element of the hidden rendering. */\r\n    hiddenClass: string\r\n    /** ID of the HTML element into which hover popup boxes are rendered. */\r\n    popupDiv: string\r\n    /** CSS class added to the base element of popup boxes. */\r\n    popupClass: string\r\n    /** CSS class added to popup boxes when they are closed. */\r\n    popupClosedClass: string\r\n    /** Whether client layouts need to be computed by Sprotty. This activates a hidden rendering cycle. */\r\n    needsClientLayout: boolean\r\n    /** Whether the model source needs to invoke a layout engine after a model update. */\r\n    needsServerLayout: boolean\r\n    /** Delay for opening a popup box after mouse hovering an element. */\r\n    popupOpenDelay: number\r\n    /** Delay for closing a popup box after leaving the corresponding element. */\r\n    popupCloseDelay: number\r\n    /** Minimum (zoom out) and maximum (zoom in) values for the zoom factor. */\r\n    zoomLimits: Limits\r\n    /** Minimum and maximum values for the horizontal scroll position. */\r\n    horizontalScrollLimits: Limits\r\n    /** Minimum and maximum values for the vertical scroll position. */\r\n    verticalScrollLimits: Limits\r\n}\r\n\r\nexport const defaultViewerOptions: () => ViewerOptions = () => ({\r\n    baseDiv: 'sprotty',\r\n    baseClass: 'sprotty',\r\n    hiddenDiv: 'sprotty-hidden',\r\n    hiddenClass: 'sprotty-hidden',\r\n    popupDiv: 'sprotty-popup',\r\n    popupClass: 'sprotty-popup',\r\n    popupClosedClass: 'sprotty-popup-closed',\r\n    needsClientLayout: true,\r\n    needsServerLayout: false,\r\n    popupOpenDelay: 1000,\r\n    popupCloseDelay: 300,\r\n    zoomLimits: { min: 0.01, max: 10 },\r\n    horizontalScrollLimits: { min: -100_000, max: 100_000 },\r\n    verticalScrollLimits: { min: -100_000, max: 100_000 }\r\n});\r\n\r\n/**\r\n * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for\r\n * options that are not specified.\r\n */\r\nexport function configureViewerOptions(context: { bind: interfaces.Bind, isBound: interfaces.IsBound, rebind: interfaces.Rebind },\r\n        options: Partial<ViewerOptions>): void {\r\n    const opt: ViewerOptions = {\r\n        ...defaultViewerOptions(),\r\n        ...options\r\n    };\r\n    if (context.isBound(TYPES.ViewerOptions))\r\n        context.rebind(TYPES.ViewerOptions).toConstantValue(opt);\r\n    else\r\n        context.bind(TYPES.ViewerOptions).toConstantValue(opt);\r\n}\r\n\r\n/**\r\n * Utility function to partially override the currently configured viewer options in a DI container.\r\n */\r\nexport function overrideViewerOptions(container: Container, options: Partial<ViewerOptions>): ViewerOptions {\r\n    const opt = container.get<ViewerOptions>(TYPES.ViewerOptions);\r\n    safeAssign(opt, options);\r\n    return opt;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx html */\r\nimport { inject, injectable, multiInject, optional } from 'inversify';\r\nimport { attributesModule, classModule, eventListenersModule, init, Module, propsModule, styleModule, VNode } from 'snabbdom';\r\nimport { Action } from 'sprotty-protocol/lib/actions';\r\nimport { html } from '../../lib/jsx'; // must be html here, as we're creating a div\r\nimport { getWindowScroll } from '../../utils/browser';\r\nimport { ILogger } from '../../utils/logging';\r\nimport { IActionDispatcher } from '../actions/action-dispatcher';\r\nimport { InitializeCanvasBoundsAction } from '../features/initialize-canvas';\r\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../model/smodel';\r\nimport { EMPTY_ROOT } from '../model/smodel-factory';\r\nimport { TYPES } from '../types';\r\nimport { isThunk } from './thunk-view';\r\nimport { IViewArgs, RenderingContext, RenderingTargetKind, ViewRegistry } from './view';\r\nimport { ViewerOptions } from './viewer-options';\r\nimport { IVNodePostprocessor } from './vnode-postprocessor';\r\nimport { copyClassesFromElement, copyClassesFromVNode, setAttr, setClass } from './vnode-utils';\r\n\r\n\r\nexport interface IViewer {\r\n    update(model: SModelRootImpl, cause?: Action): void\r\n}\r\n\r\nexport interface IViewerProvider {\r\n    readonly modelViewer: IViewer\r\n    readonly hiddenModelViewer: IViewer\r\n    readonly popupModelViewer: IViewer\r\n}\r\n\r\nexport class ModelRenderer implements RenderingContext {\r\n\r\n    constructor(readonly viewRegistry: ViewRegistry,\r\n        readonly targetKind: RenderingTargetKind,\r\n        private postprocessors: IVNodePostprocessor[],\r\n        protected args: IViewArgs = {}) {\r\n    }\r\n\r\n    decorate(vnode: VNode, element: Readonly<SModelElementImpl>): VNode {\r\n        if (isThunk(vnode)) {\r\n            return vnode;\r\n        }\r\n        return this.postprocessors.reduce(\r\n            (n: VNode, processor: IVNodePostprocessor) => processor.decorate(n, element),\r\n            vnode);\r\n    }\r\n\r\n    renderElement(element: Readonly<SModelElementImpl>): VNode | undefined {\r\n        const view = this.viewRegistry.get(element.type);\r\n        const vnode = view.render(element, this, this.args);\r\n        if (vnode) {\r\n            return this.decorate(vnode, element);\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    renderChildren(element: Readonly<SParentElementImpl>, args?: IViewArgs): VNode[] {\r\n        const context = args ?\r\n            new ModelRenderer(\r\n                this.viewRegistry,\r\n                this.targetKind,\r\n                this.postprocessors,\r\n                { ...args, parentArgs: this.args }\r\n            ) : this;\r\n        return element.children\r\n            .map(child => context.renderElement(child))\r\n            .filter(vnode => vnode !== undefined) as VNode[];\r\n    }\r\n\r\n    postUpdate(cause?: Action) {\r\n        this.postprocessors.forEach(processor => processor.postUpdate(cause));\r\n    }\r\n}\r\n\r\nexport type ModelRendererFactory = (\r\n    targetKind: RenderingTargetKind,\r\n    postprocessors: IVNodePostprocessor[],\r\n    args?: IViewArgs\r\n) => ModelRenderer;\r\n\r\nexport type Patcher = (oldRoot: VNode | Element, newRoot: VNode) => VNode;\r\n\r\n@injectable()\r\nexport class PatcherProvider {\r\n\r\n    readonly patcher: Patcher;\r\n\r\n    constructor() {\r\n        this.patcher = init(this.createModules());\r\n    }\r\n\r\n    protected createModules(): Module[] {\r\n        return [\r\n            propsModule,\r\n            attributesModule,\r\n            classModule,\r\n            styleModule,\r\n            eventListenersModule\r\n        ];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * The component that turns the model into an SVG DOM.\r\n * Uses a VDOM based on snabbdom.js for performance.\r\n */\r\n@injectable()\r\nexport class ModelViewer implements IViewer {\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(TYPES.IActionDispatcher) protected actiondispatcher: IActionDispatcher;\r\n\r\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\r\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\r\n        @multiInject(TYPES.IVNodePostprocessor) @optional() postprocessors: IVNodePostprocessor[]) {\r\n        this.renderer = modelRendererFactory('main', postprocessors);\r\n        this.patcher = patcherProvider.patcher;\r\n    }\r\n\r\n    protected readonly renderer: ModelRenderer;\r\n    protected readonly patcher: Patcher;\r\n\r\n    protected lastVDOM: VNode;\r\n\r\n    update(model: Readonly<SModelRootImpl>, cause?: Action): void {\r\n        this.logger.log(this, 'rendering', model);\r\n        const newVDOM = <div id={this.options.baseDiv}>\r\n            {this.renderer.renderElement(model)}\r\n        </div>;\r\n        if (this.lastVDOM !== undefined) {\r\n            const hadFocus = this.hasFocus();\r\n            copyClassesFromVNode(this.lastVDOM, newVDOM);\r\n            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);\r\n            this.restoreFocus(hadFocus);\r\n        } else if (typeof document !== 'undefined') {\r\n            const placeholder = document.getElementById(this.options.baseDiv);\r\n            if (placeholder !== null) {\r\n                if (typeof window !== 'undefined') {\r\n                    window.addEventListener('resize', () => {\r\n                        this.onWindowResize(newVDOM);\r\n                    });\r\n                }\r\n                copyClassesFromElement(placeholder, newVDOM);\r\n                setClass(newVDOM, this.options.baseClass, true);\r\n                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);\r\n            } else {\r\n                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);\r\n            }\r\n        }\r\n        this.renderer.postUpdate(cause);\r\n    }\r\n\r\n    protected hasFocus(): boolean {\r\n        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\r\n            const lastRootVNode = this.lastVDOM.children[0];\r\n            if (typeof lastRootVNode === 'object') {\r\n                const lastElement = (lastRootVNode as VNode).elm;\r\n                return document.activeElement === lastElement;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected restoreFocus(focus: boolean) {\r\n        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\r\n            const lastRootVNode = this.lastVDOM.children[0];\r\n            if (typeof lastRootVNode === 'object') {\r\n                const lastElement = (lastRootVNode as VNode).elm;\r\n                if (lastElement && typeof (lastElement as any).focus === 'function')\r\n                    (lastElement as any).focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onWindowResize(vdom: VNode): void {\r\n        const baseDiv = document.getElementById(this.options.baseDiv);\r\n        if (baseDiv !== null) {\r\n            const newBounds = this.getBoundsInPage(baseDiv as Element);\r\n            this.actiondispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\r\n        }\r\n    }\r\n\r\n    protected getBoundsInPage(element: Element) {\r\n        const bounds = element.getBoundingClientRect();\r\n        const scroll = getWindowScroll();\r\n        return {\r\n            x: bounds.left + scroll.x,\r\n            y: bounds.top + scroll.y,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds\r\n * of elements. The model is rendered in a section that is not visible to the user,\r\n * and then the bounds are extracted from the DOM.\r\n */\r\n@injectable()\r\nexport class HiddenModelViewer implements IViewer {\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n\r\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\r\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\r\n        @multiInject(TYPES.HiddenVNodePostprocessor) @optional() hiddenPostprocessors: IVNodePostprocessor[]) {\r\n        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);\r\n        this.patcher = patcherProvider.patcher;\r\n    }\r\n\r\n    protected readonly hiddenRenderer: ModelRenderer;\r\n    protected readonly patcher: Patcher;\r\n\r\n    protected lastHiddenVDOM: VNode;\r\n\r\n    update(hiddenModel: Readonly<SModelRootImpl>, cause?: Action): void {\r\n        this.logger.log(this, 'rendering hidden');\r\n\r\n        let newVDOM: VNode;\r\n        if (hiddenModel.type === EMPTY_ROOT.type) {\r\n            newVDOM = <div id={this.options.hiddenDiv}></div>;\r\n        } else {\r\n            const hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);\r\n            if (hiddenVNode) {\r\n                setAttr(hiddenVNode, 'opacity', 0);\r\n            }\r\n            newVDOM = <div id={this.options.hiddenDiv}>\r\n                {hiddenVNode}\r\n            </div>;\r\n        }\r\n\r\n        if (this.lastHiddenVDOM !== undefined) {\r\n            copyClassesFromVNode(this.lastHiddenVDOM, newVDOM);\r\n            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);\r\n        } else {\r\n            let placeholder = document.getElementById(this.options.hiddenDiv);\r\n            if (placeholder === null) {\r\n                placeholder = document.createElement('div');\r\n                document.body.appendChild(placeholder);\r\n            } else {\r\n                copyClassesFromElement(placeholder, newVDOM);\r\n            }\r\n            setClass(newVDOM, this.options.baseClass, true);\r\n            setClass(newVDOM, this.options.hiddenClass, true);\r\n            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);\r\n        }\r\n        this.hiddenRenderer.postUpdate(cause);\r\n    }\r\n\r\n}\r\n\r\n@injectable()\r\nexport class PopupModelViewer implements IViewer {\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n\r\n    constructor(@inject(TYPES.ModelRendererFactory) protected readonly modelRendererFactory: ModelRendererFactory,\r\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\r\n        @multiInject(TYPES.PopupVNodePostprocessor) @optional() popupPostprocessors: IVNodePostprocessor[]) {\r\n        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);\r\n        this.patcher = patcherProvider.patcher;\r\n    }\r\n\r\n    protected readonly popupRenderer: ModelRenderer;\r\n    protected readonly patcher: Patcher;\r\n\r\n    protected lastPopupVDOM: VNode;\r\n\r\n    update(model: Readonly<SModelRootImpl>, cause?: Action): void {\r\n        this.logger.log(this, 'rendering popup', model);\r\n\r\n        const popupClosed = model.type === EMPTY_ROOT.type;\r\n        let newVDOM: VNode;\r\n        if (popupClosed) {\r\n            newVDOM = <div id={this.options.popupDiv}></div>;\r\n        } else {\r\n            const position = model.canvasBounds;\r\n            const inlineStyle = {\r\n                top: position.y + 'px',\r\n                left: position.x + 'px'\r\n            };\r\n            newVDOM = <div id={this.options.popupDiv} style={inlineStyle}>\r\n                {this.popupRenderer.renderElement(model)}\r\n            </div>;\r\n        }\r\n\r\n        if (this.lastPopupVDOM !== undefined) {\r\n            copyClassesFromVNode(this.lastPopupVDOM, newVDOM);\r\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\r\n            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);\r\n        } else if (typeof document !== 'undefined') {\r\n            let placeholder = document.getElementById(this.options.popupDiv);\r\n            if (placeholder === null) {\r\n                placeholder = document.createElement('div');\r\n                document.body.appendChild(placeholder);\r\n            } else {\r\n                copyClassesFromElement(placeholder, newVDOM);\r\n            }\r\n            setClass(newVDOM, this.options.popupClass, true);\r\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\r\n            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);\r\n        }\r\n        this.popupRenderer.postUpdate(cause);\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { SModelElementImpl } from \"../model/smodel\";\r\nimport { setAttr } from \"./vnode-utils\";\r\n\r\n/**\r\n * Manipulates a created VNode after it has been created.\r\n * Used to register listeners and add animations.\r\n */\r\nexport interface IVNodePostprocessor {\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode\r\n    postUpdate(cause?: Action): void\r\n}\r\n\r\n@injectable()\r\nexport class FocusFixPostprocessor implements IVNodePostprocessor {\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (vnode.sel && vnode.sel.startsWith('svg'))\r\n            // allows to set focus in Firefox\r\n            setAttr(vnode, 'tabindex', 0);\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { TYPES } from \"../base/types\";\r\nimport { ViewerOptions } from \"../base/views/viewer-options\";\r\n\r\nexport interface ILogger {\r\n    logLevel: LogLevel\r\n\r\n    error(thisArg: any, message: string, ...params: any[]): void\r\n    warn(thisArg: any, message: string, ...params: any[]): void\r\n    info(thisArg: any, message: string, ...params: any[]): void\r\n    log(thisArg: any, message: string, ...params: any[]): void\r\n}\r\n\r\nexport enum LogLevel { none = 0, error = 1, warn = 2, info = 3, log = 4 }\r\n\r\n@injectable()\r\nexport class NullLogger implements ILogger {\r\n    logLevel: LogLevel = LogLevel.none;\r\n\r\n    error(thisArg: any, message: string, ...params: any[]): void {}\r\n    warn(thisArg: any, message: string, ...params: any[]): void {}\r\n    info(thisArg: any, message: string, ...params: any[]): void {}\r\n    log(thisArg: any, message: string, ...params: any[]): void {}\r\n}\r\n\r\n@injectable()\r\nexport class ConsoleLogger implements ILogger {\r\n\r\n    @inject(TYPES.LogLevel) public logLevel: LogLevel = LogLevel.log;\r\n    @inject(TYPES.ViewerOptions) protected viewOptions: ViewerOptions = { baseDiv: '' } as ViewerOptions;\r\n\r\n    error(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.error)\r\n            try {\r\n                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));\r\n            } catch (error) {}\r\n    }\r\n\r\n    warn(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.warn)\r\n            try {\r\n                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));\r\n            } catch (error) {}\r\n    }\r\n\r\n    info(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.info)\r\n            try {\r\n                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));\r\n            } catch (error) {}\r\n    }\r\n\r\n    log(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.log)\r\n            try {\r\n                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));\r\n            } catch (error) {}\r\n    }\r\n\r\n    protected consoleArguments(thisArg: any, message: string, params: any[]): any[] {\r\n        let caller: any;\r\n        if (typeof thisArg === 'object')\r\n            caller = thisArg.constructor.name;\r\n        else\r\n            caller = thisArg;\r\n        const date = new Date();\r\n        return [date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message, ...params];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { TYPES } from \"../types\";\r\nimport { ILogger } from \"../../utils/logging\";\r\nimport { SModelElementImpl } from \"../model/smodel\";\r\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\r\nimport { DOMHelper } from \"./dom-helper\";\r\nimport { getAttrs } from \"./vnode-utils\";\r\n\r\n@injectable()\r\nexport class IdPostprocessor implements IVNodePostprocessor {\r\n\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        const attrs = getAttrs(vnode);\r\n        if (attrs.id !== undefined)\r\n            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');\r\n        attrs.id = this.domHelper.createUniqueDOMElementId(element);\r\n        if (!vnode.key)\r\n            vnode.key = element.id;\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\r\nimport { SModelElementImpl } from \"../model/smodel\";\r\nimport { setClass } from \"./vnode-utils\";\r\nimport { injectable } from \"inversify\";\r\n\r\n@injectable()\r\nexport class CssClassPostprocessor implements IVNodePostprocessor {\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (element.cssClasses) {\r\n            for (const cssClass of element.cssClasses)\r\n                setClass(vnode, cssClass, true);\r\n        }\r\n        // append model subtype as class\r\n        const subType = getSubType(element);\r\n        if (subType && subType !== element.type) {\r\n            setClass(vnode, subType, true);\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n        // empty\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"./types\";\r\nimport { CanvasBoundsInitializer, InitializeCanvasBoundsCommand } from './features/initialize-canvas';\r\nimport { LogLevel, NullLogger } from \"../utils/logging\";\r\nimport { ActionDispatcher, IActionDispatcher } from \"./actions/action-dispatcher\";\r\nimport { ActionHandlerRegistry } from \"./actions/action-handler\";\r\nimport { CommandStack, ICommandStack } from \"./commands/command-stack\";\r\nimport { CommandStackOptions } from \"./commands/command-stack-options\";\r\nimport { SModelFactory, SModelRegistry } from './model/smodel-factory';\r\nimport { AnimationFrameSyncer } from \"./animations/animation-frame-syncer\";\r\nimport { IViewer, ModelViewer, HiddenModelViewer, PopupModelViewer, ModelRenderer, PatcherProvider } from \"./views/viewer\";\r\nimport { ViewerOptions, defaultViewerOptions } from \"./views/viewer-options\";\r\nimport { MouseTool, PopupMouseTool, MousePositionTracker } from \"./views/mouse-tool\";\r\nimport { KeyTool } from \"./views/key-tool\";\r\nimport { FocusFixPostprocessor, IVNodePostprocessor } from \"./views/vnode-postprocessor\";\r\nimport { ViewRegistry, RenderingTargetKind, IViewArgs } from \"./views/view\";\r\nimport { ViewerCache } from \"./views/viewer-cache\";\r\nimport { DOMHelper } from \"./views/dom-helper\";\r\nimport { IdPostprocessor } from \"./views/id-postprocessor\";\r\nimport { configureCommand, CommandActionHandlerInitializer } from \"./commands/command-registration\";\r\nimport { CssClassPostprocessor } from \"./views/css-class-postprocessor\";\r\nimport { SetModelCommand } from \"./features/set-model\";\r\nimport { UIExtensionRegistry, SetUIExtensionVisibilityCommand } from \"./ui-extensions/ui-extension-registry\";\r\nimport { DefaultDiagramLocker } from \"./actions/diagram-locker\";\r\n\r\nconst defaultContainerModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    // Logging ---------------------------------------------\r\n    bind(TYPES.ILogger).to(NullLogger).inSingletonScope();\r\n    bind(TYPES.LogLevel).toConstantValue(LogLevel.warn);\r\n\r\n    // Registries ---------------------------------------------\r\n    bind(TYPES.SModelRegistry).to(SModelRegistry).inSingletonScope();\r\n    bind(ActionHandlerRegistry).toSelf().inSingletonScope();\r\n    bind(TYPES.ActionHandlerRegistryProvider).toProvider<ActionHandlerRegistry>(ctx => {\r\n        return () => {\r\n            return new Promise<ActionHandlerRegistry>((resolve) => {\r\n                resolve(ctx.container.get<ActionHandlerRegistry>(ActionHandlerRegistry));\r\n            });\r\n        };\r\n    });\r\n    bind(TYPES.ViewRegistry).to(ViewRegistry).inSingletonScope();\r\n\r\n    // Model Creation ---------------------------------------------\r\n    bind(TYPES.IModelFactory).to(SModelFactory).inSingletonScope();\r\n\r\n    // Action Dispatcher ---------------------------------------------\r\n    bind(TYPES.IActionDispatcher).to(ActionDispatcher).inSingletonScope();\r\n    bind(TYPES.IActionDispatcherProvider).toProvider<IActionDispatcher>(ctx => {\r\n        return () => {\r\n            return new Promise<IActionDispatcher>((resolve) => {\r\n                resolve(ctx.container.get<IActionDispatcher>(TYPES.IActionDispatcher));\r\n            });\r\n        };\r\n    });\r\n    bind(TYPES.IDiagramLocker).to(DefaultDiagramLocker).inSingletonScope();\r\n\r\n    // Action handler\r\n    bind(TYPES.IActionHandlerInitializer).to(CommandActionHandlerInitializer);\r\n\r\n    // Command Stack ---------------------------------------------\r\n    bind(TYPES.ICommandStack).to(CommandStack).inSingletonScope();\r\n    bind(TYPES.ICommandStackProvider).toProvider<ICommandStack>(ctx => {\r\n        return () => {\r\n            return new Promise<ICommandStack>((resolve) => {\r\n                resolve(ctx.container.get<ICommandStack>(TYPES.ICommandStack));\r\n            });\r\n        };\r\n    });\r\n    bind<CommandStackOptions>(TYPES.CommandStackOptions).toConstantValue({\r\n        defaultDuration: 250,\r\n        undoHistoryLimit: 50\r\n    });\r\n\r\n    // Viewer ---------------------------------------------\r\n    bind(ModelViewer).toSelf().inSingletonScope();\r\n    bind(HiddenModelViewer).toSelf().inSingletonScope();\r\n    bind(PopupModelViewer).toSelf().inSingletonScope();\r\n    bind(TYPES.ModelViewer).toDynamicValue(ctx => {\r\n        const container = ctx.container.createChild();\r\n        container.bind(TYPES.IViewer).toService(ModelViewer);\r\n        container.bind(ViewerCache).toSelf();\r\n        return container.get(ViewerCache);\r\n    }).inSingletonScope();\r\n    bind(TYPES.PopupModelViewer).toDynamicValue(ctx => {\r\n        const container = ctx.container.createChild();\r\n        container.bind(TYPES.IViewer).toService(PopupModelViewer);\r\n        container.bind(ViewerCache).toSelf();\r\n        return container.get(ViewerCache);\r\n    }).inSingletonScope();\r\n    bind(TYPES.HiddenModelViewer).toService(HiddenModelViewer);\r\n    bind(TYPES.IViewerProvider).toDynamicValue(ctx => {\r\n        return {\r\n            get modelViewer() {\r\n                return ctx.container.get<IViewer>(TYPES.ModelViewer);\r\n            },\r\n            get hiddenModelViewer() {\r\n                return ctx.container.get<IViewer>(TYPES.HiddenModelViewer);\r\n            },\r\n            get popupModelViewer() {\r\n                return ctx.container.get<IViewer>(TYPES.PopupModelViewer);\r\n            }\r\n        };\r\n    });\r\n    bind<ViewerOptions>(TYPES.ViewerOptions).toConstantValue(defaultViewerOptions());\r\n    bind(TYPES.PatcherProvider).to(PatcherProvider).inSingletonScope();\r\n    bind(TYPES.DOMHelper).to(DOMHelper).inSingletonScope();\r\n    bind(TYPES.ModelRendererFactory).toFactory<ModelRenderer>(ctx => {\r\n        return (targetKind: RenderingTargetKind, processors: IVNodePostprocessor[], args: IViewArgs = {}) => {\r\n            const viewRegistry = ctx.container.get<ViewRegistry>(TYPES.ViewRegistry);\r\n            return new ModelRenderer(viewRegistry, targetKind, processors, args);\r\n        };\r\n    });\r\n\r\n    // Tools & Postprocessors --------------------------------------\r\n    bind(IdPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(IdPostprocessor);\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(IdPostprocessor);\r\n    bind(CssClassPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(CssClassPostprocessor);\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(CssClassPostprocessor);\r\n    bind(MouseTool).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(MouseTool);\r\n    bind(KeyTool).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(KeyTool);\r\n    bind(FocusFixPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(FocusFixPostprocessor);\r\n    bind(TYPES.PopupVNodePostprocessor).toService(IdPostprocessor);\r\n    bind(PopupMouseTool).toSelf().inSingletonScope();\r\n    bind(TYPES.PopupVNodePostprocessor).toService(PopupMouseTool);\r\n\r\n    // Animation Frame Sync ------------------------------------------\r\n    bind(TYPES.AnimationFrameSyncer).to(AnimationFrameSyncer).inSingletonScope();\r\n\r\n    // Canvas Initialization ---------------------------------------------\r\n    const context = { bind, isBound };\r\n    configureCommand(context, InitializeCanvasBoundsCommand);\r\n    bind(CanvasBoundsInitializer).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(CanvasBoundsInitializer);\r\n\r\n    // Model commands ---------------------------------------------\r\n    configureCommand(context, SetModelCommand);\r\n\r\n    // UIExtension registry initialization ------------------------------------\r\n    bind(TYPES.UIExtensionRegistry).to(UIExtensionRegistry).inSingletonScope();\r\n    configureCommand(context, SetUIExtensionVisibilityCommand);\r\n\r\n    // Tracker for last known mouse position on diagram ------------------------\r\n    bind(MousePositionTracker).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(MousePositionTracker);\r\n});\r\n\r\nexport default defaultContainerModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { DOMHelper } from '../../base/views/dom-helper';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\nimport { getWindowScroll } from '../../utils/browser';\r\nimport type { Locateable } from '../move/model';\r\n\r\nexport const boundsFeature = Symbol('boundsFeature');\r\nexport const layoutContainerFeature = Symbol('layoutContainerFeature');\r\nexport const layoutableChildFeature = Symbol('layoutableChildFeature');\r\nexport const alignFeature = Symbol('alignFeature');\r\n\r\n/**\r\n * Model elements that implement this interface have a position and a size.\r\n * Note that this definition differs from the one in `sprotty-protocol` because this is\r\n * used in the _internal model_, while the other is used in the _external model_.\r\n *\r\n * Feature extension interface for {@link boundsFeature}.\r\n */\r\nexport interface BoundsAware {\r\n    bounds: Bounds\r\n}\r\n\r\n/**\r\n * Used to identify model elements that specify a layout to apply to their children.\r\n */\r\nexport interface LayoutContainer extends LayoutableChild {\r\n    layout: string\r\n}\r\n\r\nexport type ModelLayoutOptions = { [key: string]: string | number | boolean };\r\n\r\n/**\r\n * Feature extension interface for {@link layoutableChildFeature}.\r\n */\r\nexport interface LayoutableChild extends BoundsAware {\r\n    layoutOptions?: ModelLayoutOptions\r\n}\r\n\r\n/**\r\n * Used to adjust elements whose bounding box is not at the origin, e.g.\r\n * labels, or pre-rendered SVG figures.\r\n *\r\n * Feature extension interface for {@link alignFeature}.\r\n */\r\nexport interface Alignable {\r\n    alignment: Point\r\n}\r\n\r\nexport function isBoundsAware(element: SModelElementImpl): element is SModelElementImpl & BoundsAware {\r\n    return 'bounds' in element;\r\n}\r\n\r\nexport function isLayoutContainer(element: SModelElementImpl): element is SParentElementImpl & LayoutContainer {\r\n    return isBoundsAware(element)\r\n        && element.hasFeature(layoutContainerFeature)\r\n        && 'layout' in element;\r\n}\r\n\r\nexport function isLayoutableChild(element: SModelElementImpl): element is SChildElementImpl & LayoutableChild {\r\n    return isBoundsAware(element)\r\n        && element.hasFeature(layoutableChildFeature);\r\n}\r\n\r\nexport function isSizeable(element: SModelElementImpl): element is SModelElementImpl & BoundsAware {\r\n    return element.hasFeature(boundsFeature) && isBoundsAware(element);\r\n}\r\n\r\nexport function isAlignable(element: SModelElementImpl): element is SModelElementImpl & Alignable {\r\n    return element.hasFeature(alignFeature)\r\n        && 'alignment' in element;\r\n}\r\n\r\nexport function getAbsoluteBounds(element: SModelElementImpl): Bounds {\r\n    const boundsAware = findParentByFeature(element, isBoundsAware);\r\n    if (boundsAware !== undefined) {\r\n        let bounds = boundsAware.bounds;\r\n        let current: SModelElementImpl = boundsAware;\r\n        while (current instanceof SChildElementImpl) {\r\n            const parent = current.parent;\r\n            bounds = parent.localToParent(bounds);\r\n            current = parent;\r\n        }\r\n        return bounds;\r\n    } else if (element instanceof SModelRootImpl) {\r\n        const canvasBounds = element.canvasBounds;\r\n        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };\r\n    } else {\r\n        return Bounds.EMPTY;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the \"client-absolute\" bounds of the specified `element`.\r\n *\r\n * The client-absolute bounds are relative to the entire browser page.\r\n *\r\n * @param element The element to get the bounds for.\r\n * @param domHelper The dom helper to obtain the SVG element's id.\r\n * @param viewerOptions The viewer options to obtain sprotty's container div id.\r\n */\r\nexport function getAbsoluteClientBounds(element: SModelElementImpl, domHelper: DOMHelper, viewerOptions: ViewerOptions): Bounds {\r\n    let x = 0;\r\n    let y = 0;\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    const svgElementId = domHelper.createUniqueDOMElementId(element);\r\n    const svgElement = document.getElementById(svgElementId);\r\n    if (svgElement) {\r\n        const rect = svgElement.getBoundingClientRect();\r\n        const scroll = getWindowScroll();\r\n        x = rect.left + scroll.x;\r\n        y = rect.top + scroll.y;\r\n        width = rect.width;\r\n        height = rect.height;\r\n    }\r\n\r\n    let container = document.getElementById(viewerOptions.baseDiv);\r\n    if (container) {\r\n        while (container.offsetParent instanceof HTMLElement\r\n            && (container = <HTMLElement>container.offsetParent)) {\r\n            x -= container.offsetLeft;\r\n            y -= container.offsetTop;\r\n        }\r\n    }\r\n\r\n    return { x, y, width, height };\r\n}\r\n\r\nexport function findChildrenAtPosition(parent: SParentElementImpl, point: Point): SModelElementImpl[] {\r\n    const matches: SModelElementImpl[] = [];\r\n    doFindChildrenAtPosition(parent, point, matches);\r\n    return matches;\r\n}\r\n\r\nfunction doFindChildrenAtPosition(parent: SParentElementImpl, point: Point, matches: SModelElementImpl[]) {\r\n    parent.children.forEach(child => {\r\n        if (isBoundsAware(child) && Bounds.includes(child.bounds, point))\r\n            matches.push(child);\r\n        if (child instanceof SParentElementImpl) {\r\n            const newPoint = child.parentToLocal(point);\r\n            doFindChildrenAtPosition(child, newPoint, matches);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Abstract class for elements with a position and a size.\r\n */\r\nexport abstract class SShapeElementImpl extends SChildElementImpl implements BoundsAware, Locateable, LayoutableChild {\r\n\r\n    position: Point = Point.ORIGIN;\r\n    size: Dimension = Dimension.EMPTY;\r\n    layoutOptions?: ModelLayoutOptions;\r\n\r\n    get bounds(): Bounds {\r\n        return {\r\n            x: this.position.x,\r\n            y: this.position.y,\r\n            width: this.size.width,\r\n            height: this.size.height\r\n        };\r\n    }\r\n\r\n    set bounds(newBounds: Bounds) {\r\n        this.position = {\r\n            x: newBounds.x,\r\n            y: newBounds.y\r\n        };\r\n        this.size = {\r\n            width: newBounds.width,\r\n            height: newBounds.height\r\n        };\r\n    }\r\n\r\n    override localToParent(point: Point | Bounds): Bounds {\r\n        const result = {\r\n            x: point.x + this.position.x,\r\n            y: point.y + this.position.y,\r\n            width: -1,\r\n            height: -1\r\n        };\r\n        if (isBounds(point)) {\r\n            result.width = point.width;\r\n            result.height = point.height;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override parentToLocal(point: Point | Bounds): Bounds {\r\n        const result = {\r\n            x: point.x - this.position.x,\r\n            y: point.y - this.position.y,\r\n            width: -1,\r\n            height: -1\r\n        };\r\n        if (isBounds(point)) {\r\n            result.width = point.width;\r\n            result.height = point.height;\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { Action, ComputedBoundsAction, RequestBoundsAction, SetBoundsAction } from 'sprotty-protocol/lib/actions';\r\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { CommandExecutionContext, CommandResult, CommandReturn, HiddenCommand, SystemCommand } from '../../base/commands/command';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\nimport { Alignable, BoundsAware, isBoundsAware } from './model';\r\n\r\nexport interface ResolvedElementAndBounds {\r\n    element: SModelElementImpl & BoundsAware\r\n    oldBounds: Bounds\r\n    newPosition?: Point\r\n    newSize: Dimension\r\n}\r\n\r\nexport interface ResolvedElementAndAlignment {\r\n    element: SModelElementImpl & Alignable\r\n    oldAlignment: Point\r\n    newAlignment: Point\r\n}\r\n\r\n@injectable()\r\nexport class SetBoundsCommand extends SystemCommand {\r\n    static readonly KIND: string = SetBoundsAction.KIND;\r\n\r\n    protected bounds: ResolvedElementAndBounds[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SetBoundsAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.action.bounds.forEach(\r\n            b => {\r\n                const element = context.root.index.getById(b.elementId);\r\n                if (element && isBoundsAware(element)) {\r\n                    this.bounds.push({\r\n                        element: element,\r\n                        oldBounds: element.bounds,\r\n                        newPosition: b.newPosition,\r\n                        newSize: b.newSize\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        return this.redo(context);\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        this.bounds.forEach(\r\n            b => b.element.bounds = b.oldBounds\r\n        );\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        this.bounds.forEach(\r\n            b => {\r\n                if (b.newPosition)\r\n                    b.element.bounds = {\r\n                        ...b.newPosition,\r\n                        ...b.newSize,\r\n                    };\r\n                else\r\n                    // keep the position\r\n                    b.element.bounds = {\r\n                        x: b.element.bounds.x,\r\n                        y: b.element.bounds.y,\r\n                        ...b.newSize\r\n                    };\r\n            }\r\n        );\r\n        return context.root;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class RequestBoundsCommand extends HiddenCommand {\r\n    static readonly KIND: string = RequestBoundsAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected action: RequestBoundsAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandResult {\r\n        return {\r\n            model: context.modelFactory.createRoot(this.action.newRoot),\r\n            modelChanged: true,\r\n            cause: this.action\r\n        };\r\n    }\r\n\r\n    get blockUntil(): (action: Action) => boolean {\r\n        return action => action.kind === ComputedBoundsAction.KIND;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, interfaces, multiInject, optional } from \"inversify\";\r\nimport { Bounds } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { ILogger } from '../../utils/logging';\r\nimport { InstanceRegistry } from \"../../utils/registry\";\r\nimport { SParentElementImpl, SModelElementImpl } from \"../../base/model/smodel\";\r\nimport { isLayoutContainer, LayoutContainer } from \"./model\";\r\nimport { BoundsData } from \"./hidden-bounds-updater\";\r\nimport { isInjectable } from \"../../utils/inversify\";\r\n\r\n@injectable()\r\nexport class LayoutRegistry extends InstanceRegistry<ILayout> {\r\n\r\n    @inject(TYPES.ILogger) logger: ILogger;\r\n\r\n    constructor(@multiInject(TYPES.LayoutRegistration) @optional() layouts: (LayoutRegistration)[] = []) {\r\n        super();\r\n        layouts.forEach(layout => {\r\n            if (this.hasKey(layout.layoutKind)) {\r\n                this.logger.warn('Layout kind is already defined: ', layout.layoutKind);\r\n            } else {\r\n                this.register(layout.layoutKind, layout.factory());\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport interface LayoutRegistration {\r\n    layoutKind: string;\r\n    factory: () => ILayout;\r\n}\r\n\r\n@injectable()\r\nexport class Layouter {\r\n\r\n    @inject(TYPES.LayoutRegistry) protected layoutRegistry: LayoutRegistry;\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n\r\n    layout(element2boundsData: Map<SModelElementImpl​​ , BoundsData>) {\r\n        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();\r\n    }\r\n}\r\n\r\nexport class StatefulLayouter {\r\n\r\n    private toBeLayouted: (SParentElementImpl & LayoutContainer)[];\r\n\r\n    constructor(private readonly element2boundsData: Map<SModelElementImpl​​ , BoundsData>,\r\n                private readonly layoutRegistry: LayoutRegistry,\r\n                public readonly log: ILogger) {\r\n        this.toBeLayouted = [];\r\n        element2boundsData.forEach(\r\n            (data, element) => {\r\n                if (isLayoutContainer(element))\r\n                    this.toBeLayouted.push(element);\r\n            });\r\n    }\r\n\r\n    getBoundsData(element: SModelElementImpl): BoundsData {\r\n        let boundsData = this.element2boundsData.get(element);\r\n        let bounds = (element as any).bounds;\r\n        if (isLayoutContainer(element) && this.toBeLayouted.indexOf(element) >= 0) {\r\n            bounds = this.doLayout(element);\r\n        }\r\n        if (!boundsData) {\r\n            boundsData = {\r\n                bounds: bounds,\r\n                boundsChanged: false,\r\n                alignmentChanged: false\r\n            };\r\n            this.element2boundsData.set(element, boundsData);\r\n        }\r\n        return boundsData;\r\n    }\r\n\r\n    layout(): void {\r\n        while (this.toBeLayouted.length > 0) {\r\n            const element = this.toBeLayouted[0];\r\n            this.doLayout(element);\r\n        }\r\n    }\r\n\r\n    protected doLayout(element: SParentElementImpl & LayoutContainer): Bounds {\r\n        const index = this.toBeLayouted.indexOf(element);\r\n        if (index >= 0)\r\n            this.toBeLayouted.splice(index, 1);\r\n        const layout = this.layoutRegistry.get(element.layout);\r\n        if (layout)\r\n            layout.layout(element, this);\r\n        const boundsData = this.element2boundsData.get(element);\r\n        if (boundsData !== undefined && boundsData.bounds !== undefined) {\r\n            return boundsData.bounds;\r\n        } else {\r\n            this.log.error(element, 'Layout failed');\r\n            return Bounds.EMPTY;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ILayout {\r\n    layout(container: SParentElementImpl & LayoutContainer,\r\n           layouter: StatefulLayouter): void\r\n}\r\n\r\n\r\nexport function configureLayout(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n    kind: string, constr: interfaces.ServiceIdentifier<ILayout>) {\r\n\r\n    if (typeof constr === 'function') {\r\n        if (!isInjectable(constr)) {\r\n            throw new Error(`Layouts be @injectable: ${constr.name}`);\r\n        }\r\n        if (!context.isBound(constr)) {\r\n            context.bind(constr).toSelf();\r\n        }\r\n    }\r\n    context.bind(TYPES.LayoutRegistration).toDynamicValue(ctx => ({\r\n        layoutKind: kind,\r\n        factory: () => ctx.container.get(constr)\r\n    }));\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { Action, ComputedBoundsAction, ElementAndAlignment, ElementAndBounds, RequestBoundsAction } from 'sprotty-protocol/lib/actions';\r\nimport { almostEquals, Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { isSVGGraphicsElement } from '../../utils/browser';\r\nimport { ILogger } from '../../utils/logging';\r\nimport { IActionDispatcher } from '../../base/actions/action-dispatcher';\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\r\nimport { Layouter } from './layout';\r\nimport { BoundsAware, isAlignable, isLayoutContainer, isSizeable } from './model';\r\n\r\nexport class BoundsData {\r\n    vnode?: VNode;\r\n    bounds?: Bounds;\r\n    alignment?: Point;\r\n    boundsChanged: boolean;\r\n    alignmentChanged: boolean;\r\n}\r\n\r\n/**\r\n * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires\r\n * ComputedBoundsActions.\r\n *\r\n * The actual bounds of an element can usually not be determined from the SModel\r\n * as they depend on the view implementation and CSS stylings. So the best way is\r\n * to grab them from a live (but hidden) SVG using getBBox().\r\n *\r\n * If an element is Alignable, and the top-left corner of its bounding box is not\r\n * the origin, we also issue a realign with the ComputedBoundsAction.\r\n */\r\n@injectable()\r\nexport class HiddenBoundsUpdater implements IVNodePostprocessor {\r\n\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n    @inject(TYPES.Layouter) protected layouter: Layouter;\r\n\r\n    private readonly element2boundsData: Map<SModelElementImpl & BoundsAware, BoundsData> = new Map;\r\n\r\n    root: SModelRootImpl | undefined;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (isSizeable(element) || isLayoutContainer(element)) {\r\n            this.element2boundsData.set(element, {\r\n                vnode: vnode,\r\n                bounds: element.bounds,\r\n                boundsChanged: false,\r\n                alignmentChanged: false\r\n            });\r\n        }\r\n        if (element instanceof SModelRootImpl) {\r\n            this.root = element;\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(cause?: Action) {\r\n        if (cause === undefined || cause.kind !== RequestBoundsAction.KIND) {\r\n            return;\r\n        }\r\n        const request = cause as RequestBoundsAction;\r\n        this.getBoundsFromDOM();\r\n        this.layouter.layout(this.element2boundsData);\r\n        const resizes: ElementAndBounds[] = [];\r\n        const alignments: ElementAndAlignment[] = [];\r\n        this.element2boundsData.forEach(\r\n            (boundsData, element) => {\r\n                if (boundsData.boundsChanged && boundsData.bounds !== undefined) {\r\n                    const resize: ElementAndBounds = {\r\n                        elementId: element.id,\r\n                        newSize: {\r\n                            width: boundsData.bounds.width,\r\n                            height: boundsData.bounds.height\r\n                        }\r\n                    };\r\n                    // don't copy position if the element is layouted by the server\r\n                    if (element instanceof SChildElementImpl && isLayoutContainer(element.parent)) {\r\n                        resize.newPosition = {\r\n                            x: boundsData.bounds.x,\r\n                            y: boundsData.bounds.y,\r\n                        };\r\n                    }\r\n                    resizes.push(resize);\r\n                }\r\n                if (boundsData.alignmentChanged && boundsData.alignment !== undefined) {\r\n                    alignments.push({\r\n                        elementId: element.id,\r\n                        newAlignment: boundsData.alignment\r\n                    });\r\n                }\r\n            });\r\n        const revision = (this.root !== undefined) ? this.root.revision : undefined;\r\n        this.actionDispatcher.dispatch(ComputedBoundsAction.create(resizes, { revision, alignments, requestId: request.requestId }));\r\n        this.element2boundsData.clear();\r\n    }\r\n\r\n    protected getBoundsFromDOM() {\r\n        this.element2boundsData.forEach(\r\n            (boundsData, element) => {\r\n                if (boundsData.bounds && isSizeable(element)) {\r\n                    const vnode = boundsData.vnode;\r\n                    if (vnode && vnode.elm) {\r\n                        const boundingBox = this.getBounds(vnode.elm, element);\r\n                        if (isAlignable(element) && !(\r\n                            almostEquals(boundingBox.x, 0) && almostEquals(boundingBox.y, 0)\r\n                        )) {\r\n                            boundsData.alignment = {\r\n                                x: -boundingBox.x,\r\n                                y: -boundingBox.y\r\n                            };\r\n                            boundsData.alignmentChanged = true;\r\n                        }\r\n                        const newBounds = {\r\n                            x: element.bounds.x,\r\n                            y: element.bounds.y,\r\n                            width: boundingBox.width,\r\n                            height: boundingBox.height\r\n                        };\r\n                        if (!(almostEquals(newBounds.x, element.bounds.x)\r\n                            && almostEquals(newBounds.y, element.bounds.y)\r\n                            && almostEquals(newBounds.width, element.bounds.width)\r\n                            && almostEquals(newBounds.height, element.bounds.height))) {\r\n                            boundsData.bounds = newBounds;\r\n                            boundsData.boundsChanged = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Compute the bounds of the given DOM element. Override this method to customize how\r\n     * the bounding box of a rendered view is determined.\r\n     *\r\n     * In case your Sprotty model element contains children that are rendered outside of\r\n     * their parent, you can add the `ATTR_BBOX_ELEMENT` attribute to the SVG element\r\n     * that shall be used to compute the bounding box.\r\n     */\r\n    protected getBounds(elm: Node, element: SModelElementImpl & BoundsAware): Bounds {\r\n        if (!isSVGGraphicsElement(elm)) {\r\n            this.logger.error(this, 'Not an SVG element:', elm);\r\n            return Bounds.EMPTY;\r\n        }\r\n        if (elm.tagName === 'g') {\r\n            for (const child of Array.from(elm.children)) {\r\n                if (child.getAttribute(ATTR_BBOX_ELEMENT) !== null) {\r\n                    return this.getBounds(child, element);\r\n                }\r\n            }\r\n        }\r\n        const bounds = elm.getBBox();\r\n        return {\r\n            x: bounds.x,\r\n            y: bounds.y,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Attribute name identifying the SVG element that determines the bounding box of a rendered view.\r\n * This can be used when a view creates a group of which only a part should contribute to the\r\n * bounding box computed by `HiddenBoundsUpdater`.\r\n */\r\nexport const ATTR_BBOX_ELEMENT = 'bboxElement';\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SParentElementImpl, SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { isLayoutContainer, isLayoutableChild, LayoutContainer, isBoundsAware } from \"./model\";\r\nimport { ILayout, StatefulLayouter } from './layout';\r\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\r\nimport { BoundsData } from './hidden-bounds-updater';\r\nimport { injectable } from \"inversify\";\r\n\r\n@injectable()\r\nexport abstract class AbstractLayout<T extends AbstractLayoutOptions> implements ILayout {\r\n\r\n    layout(container: SParentElementImpl & LayoutContainer,\r\n           layouter: StatefulLayouter) {\r\n        const boundsData = layouter.getBoundsData(container);\r\n        const options = this.getLayoutOptions(container);\r\n        const childrenSize = this.getChildrenSize(container, options, layouter);\r\n        const maxWidth = options.paddingFactor * (\r\n            options.resizeContainer\r\n            ? childrenSize.width\r\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);\r\n        const maxHeight =  options.paddingFactor * (\r\n            options.resizeContainer\r\n            ? childrenSize.height\r\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);\r\n        if (maxWidth > 0 && maxHeight > 0) {\r\n            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);\r\n            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);\r\n            boundsData.boundsChanged = true;\r\n        }\r\n    }\r\n    protected abstract layoutChild(child: SChildElementImpl,\r\n                                boundsData: BoundsData, bounds: Bounds,\r\n                                childOptions: T, containerOptions: T,\r\n                                currentOffset: Point,\r\n                                maxWidth: number, maxHeight: number): Point;\r\n\r\n    protected getFinalContainerBounds(container: SParentElementImpl & LayoutContainer,\r\n                                    lastOffset: Point,\r\n                                    options: T,\r\n                                    maxWidth: number,\r\n                                    maxHeight: number): Bounds {\r\n        return {\r\n            x: container.bounds.x,\r\n            y: container.bounds.y,\r\n            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),\r\n            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)\r\n        };\r\n    }\r\n\r\n    protected getFixedContainerBounds(\r\n            container: SModelElementImpl,\r\n            layoutOptions: T,\r\n            layouter: StatefulLayouter): Bounds {\r\n        let currentContainer = container;\r\n        while (true) {\r\n            if (isBoundsAware(currentContainer)) {\r\n                const bounds = currentContainer.bounds;\r\n                if (isLayoutContainer(currentContainer) && layoutOptions.resizeContainer)\r\n                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');\r\n                if (Dimension.isValid(bounds))\r\n                    return bounds;\r\n            }\r\n            if (currentContainer instanceof SChildElementImpl) {\r\n                currentContainer = currentContainer.parent;\r\n            } else {\r\n                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');\r\n                return Bounds.EMPTY;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected abstract getChildrenSize(container: SParentElementImpl & LayoutContainer,\r\n                               containerOptions: T,\r\n                               layouter: StatefulLayouter): Dimension;\r\n\r\n    protected layoutChildren(container: SParentElementImpl & LayoutContainer,\r\n                            layouter: StatefulLayouter,\r\n                            containerOptions: T,\r\n                            maxWidth: number,\r\n                            maxHeight: number): Point {\r\n        let currentOffset: Point = {\r\n            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),\r\n            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))};\r\n        container.children.forEach(\r\n            child => {\r\n                if (isLayoutableChild(child)) {\r\n                    const boundsData = layouter.getBoundsData(child);\r\n                    const bounds = boundsData.bounds;\r\n                    const childOptions = this.getChildLayoutOptions(child, containerOptions);\r\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\r\n                        currentOffset = this.layoutChild(child, boundsData, bounds,\r\n                            childOptions, containerOptions, currentOffset,\r\n                            maxWidth, maxHeight);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        return currentOffset;\r\n    }\r\n\r\n    protected getDx(hAlign: HAlignment, bounds: Bounds, maxWidth: number): number {\r\n        switch (hAlign) {\r\n            case 'left':\r\n                return 0;\r\n            case 'center':\r\n                return 0.5 * (maxWidth - bounds.width);\r\n            case 'right':\r\n                return maxWidth - bounds.width;\r\n        }\r\n    }\r\n\r\n    protected getDy(vAlign: VAlignment, bounds: Bounds, maxHeight: number): number {\r\n        switch (vAlign) {\r\n            case 'top':\r\n                return 0;\r\n            case 'center':\r\n                return 0.5 * (maxHeight - bounds.height);\r\n            case 'bottom':\r\n                return maxHeight - bounds.height;\r\n        }\r\n    }\r\n\r\n    protected getChildLayoutOptions(child: SChildElementImpl, containerOptions: T): T {\r\n        const layoutOptions = (child as any).layoutOptions;\r\n        if (layoutOptions === undefined)\r\n            return containerOptions;\r\n        else\r\n            return this.spread(containerOptions, layoutOptions);\r\n    }\r\n\r\n    protected getLayoutOptions(element: SModelElementImpl): T {\r\n        let current = element;\r\n        const allOptions: T[] = [];\r\n        while (current !== undefined) {\r\n            const layoutOptions = (current as any).layoutOptions;\r\n            if (layoutOptions !== undefined)\r\n                allOptions.push(layoutOptions);\r\n            if (current instanceof SChildElementImpl)\r\n                current = current.parent;\r\n            else\r\n                break;\r\n        }\r\n        return allOptions.reverse().reduce(\r\n            (a, b) => { return this.spread(a, b); }, this.getDefaultLayoutOptions());\r\n    }\r\n\r\n    protected abstract getDefaultLayoutOptions(): T;\r\n\r\n    protected abstract spread(a: T, b: T): T;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { AbstractLayout } from './abstract-layout';\r\nimport { AbstractLayoutOptions, HAlignment } from './layout-options';\r\nimport { BoundsData } from './hidden-bounds-updater';\r\nimport { LayoutContainer, isLayoutableChild } from './model';\r\nimport { StatefulLayouter } from './layout';\r\n\r\nexport interface VBoxLayoutOptions extends AbstractLayoutOptions {\r\n    vGap: number\r\n    hAlign: HAlignment\r\n}\r\n\r\n/**\r\n * Layouts children of a container in vertical (top->bottom) direction.\r\n */\r\n@injectable()\r\nexport class VBoxLayouter extends AbstractLayout<VBoxLayoutOptions> {\r\n\r\n    static KIND = 'vbox';\r\n\r\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\r\n                               containerOptions: VBoxLayoutOptions,\r\n                               layouter: StatefulLayouter) {\r\n        let maxWidth = -1;\r\n        let maxHeight = 0;\r\n        let isFirst = true;\r\n        container.children.forEach(\r\n            child => {\r\n                if (isLayoutableChild(child)) {\r\n                    const bounds = layouter.getBoundsData(child).bounds;\r\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\r\n                        maxHeight += bounds.height;\r\n                        if (isFirst)\r\n                            isFirst = false;\r\n                        else\r\n                            maxHeight += containerOptions.vGap;\r\n                        maxWidth = Math.max(maxWidth, bounds.width);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        return {\r\n            width: maxWidth,\r\n            height: maxHeight\r\n        };\r\n    }\r\n\r\n    protected layoutChild(child: SChildElementImpl,\r\n                        boundsData: BoundsData,\r\n                        bounds: Bounds,\r\n                        childOptions: VBoxLayoutOptions,\r\n                        containerOptions: VBoxLayoutOptions,\r\n                        currentOffset: Point,\r\n                        maxWidth: number,\r\n                        maxHeight: number) {\r\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\r\n        boundsData.bounds = {\r\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\r\n            y: currentOffset.y + (child as any).bounds.y - bounds.y,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n        boundsData.boundsChanged = true;\r\n        return {\r\n            x: currentOffset.x,\r\n            y: currentOffset.y + bounds.height + containerOptions.vGap\r\n        };\r\n    }\r\n\r\n    protected getDefaultLayoutOptions(): VBoxLayoutOptions {\r\n        return {\r\n            resizeContainer: true,\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingFactor: 1,\r\n            vGap: 1,\r\n            hAlign: 'center',\r\n            minWidth: 0,\r\n            minHeight: 0\r\n        };\r\n    }\r\n\r\n    protected spread(a: VBoxLayoutOptions, b: VBoxLayoutOptions): VBoxLayoutOptions {\r\n        return { ...a, ...b };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { AbstractLayout } from './abstract-layout';\r\nimport { AbstractLayoutOptions, VAlignment } from './layout-options';\r\nimport { BoundsData } from './hidden-bounds-updater';\r\nimport { LayoutContainer, isLayoutableChild } from './model';\r\nimport { StatefulLayouter } from './layout';\r\n\r\nexport interface HBoxLayoutOptions extends AbstractLayoutOptions {\r\n    hGap: number\r\n    vAlign: VAlignment\r\n}\r\n\r\n/**\r\n * Layouts children of a container in horizontal (left->right) direction.\r\n */\r\n@injectable()\r\nexport class HBoxLayouter extends AbstractLayout<HBoxLayoutOptions> {\r\n\r\n    static KIND = 'hbox';\r\n\r\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\r\n                               containerOptions: HBoxLayoutOptions,\r\n                               layouter: StatefulLayouter) {\r\n        let maxWidth = 0;\r\n        let maxHeight = -1;\r\n        let isFirst = true;\r\n        container.children.forEach(\r\n            child => {\r\n                if (isLayoutableChild(child)) {\r\n                    const bounds = layouter.getBoundsData(child).bounds;\r\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\r\n                        if (isFirst)\r\n                            isFirst = false;\r\n                        else\r\n                            maxWidth += containerOptions.hGap;\r\n                        maxWidth += bounds.width;\r\n                        maxHeight = Math.max(maxHeight, bounds.height);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        return {\r\n            width: maxWidth,\r\n            height: maxHeight\r\n        };\r\n    }\r\n\r\n    protected layoutChild(child: SChildElementImpl,\r\n                        boundsData: BoundsData,\r\n                        bounds: Bounds,\r\n                        childOptions: HBoxLayoutOptions,\r\n                        containerOptions: HBoxLayoutOptions,\r\n                        currentOffset: Point,\r\n                        maxWidth: number,\r\n                        maxHeight: number): Point {\r\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\r\n        boundsData.bounds = {\r\n            x: currentOffset.x + (child as any).bounds.x - bounds.x,\r\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n        boundsData.boundsChanged = true;\r\n        return {\r\n            x: currentOffset.x + bounds.width + containerOptions.hGap,\r\n            y: currentOffset.y\r\n        };\r\n    }\r\n\r\n    protected getDefaultLayoutOptions(): HBoxLayoutOptions {\r\n        return {\r\n            resizeContainer: true,\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingFactor: 1,\r\n            hGap: 1,\r\n            vAlign: 'center',\r\n            minWidth: 0,\r\n            minHeight: 0\r\n        };\r\n    }\r\n\r\n    protected spread(a: HBoxLayoutOptions, b: HBoxLayoutOptions): HBoxLayoutOptions {\r\n        return { ...a, ...b };\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { AbstractLayout } from './abstract-layout';\r\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\r\nimport { BoundsData } from './hidden-bounds-updater';\r\nimport { LayoutContainer, isLayoutableChild } from './model';\r\nimport { StatefulLayouter } from './layout';\r\n\r\nexport interface StackLayoutOptions extends AbstractLayoutOptions {\r\n    paddingFactor: number\r\n    vAlign: VAlignment\r\n    hAlign: HAlignment\r\n}\r\n\r\n@injectable()\r\nexport class StackLayouter extends AbstractLayout<StackLayoutOptions> {\r\n\r\n    static KIND = 'stack';\r\n\r\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\r\n                            options: StackLayoutOptions,\r\n                            layouter: StatefulLayouter) {\r\n        let maxWidth = -1;\r\n        let maxHeight = -1;\r\n        container.children.forEach(\r\n            child => {\r\n                if (isLayoutableChild(child)) {\r\n                    const bounds = layouter.getBoundsData(child).bounds;\r\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\r\n                        maxWidth = Math.max(maxWidth, bounds.width);\r\n                        maxHeight = Math.max(maxHeight, bounds.height);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        return {\r\n            width: maxWidth,\r\n            height: maxHeight\r\n        };\r\n    }\r\n\r\n    protected layoutChild(child: SChildElementImpl,\r\n                        boundsData: BoundsData,\r\n                        bounds: Bounds,\r\n                        childOptions: StackLayoutOptions,\r\n                        containerOptions: StackLayoutOptions,\r\n                        currentOffset: Point,\r\n                        maxWidth: number, maxHeight: number): Point {\r\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\r\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\r\n        boundsData.bounds = {\r\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\r\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\r\n            width: bounds.width,\r\n            height: bounds.height\r\n        };\r\n        boundsData.boundsChanged = true;\r\n        return currentOffset;\r\n    }\r\n\r\n    protected getDefaultLayoutOptions(): StackLayoutOptions {\r\n        return {\r\n            resizeContainer: true,\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingFactor: 1,\r\n            hAlign: 'center',\r\n            vAlign: 'center',\r\n            minWidth: 0,\r\n            minHeight: 0\r\n        };\r\n    }\r\n\r\n    protected spread(a: StackLayoutOptions, b: StackLayoutOptions): StackLayoutOptions {\r\n        return { ...a, ...b };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { Dimension } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\r\nimport { getAbsoluteBounds, BoundsAware } from './model';\r\nimport { SChildElementImpl } from '../../base/model/smodel';\r\n\r\n@injectable()\r\nexport abstract class ShapeView implements IView {\r\n\r\n    /**\r\n     * Check whether the given model element is in the current viewport. Use this method\r\n     * in your `render` implementation to skip rendering in case the element is not visible.\r\n     * This can greatly enhance performance for large models.\r\n     */\r\n    isVisible(model: Readonly<SChildElementImpl & BoundsAware>, context: RenderingContext): boolean {\r\n        if (context.targetKind === 'hidden') {\r\n            // Don't hide any element for hidden rendering\r\n            return true;\r\n        }\r\n        if (!Dimension.isValid(model.bounds)) {\r\n            // We should hide only if we know the element's bounds\r\n            return true;\r\n        }\r\n        const ab = getAbsoluteBounds(model);\r\n        const canvasBounds = model.root.canvasBounds;\r\n        return ab.x <= canvasBounds.width\r\n            && ab.x + ab.width >= 0\r\n            && ab.y <= canvasBounds.height\r\n            && ab.y + ab.height >= 0;\r\n    }\r\n\r\n    abstract render(model: Readonly<SChildElementImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, interfaces, multiInject, optional } from 'inversify';\r\nimport { Action } from 'sprotty-protocol/lib/actions';\r\nimport { InstanceRegistry } from '../../utils/registry';\r\nimport { TYPES } from '../../base/types';\r\nimport { SButtonImpl } from './model';\r\nimport { isInjectable } from '../../utils/inversify';\r\n\r\nexport interface IButtonHandler {\r\n    buttonPressed(button: SButtonImpl): (Action | Promise<Action>)[]\r\n}\r\n\r\nexport interface IButtonHandlerRegistration {\r\n    TYPE: string\r\n    factory: () => IButtonHandler\r\n}\r\n\r\n@injectable()\r\nexport class ButtonHandlerRegistry extends InstanceRegistry<IButtonHandler> {\r\n\r\n    constructor(\r\n        @multiInject(TYPES.IButtonHandlerRegistration)@optional() buttonHandlerRegistrations: IButtonHandlerRegistration[]) {\r\n        super();\r\n        buttonHandlerRegistrations.forEach(factory => this.register(factory.TYPE, factory.factory()));\r\n    }\r\n}\r\n\r\n/**\r\n * Utility function to register a button handler for an button type.\r\n */\r\nexport function configureButtonHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\r\n    type: string, constr: interfaces.ServiceIdentifier<IButtonHandler>): void {\r\n    if (typeof constr === 'function') {\r\n        if (!isInjectable(constr)) {\r\n            throw new Error(`Button handlers should be @injectable: ${constr.name}`);\r\n        }\r\n        if (!context.isBound(constr)) {\r\n            context.bind(constr).toSelf();\r\n        }\r\n    }\r\n    context.bind(TYPES.IButtonHandlerRegistration).toDynamicValue(ctx => ({\r\n        TYPE: type,\r\n        factory: () => ctx.container.get(constr)\r\n    }));\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const fadeFeature = Symbol('fadeFeature');\r\n\r\n/**\r\n* Feature extension interface for {@link fadeFeature}.\r\n */\r\nexport interface Fadeable {\r\n    opacity: number\r\n}\r\n\r\nexport function isFadeable(element: SModelElementImpl): element is SModelElementImpl & Fadeable {\r\n    return element.hasFeature(fadeFeature) && (element as any)['opacity'] !== undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SShapeElement } from 'sprotty-protocol';\r\nimport { boundsFeature, layoutableChildFeature, SShapeElementImpl } from '../bounds/model';\r\nimport { fadeFeature } from '../fade/model';\r\n\r\nexport interface SButtonSchema extends SShapeElement {\r\n    pressed: boolean\r\n    enabled: boolean\r\n}\r\n\r\nexport class SButtonImpl extends SShapeElementImpl {\r\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutableChildFeature, fadeFeature];\r\n\r\n    enabled = true;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const nameFeature = Symbol('nameableFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link nameableFeature}.\r\n */\r\nexport interface Nameable {\r\n    name: string\r\n}\r\n\r\nexport function isNameable(element: SModelElementImpl): element is SModelElementImpl & Nameable {\r\n    return element.hasFeature(nameFeature);\r\n}\r\n\r\nexport function name(element: SModelElementImpl): string | undefined {\r\n    if (isNameable(element)) {\r\n        return element.name;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, multiInject, optional } from \"inversify\";\r\nimport { CenterAction, SelectAction, SelectAllAction } from \"sprotty-protocol/lib/actions\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { LabeledAction } from \"../../base/actions/action\";\r\nimport { SModelRootImpl } from \"../../base/model/smodel\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { toArray } from \"../../utils/iterable\";\r\nimport { ILogger } from \"../../utils/logging\";\r\nimport { isNameable, name } from \"../nameable/model\";\r\n\r\nexport interface ICommandPaletteActionProvider {\r\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number): Promise<LabeledAction[]>;\r\n}\r\n\r\n@injectable()\r\nexport class CommandPaletteActionProviderRegistry implements ICommandPaletteActionProvider {\r\n\r\n    constructor(@multiInject(TYPES.ICommandPaletteActionProvider) @optional() protected actionProviders: ICommandPaletteActionProvider[] = []) {\r\n    }\r\n\r\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number) {\r\n        const actionLists = this.actionProviders.map(provider => provider.getActions(root, text, lastMousePosition, index));\r\n        return Promise.all(actionLists).then(p => p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc));\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class RevealNamedElementActionProvider implements ICommandPaletteActionProvider {\r\n\r\n    constructor(@inject(TYPES.ILogger) protected logger: ILogger) { }\r\n\r\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number) {\r\n        if (index !== undefined && index % 2 === 0)\r\n            return Promise.resolve(this.createSelectActions(root));\r\n        else\r\n            return Promise.resolve([new LabeledAction(\"Select all\", [SelectAllAction.create()])]);\r\n    }\r\n\r\n    createSelectActions(modelRoot: SModelRootImpl): LabeledAction[] {\r\n        const nameables = toArray(modelRoot.index.all().filter(element => isNameable(element)));\r\n        return nameables.map(nameable => new LabeledAction(`Reveal ${name(nameable)}`,\r\n            [SelectAction.create({ selectedElementsIDs: [nameable.id] }), CenterAction.create([nameable.id])], 'eye'));\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2021 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nexport const ACTION_ITEM = 'action-item';\r\nexport const ANIMATION_SPIN = 'animation-spin';\r\n\r\nexport function codiconCSSString(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string {\r\n    return codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS).join(' ');\r\n}\r\n\r\nexport function codiconCSSClasses(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string[] {\r\n    const cssClassArray = ['codicon', `codicon-${codiconId}`];\r\n    if (actionItem) {\r\n        cssClassArray.push(ACTION_ITEM);\r\n    }\r\n    if (animationSpin) {\r\n        cssClassArray.push(ANIMATION_SPIN);\r\n    }\r\n    if (additionalCSS.length > 0) {\r\n        cssClassArray.push(...additionalCSS);\r\n    }\r\n    return cssClassArray;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const selectFeature = Symbol('selectFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link selectFeature}.\r\n */\r\nexport interface Selectable {\r\n    selected: boolean\r\n}\r\n\r\nexport function isSelectable(element: SModelElementImpl): element is SModelElementImpl & Selectable {\r\n    return element.hasFeature(selectFeature);\r\n}\r\n\r\nexport function isSelected(element: SModelElementImpl | undefined): element is SModelElementImpl & Selectable {\r\n    return element !== undefined && isSelectable(element) && element.selected;\r\n}\r\n", "/**\n * Copyright (c) 2016 Denys Krasnoshchok\n * \n * Homepage: https://smartscheduling.com/en/documentation/autocomplete\n * Source: https://github.com/kraaden/autocomplete\n * \n * MIT License\n */\n\nexport const enum EventTrigger {\n    Keyboard = 0,\n    Focus = 1,\n    Mouse = 2,\n    /**\n     * Fetch is triggered manually by calling `fetch` function returned in `AutocompleteResult`\n     */\n    Manual = 3\n}\n\n/**\n * Enum for controlling form submission when `ENTER` key is pressed in the autocomplete input field.\n */\nexport const enum PreventSubmit {\n    Never = 0,\n    Always = 1,\n    /**\n     * Form submission is prevented only when an item is selected from the autocomplete list.\n     */\n    OnSelect = 2\n}\n\nexport interface AutocompleteItem {\n    label?: string;\n    group?: string;\n}\n\nexport interface AutocompleteEvent<T extends Event> {\n    /**\n     * Native event object passed by browser to the event handler\n     */\n    event: T;\n\n    /**\n     * Fetch data and display autocomplete\n     */\n    fetch: () => void;\n}\n\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\n    /**\n     * Autocomplete will be attached to this element.\n     */\n    input: HTMLInputElement | HTMLTextAreaElement;\n\n    /**\n     * Provide your own container for the widget.\n     * If not specified, a new DIV element will be created.\n     */\n    container?: HTMLDivElement;\n\n    /**\n     * This method allows you to override the default rendering function for items.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    render?: (item: T, currentValue: string, index: number) => HTMLDivElement | undefined;\n\n    /**\n     * This method allows you to override the default rendering function for item groups.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\n\n    /**\n     * If specified, the autocomplete DOM element will have this class assigned to it.\n     */\n    className?: string;\n\n    /**\n     * Specify the minimum text length required to show autocomplete.\n     */\n    minLength?: number;\n\n    /**\n     * The message that will be showed when there are no suggestions that match the entered value.\n     */\n    emptyMsg?: string;\n\n    /**\n     * This method will be called when user choose an item in autocomplete. The selected item will be passed as the first parameter.\n     */\n    onSelect: (item: T, input: HTMLInputElement | HTMLTextAreaElement) => void;\n\n    /**\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\n     */\n    showOnFocus?: boolean;\n\n    /**\n     * This method will be called to prepare suggestions and then pass them to autocomplete.\n     * @param {string} text - text in the input field\n     * @param {(items: T[] | false) => void} update - a callback function that must be called after suggestions are prepared\n     * @param {EventTrigger} trigger - type of the event that triggered the fetch\n     * @param {number} cursorPos - position of the cursor in the input field\n     */\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger, cursorPos: number) => void;\n\n    /**\n     * Enforces that the fetch function will only be called once within the specified time frame (in milliseconds) and\n     * delays execution. This prevents flooding your server with AJAX requests.\n     */\n    debounceWaitMs?: number;\n\n    /**\n     * Callback for additional autocomplete customization\n     * @param {HTMLInputElement | HTMLTextAreaElement} input - input box associated with autocomplete\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\n     * @param {HTMLDivElement} container - container with suggestions\n     * @param {number} maxHeight - max height that can be used by autocomplete\n     */\n    customize?: (input: HTMLInputElement | HTMLTextAreaElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\n\n    /**\n     * Controls form submission when the ENTER key is pressed in a input field.\n     */\n    preventSubmit?: PreventSubmit;\n\n    /**\n     * Prevents the first item in the list from being selected automatically. This option allows you\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\n     */\n    disableAutoSelect?: boolean;\n\n    /**\n     * Provide your keyup event handler to display autocomplete when a key is pressed that doesn't modify the content. You can also perform some additional actions.\n     */\n    keyup?: (e: AutocompleteEvent<KeyboardEvent>) => void;\n\n    /**\n     * Allows to display autocomplete on mouse clicks or perform some additional actions.\n     */\n    click?: (e: AutocompleteEvent<MouseEvent>) => void;\n}\n\nexport interface AutocompleteResult {\n    /**\n     * Remove event handlers, DOM elements and ARIA/accessibility attributes created by the widget.\n     */\n    destroy: () => void;\n\n    /**\n     * This function allows to manually start data fetching and display autocomplete. Note that\n     * it does not automatically place focus on the input field, so you may need to do so manually\n     * in certain situations.\n     */\n    fetch: () => void;\n}\n\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\n\n    // just an alias to minimize JS file size\n    const doc = document;\n\n    const container: HTMLDivElement = settings.container || doc.createElement('div');\n    const preventSubmit: PreventSubmit = settings.preventSubmit || PreventSubmit.Never;\n\n    container.id = container.id || 'autocomplete-' + uid();\n    const containerStyle = container.style;\n    const debounceWaitMs = settings.debounceWaitMs || 0;\n    const disableAutoSelect = settings.disableAutoSelect || false;\n    const customContainerParent = container.parentElement;\n\n    let items: T[] = [];\n    let inputValue = '';\n    let minLen = 2;\n    const showOnFocus = settings.showOnFocus;\n    let selected: T | undefined;\n    let fetchCounter = 0;\n    let debounceTimer: number | undefined;\n    let destroyed = false;\n\n    // Fixes #104: autocomplete selection is broken on Firefox for Android\n    let suppressAutocomplete = false;\n\n    if (settings.minLength !== undefined) {\n        minLen = settings.minLength;\n    }\n\n    if (!settings.input) {\n        throw new Error('input undefined');\n    }\n\n    const input: HTMLInputElement | HTMLTextAreaElement = settings.input;\n\n    container.className = 'autocomplete ' + (settings.className || '');\n    container.setAttribute('role', 'listbox');\n\n    input.setAttribute('role', 'combobox');\n    input.setAttribute('aria-expanded', 'false');\n    input.setAttribute('aria-autocomplete', 'list');\n    input.setAttribute('aria-controls', container.id);\n    input.setAttribute('aria-owns', container.id);\n    input.setAttribute('aria-activedescendant', '');\n    input.setAttribute('aria-haspopup', 'listbox');\n\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\n    containerStyle.position = 'absolute';\n\n    /**\n     * Generate a very complex textual ID that greatly reduces the chance of a collision with another ID or text.\n     */\n    function uid(): string {\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\n    }\n\n    /**\n     * Detach the container from DOM\n     */\n    function detach() {\n        const parent = container.parentNode;\n        if (parent) {\n            parent.removeChild(container);\n        }\n    }\n\n    /**\n     * Clear debouncing timer if assigned\n     */\n    function clearDebounceTimer() {\n        if (debounceTimer) {\n            window.clearTimeout(debounceTimer);\n        }\n    }\n\n    /**\n     * Attach the container to DOM\n     */\n    function attach() {\n        if (!container.parentNode) {\n            (customContainerParent || doc.body).appendChild(container);\n        }\n    }\n\n    /**\n     * Check if container for autocomplete is displayed\n     */\n    function containerDisplayed(): boolean {\n        return !!container.parentNode;\n    }\n\n    /**\n     * Clear autocomplete state and hide container\n     */\n    function clear() {\n        // prevent the update call if there are pending AJAX requests\n        fetchCounter++;\n\n        items = [];\n        inputValue = '';\n        selected = undefined;\n        input.setAttribute('aria-activedescendant', '');\n        input.setAttribute('aria-expanded', 'false');\n        detach();\n    }\n\n    /**\n     * Update autocomplete position\n     */\n    function updatePosition() {\n        if (!containerDisplayed()) {\n            return;\n        }\n\n        input.setAttribute('aria-expanded', 'true');\n\n        containerStyle.height = 'auto';\n        containerStyle.width = input.offsetWidth + 'px';\n\n        let maxHeight = 0;\n        let inputRect: DOMRect | undefined;\n\n        function calc() {\n            const docEl = doc.documentElement as HTMLElement;\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\n\n            inputRect = input.getBoundingClientRect();\n\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\n            const left = inputRect.left + scrollLeft - clientLeft;\n\n            containerStyle.top = top + 'px';\n            containerStyle.left = left + 'px';\n\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\n\n            if (maxHeight < 0) {\n                maxHeight = 0;\n            }\n\n            containerStyle.top = top + 'px';\n            containerStyle.bottom = '';\n            containerStyle.left = left + 'px';\n            containerStyle.maxHeight = maxHeight + 'px';\n        }\n\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\n        calc();\n        calc();\n\n        if (settings.customize && inputRect) {\n            settings.customize(input, inputRect, container, maxHeight);\n        }\n    }\n\n    /**\n     * Redraw the autocomplete div element with suggestions\n     */\n    function update() {\n\n        container.innerHTML = '';\n        input.setAttribute('aria-activedescendant', '');\n\n        // function for rendering autocomplete suggestions\n        let render = function (item: T, _: string, __: number): HTMLDivElement | undefined {\n            const itemElement = doc.createElement('div');\n            itemElement.textContent = item.label || '';\n            return itemElement;\n        };\n        if (settings.render) {\n            render = settings.render;\n        }\n\n        // function to render autocomplete groups\n        let renderGroup = function (groupName: string, _: string): HTMLDivElement | undefined {\n            const groupDiv = doc.createElement('div');\n            groupDiv.textContent = groupName;\n            return groupDiv;\n        };\n        if (settings.renderGroup) {\n            renderGroup = settings.renderGroup;\n        }\n\n        const fragment = doc.createDocumentFragment();\n        let prevGroup = uid();\n\n        items.forEach(function (item: T, index: number): void {\n            if (item.group && item.group !== prevGroup) {\n                prevGroup = item.group;\n                const groupDiv = renderGroup(item.group, inputValue);\n                if (groupDiv) {\n                    groupDiv.className += ' group';\n                    fragment.appendChild(groupDiv);\n                }\n            }\n            const div = render(item, inputValue, index);\n            if (div) {\n                div.id = `${container.id}_${index}`;\n                div.setAttribute('role', 'option');\n                div.addEventListener('click', function (ev: MouseEvent): void {\n                    suppressAutocomplete = true;\n                    try {\n                        settings.onSelect(item, input);\n                    } finally {\n                        suppressAutocomplete = false;\n                    }\n                    clear();\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                });\n                if (item === selected) {\n                    div.className += ' selected';\n                    div.setAttribute('aria-selected', 'true');\n                    input.setAttribute('aria-activedescendant', div.id);\n                }\n                fragment.appendChild(div);\n            }\n        });\n        container.appendChild(fragment);\n        if (items.length < 1) {\n            if (settings.emptyMsg) {\n                const empty = doc.createElement('div');\n                empty.id = `${container.id}_${uid()}`;\n                empty.className = 'empty';\n                empty.textContent = settings.emptyMsg;\n                container.appendChild(empty);\n                input.setAttribute('aria-activedescendant', empty.id);\n            } else {\n                clear();\n                return;\n            }\n        }\n\n        attach();\n        updatePosition();\n\n        updateScroll();\n    }\n\n    function updateIfDisplayed() {\n        if (containerDisplayed()) {\n            update();\n        }\n    }\n\n    function resizeEventHandler() {\n        updateIfDisplayed();\n    }\n\n    function scrollEventHandler(e: Event) {\n        if (e.target !== container) {\n            updateIfDisplayed();\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    function inputEventHandler() {\n        if (!suppressAutocomplete) {\n            fetch(EventTrigger.Keyboard);\n        }\n    }\n\n    /**\n     * Automatically move scroll bar if selected item is not visible\n     */\n    function updateScroll() {\n        const elements = container.getElementsByClassName('selected');\n        if (elements.length > 0) {\n            let element = elements[0] as HTMLDivElement;\n\n            // make group visible\n            const previous = element.previousElementSibling as HTMLDivElement;\n            if (previous && previous.className.indexOf('group') !== -1 && !previous.previousElementSibling) {\n                element = previous;\n            }\n\n            if (element.offsetTop < container.scrollTop) {\n                container.scrollTop = element.offsetTop;\n            } else {\n                const selectBottom = element.offsetTop + element.offsetHeight;\n                const containerBottom = container.scrollTop + container.offsetHeight;\n                if (selectBottom > containerBottom) {\n                    container.scrollTop += selectBottom - containerBottom;\n                }\n            }\n        }\n    }\n\n    function selectPreviousSuggestion() {\n        const index = items.indexOf(selected!);\n\n        selected = index === -1\n            ? undefined\n            : items[(index + items.length - 1) % items.length];\n\n        updateSelectedSuggestion(index);\n    }\n\n    function selectNextSuggestion() {\n        const index = items.indexOf(selected!);\n\n        selected = items.length < 1\n            ? undefined\n            : index === -1\n                ? items[0]\n                : items[(index + 1) % items.length];\n\n        updateSelectedSuggestion(index);\n    }\n\n    function updateSelectedSuggestion(index: number) {\n        if (items.length > 0) {\n            unselectSuggestion(index);\n            selectSuggestion(items.indexOf(selected!));\n            updateScroll();\n        }\n    }\n\n    function selectSuggestion(index: number) {\n        var element = doc.getElementById(container.id + \"_\" + index);\n        if (element) {\n            element.classList.add('selected');\n            element.setAttribute('aria-selected', 'true');\n            input.setAttribute('aria-activedescendant', element.id);\n        }\n    }\n\n    function unselectSuggestion(index: number) {\n        var element = doc.getElementById(container.id + \"_\" + index);\n        if (element) {\n            element.classList.remove('selected');\n            element.removeAttribute('aria-selected');\n            input.removeAttribute('aria-activedescendant');\n        }\n    }\n\n    function handleArrowAndEscapeKeys(ev: KeyboardEvent, key: 'ArrowUp' | 'ArrowDown' | 'Escape') {\n        const containerIsDisplayed = containerDisplayed();\n\n        if (key === 'Escape') {\n            clear();\n        } else {\n            if (!containerIsDisplayed || items.length < 1) {\n                return;\n            }\n            key === 'ArrowUp'\n                ? selectPreviousSuggestion()\n                : selectNextSuggestion();\n        }\n\n        ev.preventDefault();\n\n        if (containerIsDisplayed) {\n            ev.stopPropagation();\n        }\n    }\n\n    function handleEnterKey(ev: KeyboardEvent) {\n        if (selected) {\n            if (preventSubmit === PreventSubmit.OnSelect) {\n                ev.preventDefault();\n            }\n            suppressAutocomplete = true;\n            try {\n                settings.onSelect(selected, input);\n            } finally {\n                suppressAutocomplete = false;\n            }\n            clear();\n        }\n\n        if (preventSubmit === PreventSubmit.Always) {\n            ev.preventDefault();\n        }\n    }\n\n    function keydownEventHandler(ev: KeyboardEvent) {\n        const key = ev.key;\n\n        switch (key) {\n            case 'ArrowUp':\n            case 'ArrowDown':\n            case 'Escape':\n                handleArrowAndEscapeKeys(ev, key);\n                break;\n            case 'Enter':\n                handleEnterKey(ev);\n                break;\n            default:\n                break;\n        }\n    }\n\n    function focusEventHandler() {\n        if (showOnFocus) {\n            fetch(EventTrigger.Focus);\n        }\n    }\n\n    function fetch(trigger: EventTrigger) {\n        if (input.value.length >= minLen || trigger === EventTrigger.Focus) {\n            clearDebounceTimer();\n            debounceTimer = window.setTimeout(\n                () => startFetch(input.value, trigger, input.selectionStart || 0),\n                trigger === EventTrigger.Keyboard || trigger === EventTrigger.Mouse ? debounceWaitMs : 0);\n        } else {\n            clear();\n        }\n    }\n\n    function startFetch(inputText: string, trigger: EventTrigger, cursorPos: number) {\n        if (destroyed) return;\n        const savedFetchCounter = ++fetchCounter;\n        settings.fetch(inputText, function (elements: T[] | false): void {\n            if (fetchCounter === savedFetchCounter && elements) {\n                items = elements;\n                inputValue = inputText;\n                selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\n                update();\n            }\n        }, trigger, cursorPos);\n    }\n\n    function keyupEventHandler(e: KeyboardEvent) {\n        if (settings.keyup) {\n            settings.keyup({\n                event: e,\n                fetch: () => fetch(EventTrigger.Keyboard)\n            });\n            return;\n        }\n\n        if (!containerDisplayed() && e.key === 'ArrowDown') {\n            fetch(EventTrigger.Keyboard);\n        }\n    }\n\n    function clickEventHandler(e: MouseEvent) {\n        settings.click && settings.click({\n            event: e,\n            fetch: () => fetch(EventTrigger.Mouse)\n        });\n    }\n\n    function blurEventHandler() {\n        // when an item is selected by mouse click, the blur event will be initiated before the click event and remove DOM elements,\n        // so that the click event will never be triggered. In order to avoid this issue, DOM removal should be delayed.\n        setTimeout(() => {\n            if (doc.activeElement !== input) {\n                clear();\n            }\n        }, 200);\n    }\n\n    function manualFetch() {\n        startFetch(input.value, EventTrigger.Manual, input.selectionStart || 0);\n    }\n\n    /**\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\n     */\n    container.addEventListener('mousedown', function (evt: Event) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    });\n\n    /**\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\n     * See: https://stackoverflow.com/a/9210267/13172349\n     */\n    container.addEventListener('focus', () => input.focus());\n\n    // If the custom autocomplete container is already appended to the DOM during widget initialization, detach it.\n    detach();\n\n    /**\n     * This function will remove DOM elements and clear event handlers\n     */\n    function destroy() {\n        input.removeEventListener('focus', focusEventHandler);\n        input.removeEventListener('keyup', keyupEventHandler as EventListenerOrEventListenerObject)\n        input.removeEventListener('click', clickEventHandler as EventListenerOrEventListenerObject)\n        input.removeEventListener('keydown', keydownEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener('input', inputEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener('blur', blurEventHandler);\n        window.removeEventListener('resize', resizeEventHandler);\n        doc.removeEventListener('scroll', scrollEventHandler, true);\n        input.removeAttribute('role');\n        input.removeAttribute('aria-expanded');\n        input.removeAttribute('aria-autocomplete');\n        input.removeAttribute('aria-controls');\n        input.removeAttribute('aria-activedescendant');\n        input.removeAttribute('aria-owns');\n        input.removeAttribute('aria-haspopup');\n        clearDebounceTimer();\n        clear();\n        destroyed = true;\n    }\n\n    // setup event handlers\n    input.addEventListener('keyup', keyupEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener('click', clickEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener('keydown', keydownEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener('input', inputEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener('blur', blurEventHandler);\n    input.addEventListener('focus', focusEventHandler);\n    window.addEventListener('resize', resizeEventHandler);\n    doc.addEventListener('scroll', scrollEventHandler, true);\n\n    return {\n        destroy,\n        fetch: manualFetch\n    };\n}\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { AutocompleteResult, AutocompleteSettings } from \"autocompleter\";\r\nimport { inject, injectable } from \"inversify\";\r\nimport { Action, isAction } from 'sprotty-protocol/lib/actions';\r\nimport { LabeledAction, isLabeledAction } from \"../../base/actions/action\";\r\nimport { IActionDispatcherProvider } from \"../../base/actions/action-dispatcher\";\r\nimport { SModelElementImpl, SModelRootImpl } from \"../../base/model/smodel\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { AbstractUIExtension } from \"../../base/ui-extensions/ui-extension\";\r\nimport { SetUIExtensionVisibilityAction } from \"../../base/ui-extensions/ui-extension-registry\";\r\nimport { DOMHelper } from \"../../base/views/dom-helper\";\r\nimport { KeyListener } from \"../../base/views/key-tool\";\r\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\r\nimport { codiconCSSClasses, codiconCSSString } from \"../../utils/codicon\";\r\nimport { toArray } from \"../../utils/iterable\";\r\nimport { matchesKeystroke } from \"../../utils/keyboard\";\r\nimport { getAbsoluteClientBounds } from \"../bounds/model\";\r\nimport { isSelectable } from \"../select/model\";\r\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\r\nimport { MousePositionTracker } from \"../../base/views/mouse-tool\";\r\nimport configureAutocomplete from \"autocompleter\";\r\n\r\n@injectable()\r\nexport class CommandPalette extends AbstractUIExtension {\r\n    static readonly ID = \"command-palette\";\r\n    static readonly isInvokePaletteKey = (event: KeyboardEvent) => matchesKeystroke(event, 'Space', 'ctrl');\r\n\r\n    protected loadingIndicatorClasses = codiconCSSClasses('loading', false, true, ['loading']);\r\n    protected xOffset = 20;\r\n    protected yOffset = 20;\r\n    protected defaultWidth = 400;\r\n    protected debounceWaitMs = 100;\r\n    protected noCommandsMsg = \"No commands available\";\r\n\r\n    protected inputElement: HTMLInputElement;\r\n    protected loadingIndicator: HTMLSpanElement;\r\n    protected autoCompleteResult: AutocompleteResult;\r\n    protected paletteIndex = 0;\r\n    protected contextActions?: LabeledAction[];\r\n\r\n    @inject(TYPES.IActionDispatcherProvider) protected actionDispatcherProvider: IActionDispatcherProvider;\r\n    @inject(TYPES.ICommandPaletteActionProviderRegistry) protected actionProviderRegistry: CommandPaletteActionProviderRegistry;\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\r\n    @inject(MousePositionTracker) protected mousePositionTracker: MousePositionTracker;\r\n\r\n    public id() { return CommandPalette.ID; }\r\n    public containerClass() { return \"command-palette\"; }\r\n\r\n    override show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\r\n        super.show(root, ...contextElementIds);\r\n        this.paletteIndex = 0;\r\n        this.contextActions = undefined;\r\n        this.inputElement!.value = \"\";\r\n        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));\r\n        this.inputElement.focus();\r\n    }\r\n\r\n    protected initializeContents(containerElement: HTMLElement) {\r\n        containerElement.style.position = \"absolute\";\r\n        this.inputElement = document.createElement('input');\r\n        this.inputElement.style.width = '100%';\r\n        this.inputElement.addEventListener('keydown', (event) => this.hideIfEscapeEvent(event));\r\n        this.inputElement.addEventListener('keydown', (event) => this.cylceIfInvokePaletteKey(event));\r\n        this.inputElement.onblur = () => window.setTimeout(() => this.hide(), 200);\r\n        containerElement.appendChild(this.inputElement);\r\n    }\r\n\r\n    protected hideIfEscapeEvent(event: KeyboardEvent): any {\r\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\r\n    }\r\n\r\n    protected cylceIfInvokePaletteKey(event: KeyboardEvent): any {\r\n        if (CommandPalette.isInvokePaletteKey(event)) { this.cycle(); }\r\n    }\r\n\r\n    protected cycle() {\r\n        this.contextActions = undefined;\r\n        this.paletteIndex++;\r\n    }\r\n\r\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...selectedElementIds: string[]) {\r\n        let x = this.xOffset;\r\n        let y = this.yOffset;\r\n        const selectedElements = toArray(root.index.all().filter(e => isSelectable(e) && e.selected));\r\n        if (selectedElements.length === 1) {\r\n            const bounds = getAbsoluteClientBounds(selectedElements[0], this.domHelper, this.viewerOptions);\r\n            x += bounds.x + bounds.width;\r\n            y += bounds.y;\r\n        } else {\r\n            const bounds = getAbsoluteClientBounds(root, this.domHelper, this.viewerOptions);\r\n            x += bounds.x;\r\n            y += bounds.y;\r\n        }\r\n        containerElement.style.left = `${x}px`;\r\n        containerElement.style.top = `${y}px`;\r\n        containerElement.style.width = `${this.defaultWidth}px`;\r\n    }\r\n\r\n    protected autocompleteSettings(root: Readonly<SModelRootImpl>): AutocompleteSettings<LabeledAction> {\r\n        return {\r\n            input: this.inputElement,\r\n            emptyMsg: this.noCommandsMsg,\r\n            className: \"command-palette-suggestions\",\r\n            debounceWaitMs: this.debounceWaitMs,\r\n            showOnFocus: true,\r\n            minLength: -1,\r\n            fetch: (text: string, update: (items: LabeledAction[]) => void) =>\r\n                this.updateAutoCompleteActions(update, text, root),\r\n            onSelect: (item: LabeledAction) => this.onSelect(item),\r\n            render: (item: LabeledAction, currentValue: string): HTMLDivElement | undefined =>\r\n                this.renderLabeledActionSuggestion(item, currentValue),\r\n            customize: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => {\r\n                this.customizeSuggestionContainer(container, inputRect, maxHeight);\r\n            }\r\n        };\r\n    }\r\n\r\n    protected onSelect(item: LabeledAction) {\r\n        this.executeAction(item);\r\n        this.hide();\r\n    }\r\n\r\n    protected updateAutoCompleteActions(update: (items: LabeledAction[]) => void, text: string, root: Readonly<SModelRootImpl>) {\r\n        this.onLoading();\r\n        if (this.contextActions) {\r\n            update(this.filterActions(text, this.contextActions));\r\n            this.onLoaded('success');\r\n        } else {\r\n            this.actionProviderRegistry\r\n                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)\r\n                .then(actions => {\r\n                    this.contextActions = actions;\r\n                    update(this.filterActions(text, actions));\r\n                    this.onLoaded('success');\r\n                })\r\n                .catch((reason) => {\r\n                    this.logger.error(this, \"Failed to obtain actions from command palette action providers\", reason);\r\n                    this.onLoaded('error');\r\n                });\r\n        }\r\n    }\r\n\r\n    protected onLoading() {\r\n        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {\r\n            return;\r\n        }\r\n        this.loadingIndicator = document.createElement('span');\r\n        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);\r\n        this.containerElement.appendChild(this.loadingIndicator);\r\n    }\r\n\r\n    protected onLoaded(success: 'success' | 'error') {\r\n        if (this.containerElement.contains(this.loadingIndicator)) {\r\n            this.containerElement.removeChild(this.loadingIndicator);\r\n        }\r\n    }\r\n\r\n    protected renderLabeledActionSuggestion(item: LabeledAction, value: string) {\r\n        const itemElement = document.createElement(\"div\");\r\n        const wordMatcher = espaceForRegExp(value).split(\" \").join(\"|\");\r\n        const regex = new RegExp(wordMatcher, \"gi\");\r\n        if (item.icon) {\r\n            this.renderIcon(itemElement, item.icon);\r\n        }\r\n        if (value.length > 0) {\r\n            itemElement.innerHTML += item.label.replace(regex, (match) => \"<em>\" + match + \"</em>\").replace(/ /g, '&nbsp;');\r\n        } else {\r\n            itemElement.innerHTML += item.label.replace(/ /g, '&nbsp;');\r\n        }\r\n        return itemElement;\r\n    }\r\n\r\n    protected renderIcon(itemElement: HTMLDivElement, iconId: string) {\r\n        itemElement.innerHTML += `<span class=\"icon ${this.getCodicon(iconId)}\"></span>`;\r\n    }\r\n\r\n    protected getFontAwesomeIcon(iconId: string) {\r\n        return `fa fa-${iconId}`;\r\n    }\r\n\r\n    protected getCodicon(iconId: string) {\r\n        return codiconCSSString(iconId);\r\n    }\r\n\r\n    protected filterActions(filterText: string, actions: LabeledAction[]): LabeledAction[] {\r\n        return toArray(actions.filter(action => {\r\n            const label = action.label.toLowerCase();\r\n            const searchWords = filterText.split(' ');\r\n            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);\r\n        }));\r\n    }\r\n\r\n    protected customizeSuggestionContainer(container: HTMLDivElement, inputRect: ClientRect | DOMRect, maxHeight: number) {\r\n        // move container into our command palette container as this is already positioned correctly\r\n        container.style.position = \"fixed\";\r\n        if (this.containerElement) {\r\n            this.containerElement.appendChild(container);\r\n        }\r\n    }\r\n\r\n    override hide() {\r\n        super.hide();\r\n        if (this.autoCompleteResult) {\r\n            this.autoCompleteResult.destroy();\r\n        }\r\n    }\r\n\r\n    protected executeAction(input: LabeledAction | Action[] | Action) {\r\n        this.actionDispatcherProvider()\r\n            .then((actionDispatcher) => actionDispatcher.dispatchAll(toActionArray(input)))\r\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute command palette action', reason));\r\n    }\r\n}\r\n\r\nfunction toActionArray(input: LabeledAction | Action[] | Action): Action[] {\r\n    if (isLabeledAction(input)) {\r\n        return input.actions;\r\n    } else if (isAction(input)) {\r\n        return [input];\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction espaceForRegExp(value: string): string {\r\n    return value.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n}\r\n\r\nexport class CommandPaletteKeyListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'Escape')) {\r\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: false, contextElementsId: [] })];\r\n        } else if (CommandPalette.isInvokePaletteKey(event)) {\r\n            const selectedElements = toArray(element.index.all().filter(e => isSelectable(e) && e.selected).map(e => e.id));\r\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: true, contextElementsId: selectedElements })];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { LabeledAction } from \"../../base/actions/action\";\r\n\r\nexport interface MenuItem extends LabeledAction {\r\n    /** Technical id of the menu item. */\r\n    readonly id: string;\r\n    /** String indicating the order. */\r\n    readonly sortString?: string;\r\n    /** String indicating the grouping (separators). Items with equal group will be in the same group. */\r\n    readonly group?: string;\r\n    /**\r\n     * The optional parent id can be used to add this element as a child of another element provided by anohter menu provider.\r\n     * The `parentId` must be fully qualified in the form of `a.b.c`, whereas `a`, `b` and `c` are referring to the IDs of other elements.\r\n     * Note that this attribute will only be considered for root items of a provider and not for children of provided items.\r\n     */\r\n    readonly parentId?: string;\r\n    /** Function determining whether the element is enabled. */\r\n    readonly isEnabled?: () => boolean;\r\n    /** Function determining whether the element is visible. */\r\n    readonly isVisible?: () => boolean;\r\n    /** Function determining whether the element is toggled on or off. */\r\n    readonly isToggled?: () => boolean;\r\n    /** Children of this item. If this item has children, they will be added into a submenu of this item. */\r\n    children?: MenuItem[];\r\n}\r\n\r\nexport type Anchor = MouseEvent | { x: number, y: number };\r\n\r\nexport function toAnchor(anchor: HTMLElement | { x: number, y: number }): Anchor {\r\n    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;\r\n}\r\n\r\nexport interface IContextMenuService {\r\n    show(items: MenuItem[], anchor: Anchor, onHide?: () => void): void;\r\n}\r\n\r\nexport type IContextMenuServiceProvider = () => Promise<IContextMenuService>;\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { DeleteElementAction } from 'sprotty-protocol/lib/actions';\r\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { SModelElementImpl, SParentElementImpl, SChildElementImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\n\r\nexport const deletableFeature = Symbol('deletableFeature');\r\n\r\n/**\r\n *  Feature extension interface for {@link deletableFeature}.\r\n */\r\nexport interface Deletable {\r\n}\r\n\r\nexport function isDeletable<T extends SModelElementImpl>(element: T): element is T & Deletable & SChildElementImpl {\r\n    return element instanceof SChildElementImpl && element.hasFeature(deletableFeature);\r\n}\r\n\r\nexport class ResolvedDelete {\r\n    child: SChildElementImpl;\r\n    parent: SParentElementImpl;\r\n}\r\n\r\n@injectable()\r\nexport class DeleteElementCommand extends Command {\r\n    static readonly KIND = DeleteElementAction.KIND;\r\n\r\n    resolvedDeletes: ResolvedDelete[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: DeleteElementAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const index = context.root.index;\r\n        for (const id of this.action.elementIds) {\r\n            const element = index.getById(id);\r\n            if (element && isDeletable(element)) {\r\n                this.resolvedDeletes.push({ child: element, parent: element.parent });\r\n                element.parent.remove(element);\r\n            }\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        for (const resolvedDelete of this.resolvedDeletes)\r\n            resolvedDelete.parent.add(resolvedDelete.child);\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        for (const resolvedDelete of this.resolvedDeletes)\r\n            resolvedDelete.parent.remove(resolvedDelete.child);\r\n        return context.root;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject, optional } from 'inversify';\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { MenuItem } from './context-menu-service';\r\nimport { SModelRootImpl } from '../../base/model/smodel';\r\nimport { LabeledAction } from '../../base/actions/action';\r\nimport { TYPES } from '../../base/types';\r\nimport { isDeletable } from '../edit/delete';\r\nimport { isSelected } from '../select/model';\r\nimport { DeleteElementAction } from 'sprotty-protocol';\r\n\r\nexport interface IContextMenuItemProvider {\r\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point): Promise<LabeledAction[]>;\r\n}\r\n\r\n@injectable()\r\nexport class ContextMenuProviderRegistry implements IContextMenuItemProvider {\r\n\r\n    constructor(@multiInject(TYPES.IContextMenuItemProvider) @optional() protected menuProviders: IContextMenuItemProvider[] = []) { }\r\n\r\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point) {\r\n        const menues = this.menuProviders.map(provider => provider.getItems(root, lastMousePosition));\r\n        return Promise.all(menues).then(this.flattenAndRestructure);\r\n    }\r\n\r\n    private flattenAndRestructure(p: MenuItem[][]): MenuItem[] {\r\n        let menuItems = p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc, []);\r\n        const menuItemsWithParentId = menuItems.filter(menuItem => menuItem.parentId);\r\n        for (const menuItem of menuItemsWithParentId) {\r\n            if (menuItem.parentId) {\r\n                const fragments = menuItem.parentId.split('.');\r\n                let matchingParent: MenuItem | undefined = undefined;\r\n                let nextParents = menuItems;\r\n                for (const fragment of fragments) {\r\n                    matchingParent = nextParents.find(item => fragment === item.id);\r\n                    if (matchingParent && matchingParent.children)\r\n                        nextParents = matchingParent.children;\r\n                }\r\n                if (matchingParent) {\r\n                    if (matchingParent.children) {\r\n                        matchingParent.children.push(menuItem);\r\n                    } else {\r\n                        matchingParent.children = [menuItem];\r\n                    }\r\n                    menuItems = menuItems.filter(item => item !== menuItem);\r\n                }\r\n            }\r\n        }\r\n        return menuItems;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class DeleteContextMenuItemProvider implements IContextMenuItemProvider {\r\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point): Promise<MenuItem[]> {\r\n        const selectedElements = Array.from(root.index.all().filter(isSelected).filter(isDeletable));\r\n        return Promise.resolve([\r\n            {\r\n                id: 'delete',\r\n                label: 'Delete',\r\n                sortString: 'd',\r\n                group: 'edit',\r\n                actions: [DeleteElementAction.create(selectedElements.map(e => e.id))],\r\n                isEnabled: () => selectedElements.length > 0\r\n            }\r\n        ]);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject } from \"inversify\";\r\nimport { Action, SelectAction } from \"sprotty-protocol/lib/actions\";\r\nimport { IActionDispatcher } from \"../../base/actions/action-dispatcher\";\r\nimport { SModelElementImpl } from \"../../base/model/smodel\";\r\nimport { findParentByFeature } from \"../../base/model/smodel-utils\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { MouseListener } from \"../../base/views/mouse-tool\";\r\nimport { isSelectable, isSelected } from \"../select/model\";\r\nimport { IContextMenuService, IContextMenuServiceProvider } from \"./context-menu-service\";\r\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\r\n\r\nexport class ContextMenuMouseListener extends MouseListener {\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n    constructor(\r\n        @inject(TYPES.IContextMenuServiceProvider) protected readonly contextMenuService: IContextMenuServiceProvider,\r\n        @inject(TYPES.IContextMenuProviderRegistry) protected readonly menuProvider: ContextMenuProviderRegistry) {\r\n        super();\r\n    }\r\n\r\n    override contextMenu(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        this.showContextMenu(target, event);\r\n        return [];\r\n    }\r\n\r\n    protected async showContextMenu(target: SModelElementImpl, event: MouseEvent): Promise<void> {\r\n        let menuService: IContextMenuService;\r\n        try {\r\n            menuService = await this.contextMenuService();\r\n        } catch (rejected) {\r\n            // IContextMenuService is not bound => do nothing\r\n            return;\r\n        }\r\n\r\n        let isTargetSelected = false;\r\n        const selectableTarget = findParentByFeature(target, isSelectable);\r\n        if (selectableTarget) {\r\n            isTargetSelected = selectableTarget.selected;\r\n            selectableTarget.selected = true;\r\n        }\r\n\r\n        const root = target.root;\r\n        const mousePosition = { x: event.x, y: event.y };\r\n        if (target.id === root.id || isSelected(selectableTarget)) {\r\n            const menuItems = await this.menuProvider.getItems(root, mousePosition);\r\n            const restoreSelection = () => { if (selectableTarget) selectableTarget.selected = isTargetSelected; };\r\n            menuService.show(menuItems, mousePosition, restoreSelection);\r\n        } else {\r\n            if (isSelectable(target)) {\r\n                const options = { selectedElementsIDs: [target.id], deselectedElementsIDs: Array.from(root.index.all().filter(isSelected), (val) => { return val.id; }) };\r\n                await this.actionDispatcher.dispatch(SelectAction.create(options));\r\n            }\r\n            const items = await this.menuProvider.getItems(root, mousePosition);\r\n            menuService.show(items, mousePosition);\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const hoverFeedbackFeature = Symbol('hoverFeedbackFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link hoverFeedbackFeature}.\r\n */\r\nexport interface Hoverable {\r\n    hoverFeedback: boolean\r\n}\r\n\r\nexport function isHoverable(element: SModelElementImpl): element is SModelElementImpl & Hoverable {\r\n    return element.hasFeature(hoverFeedbackFeature);\r\n}\r\n\r\nexport const popupFeature = Symbol('popupFeature');\r\n\r\nexport function hasPopupFeature(element: SModelElementImpl): boolean {\r\n    return element.hasFeature(popupFeature);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const moveFeature = Symbol('moveFeature');\r\n\r\n/**\r\n * An element that can be placed at a specific location using its position\r\n * property.\r\n *\r\n * Feature extension interface for {@link moveFeature}.\r\n */\r\nexport interface Locateable {\r\n    position: Point\r\n}\r\n\r\nexport function isLocateable(element: SModelElementImpl): element is SModelElementImpl & Locateable {\r\n    return (element as any)['position'] !== undefined;\r\n}\r\n\r\nexport function isMoveable(element: SModelElementImpl): element is SModelElementImpl & Locateable {\r\n    return element.hasFeature(moveFeature) && isLocateable(element);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SChildElementImpl, SModelElementImpl } from '../../base/model/smodel';\r\nimport { FluentIterable } from '../../utils/iterable';\r\nimport { SShapeElementImpl } from '../bounds/model';\r\nimport { deletableFeature } from '../edit/delete';\r\nimport { Selectable, selectFeature } from '../select/model';\r\nimport { Hoverable, hoverFeedbackFeature } from '../hover/model';\r\nimport { moveFeature } from '../move/model';\r\n\r\nexport abstract class SRoutableElementImpl extends SChildElementImpl {\r\n\r\n    routerKind?: string;\r\n    routingPoints: Point[] = [];\r\n    sourceId: string;\r\n    targetId: string;\r\n    sourceAnchorCorrection?: number;\r\n    targetAnchorCorrection?: number;\r\n\r\n    get source(): SConnectableElementImpl | undefined {\r\n        return this.index.getById(this.sourceId) as SConnectableElementImpl;\r\n    }\r\n\r\n    get target(): SConnectableElementImpl | undefined {\r\n        return this.index.getById(this.targetId) as SConnectableElementImpl;\r\n    }\r\n\r\n    get bounds(): Bounds {\r\n        // this should also work for splines, which have the convex hull property\r\n        return this.routingPoints.reduce<Bounds>((bounds, routingPoint) => Bounds.combine(bounds, {\r\n            x: routingPoint.x,\r\n            y: routingPoint.y,\r\n            width: 0,\r\n            height: 0\r\n        }), Bounds.EMPTY);\r\n    }\r\n}\r\n\r\nexport const connectableFeature = Symbol('connectableFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link connectableFeature}.\r\n */\r\nexport interface Connectable {\r\n    canConnect(routable: SRoutableElementImpl, role: 'source' | 'target'): boolean;\r\n}\r\n\r\nexport function isConnectable<T extends SModelElementImpl>(element: T): element is Connectable & T {\r\n    return element.hasFeature(connectableFeature) && (element as any).canConnect;\r\n}\r\n\r\nexport function getAbsoluteRouteBounds(model: Readonly<SRoutableElementImpl>, route: Point[] = model.routingPoints): Bounds {\r\n    let bounds = getRouteBounds(route);\r\n    let current: SModelElementImpl = model;\r\n    while (current instanceof SChildElementImpl) {\r\n        const parent = current.parent;\r\n        bounds = parent.localToParent(bounds);\r\n        current = parent;\r\n    }\r\n    return bounds;\r\n}\r\n\r\nexport function getRouteBounds(route: Point[]): Bounds {\r\n    const bounds = { x: NaN, y: NaN, width: 0, height: 0 };\r\n    for (const point of route) {\r\n        if (isNaN(bounds.x)) {\r\n            bounds.x = point.x;\r\n            bounds.y = point.y;\r\n        } else {\r\n            if (point.x < bounds.x) {\r\n                bounds.width += bounds.x - point.x;\r\n                bounds.x = point.x;\r\n            } else if (point.x > bounds.x + bounds.width) {\r\n                bounds.width = point.x - bounds.x;\r\n            }\r\n            if (point.y < bounds.y) {\r\n                bounds.height += bounds.y - point.y;\r\n                bounds.y = point.y;\r\n            } else if (point.y > bounds.y + bounds.height) {\r\n                bounds.height = point.y - bounds.y;\r\n            }\r\n        }\r\n    }\r\n    return bounds;\r\n}\r\n\r\n/**\r\n * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source\r\n * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and\r\n * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.\r\n */\r\nexport abstract class SConnectableElementImpl extends SShapeElementImpl implements Connectable {\r\n\r\n    get anchorKind(): string | undefined {\r\n        return undefined;\r\n    }\r\n\r\n    strokeWidth: number = 0;\r\n\r\n    /**\r\n     * The incoming edges of this connectable element. They are resolved by the index, which must\r\n     * be an `SGraphIndex` for efficient lookup.\r\n     */\r\n    get incomingEdges(): FluentIterable<SRoutableElementImpl> {\r\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl) as FluentIterable<SRoutableElementImpl>;\r\n        return allEdges.filter(e => e.targetId === this.id);\r\n    }\r\n\r\n    /**\r\n     * The outgoing edges of this connectable element. They are resolved by the index, which must\r\n     * be an `SGraphIndex` for efficient lookup.\r\n     */\r\n    get outgoingEdges(): FluentIterable<SRoutableElementImpl> {\r\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl) as FluentIterable<SRoutableElementImpl>;\r\n        return allEdges.filter(e => e.sourceId === this.id);\r\n    }\r\n\r\n    canConnect(routable: SRoutableElementImpl, role: 'source' | 'target') {\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport type RoutingHandleKind = 'junction' | 'line' | 'source' | 'target' | 'manhattan-50%' |\r\n    'bezier-control-after' | 'bezier-control-before' | 'bezier-junction' | 'bezier-add' | 'bezier-remove';\r\n\r\nexport class SRoutingHandleImpl extends SChildElementImpl implements Selectable, Hoverable {\r\n    static readonly DEFAULT_FEATURES = [selectFeature, moveFeature, hoverFeedbackFeature];\r\n\r\n    /**\r\n     * 'junction' is a point where two line segments meet,\r\n     * 'line' is a volatile handle placed on a line segment,\r\n     * 'source' and 'target' are the respective anchors.\r\n     */\r\n    kind: RoutingHandleKind;\r\n    /** The actual routing point index (junction) or the previous point index (line). */\r\n    pointIndex: number;\r\n    /** Whether the routing point is being dragged. */\r\n    editMode: boolean = false;\r\n\r\n    hoverFeedback: boolean = false;\r\n    selected: boolean = false;\r\n    danglingAnchor?: SDanglingAnchorImpl;\r\n\r\n    /**\r\n     * SRoutingHandles are created using the constructor, so we hard-wire the\r\n     * default features\r\n     */\r\n    override hasFeature(feature: symbol): boolean {\r\n        return SRoutingHandleImpl.DEFAULT_FEATURES.indexOf(feature) !== -1;\r\n    }\r\n}\r\n\r\nexport class SDanglingAnchorImpl extends SConnectableElementImpl {\r\n    static readonly DEFAULT_FEATURES = [deletableFeature];\r\n\r\n    original?: SModelElementImpl;\r\n    override type = 'dangling-anchor';\r\n\r\n    constructor() {\r\n        super();\r\n        this.size = { width: 0, height: 0 };\r\n    }\r\n}\r\n\r\nexport const edgeInProgressID = 'edge-in-progress';\r\nexport const edgeInProgressTargetHandleID = edgeInProgressID + '-target-anchor';\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl, SChildElementImpl } from '../../base/model/smodel';\r\nimport { BoundsAware, isBoundsAware } from '../bounds/model';\r\nimport { SRoutableElementImpl } from '../routing/model';\r\n\r\nexport const edgeLayoutFeature = Symbol('edgeLayout');\r\n\r\n/**\r\n * Feature extension interface for {@link edgeLayoutFeature}.\r\n */\r\nexport interface EdgeLayoutable {\r\n    edgePlacement: EdgePlacement\r\n}\r\n\r\nexport function isEdgeLayoutable<T extends SModelElementImpl>(element: T): element is T & SChildElementImpl & BoundsAware & EdgeLayoutable {\r\n    return element instanceof SChildElementImpl\r\n        && element.parent instanceof SRoutableElementImpl\r\n        && checkEdgeLayoutable(element)\r\n        && isBoundsAware(element)\r\n        && element.hasFeature(edgeLayoutFeature);\r\n}\r\n\r\nfunction checkEdgeLayoutable(element: SChildElementImpl): element is SChildElementImpl & EdgeLayoutable {\r\n    return 'edgePlacement' in element;\r\n}\r\n\r\nexport type EdgeSide = 'left' | 'right' | 'top' | 'bottom' | 'on';\r\n\r\nexport class EdgePlacement extends Object {\r\n    /**\r\n     * true, if the label should be rotated to touch the edge tangentially\r\n     */\r\n    rotate: boolean;\r\n\r\n    /**\r\n     * where is the label relative to the line's direction\r\n     */\r\n    side: EdgeSide;\r\n\r\n    /**\r\n     * between 0 (source anchor) and 1 (target anchor)\r\n     */\r\n    position: number;\r\n\r\n    /**\r\n     * space between label and edge/connected nodes\r\n     */\r\n    offset: number;\r\n}\r\n\r\nexport const DEFAULT_EDGE_PLACEMENT: EdgePlacement = {\r\n    rotate: true,\r\n    side: 'top',\r\n    position: 0.5,\r\n    offset: 7\r\n};\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { SRoutableElementImpl } from '../routing/model';\r\n\r\nexport const editFeature = Symbol('editFeature');\r\n\r\nexport function canEditRouting(element: SModelElementImpl): element is SRoutableElementImpl {\r\n    return element instanceof SRoutableElementImpl && element.hasFeature(editFeature);\r\n}\r\n\r\n\r\nexport const editLabelFeature = Symbol('editLabelFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link editLabelFeature}.\r\n */\r\nexport interface EditableLabel  {\r\n    text: string;\r\n    readonly isMultiLine?: boolean;\r\n    readonly editControlDimension?: Dimension;\r\n    readonly editControlPositionCorrection?: Point;\r\n}\r\n\r\nexport function isEditableLabel<T extends SModelElementImpl>(element: T): element is T & EditableLabel {\r\n    return 'text' in element && element.hasFeature(editLabelFeature);\r\n}\r\n\r\nexport const withEditLabelFeature = Symbol('withEditLabelFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link withEditLabelFeature}.\r\n */\r\nexport interface WithEditableLabel  {\r\n    readonly editableLabel?: EditableLabel & SModelElementImpl;\r\n}\r\n\r\nexport function isWithEditableLabel<T extends SModelElementImpl>(element: T): element is T & WithEditableLabel {\r\n    return 'editableLabel' in element && element.hasFeature(withEditLabelFeature);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2022 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Point, toDegrees } from 'sprotty-protocol';\r\n\r\n/**\r\n * Represents an object's insets, for top, bottom, left and right\r\n */\r\nexport interface Insets {\r\n    top: number\r\n    bottom: number\r\n    left: number\r\n    right: number\r\n}\r\n\r\nexport type Orientation = 'north' | 'south' | 'east' | 'west';\r\n\r\n/**\r\n * A diamond or rhombus is a quadrilateral whose four sides all have the same length.\r\n * It consists of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,\r\n * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,\r\n * and the `bottomLeftSideLine`.\r\n */\r\nexport class Diamond {\r\n\r\n    constructor(protected bounds: Bounds) { }\r\n\r\n    get topPoint(): Point {\r\n        return {\r\n            x: this.bounds.x + this.bounds.width / 2,\r\n            y: this.bounds.y\r\n        };\r\n    }\r\n\r\n    get rightPoint(): Point {\r\n        return {\r\n            x: this.bounds.x + this.bounds.width,\r\n            y: this.bounds.y + this.bounds.height / 2\r\n        };\r\n    }\r\n\r\n    get bottomPoint(): Point {\r\n        return {\r\n            x: this.bounds.x + this.bounds.width / 2,\r\n            y: this.bounds.y + this.bounds.height\r\n        };\r\n    }\r\n\r\n    get leftPoint(): Point {\r\n        return {\r\n            x: this.bounds.x,\r\n            y: this.bounds.y + this.bounds.height / 2\r\n        };\r\n    }\r\n\r\n    get topRightSideLine(): Line {\r\n        return new PointToPointLine(this.topPoint, this.rightPoint);\r\n    }\r\n\r\n    get topLeftSideLine(): Line {\r\n        return new PointToPointLine(this.topPoint, this.leftPoint);\r\n    }\r\n\r\n    get bottomRightSideLine(): Line {\r\n        return new PointToPointLine(this.bottomPoint, this.rightPoint);\r\n    }\r\n\r\n    get bottomLeftSideLine(): Line {\r\n        return new PointToPointLine(this.bottomPoint, this.leftPoint);\r\n    }\r\n\r\n    /**\r\n     * Return the closest side of this diamond to the specified `refPoint`.\r\n     * @param {Point} refPoint a reference point\r\n     * @returns {Line} a line representing the closest side\r\n     */\r\n    closestSideLine(refPoint: Point): Line {\r\n        const c = Bounds.center(this.bounds);\r\n        if (refPoint.x > c.x) {\r\n            if (refPoint.y > c.y) {\r\n                return this.bottomRightSideLine;\r\n            } else {\r\n                return this.topRightSideLine;\r\n            }\r\n        } else {\r\n            if (refPoint.y > c.y) {\r\n                return this.bottomLeftSideLine;\r\n            } else {\r\n                return this.topLeftSideLine;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * A line represented in its standard form `a*x + b*y = c`.\r\n */\r\nexport interface Line {\r\n    readonly a: number\r\n    readonly b: number\r\n    readonly c: number\r\n}\r\n\r\nexport type CardinalDirection =\r\n    'north' | 'north-east' | 'east' | 'south-east' |\r\n    'south' | 'south-west' | 'west' | 'north-west';\r\n\r\n/**\r\n * A line made up from two points.\r\n */\r\nexport class PointToPointLine implements Line {\r\n\r\n    constructor(public p1: Point, public p2: Point) { }\r\n\r\n    get a(): number {\r\n        return this.p1.y - this.p2.y;\r\n    }\r\n\r\n    get b(): number {\r\n        return this.p2.x - this.p1.x;\r\n    }\r\n\r\n    get c(): number {\r\n        return this.p2.x * this.p1.y - this.p1.x * this.p2.y;\r\n    }\r\n\r\n    /**\r\n     * The counter-clockwise angle of this line relative to the x-axis.\r\n     */\r\n    get angle(): number {\r\n        return Math.atan2(-this.a, this.b);\r\n    }\r\n\r\n    /**\r\n     * The slope of the line.\r\n     * A vertical line returns `undefined`.\r\n     */\r\n    get slope(): number | undefined {\r\n        if (this.b === 0) return undefined;\r\n        return this.a / this.b;\r\n    }\r\n\r\n    /**\r\n     * The slope of the line or `Number.MAX_SAFE_INTEGER` if vertical.\r\n     */\r\n    get slopeOrMax(): number {\r\n        if (this.slope === undefined) {\r\n            return Number.MAX_SAFE_INTEGER;\r\n        }\r\n        return this.slope;\r\n    }\r\n\r\n    /**\r\n     * The direction of this line, such as 'north', 'south', or 'south-west'.\r\n     */\r\n    get direction(): CardinalDirection {\r\n        const hDegrees = toDegrees(this.angle);\r\n        const degrees = hDegrees < 0 ? 360 + hDegrees : hDegrees;\r\n        // degrees are relative to the x-axis\r\n        if (degrees === 90) {\r\n            return 'south';\r\n        } else if (degrees === 0 || degrees === 360) {\r\n            return 'east';\r\n        } else if (degrees === 270) {\r\n            return 'north';\r\n        } else if (degrees === 180) {\r\n            return 'west';\r\n        } else if (degrees > 0 && degrees < 90) {\r\n            return 'south-east';\r\n        } else if (degrees > 90 && degrees < 180) {\r\n            return 'south-west';\r\n        } else if (degrees > 180 && degrees < 270) {\r\n            return 'north-west';\r\n        } else if (degrees > 270 && degrees < 360) {\r\n            return 'north-east';\r\n        }\r\n        throw new Error(`Cannot determine direction of line (${this.p1.x},${this.p1.y}) to (${this.p2.x},${this.p2.y})`);\r\n    }\r\n\r\n    /**\r\n     * @param otherLine the other line\r\n     * @returns the intersection point between `this` line and the `otherLine` if exists, or `undefined`.\r\n     */\r\n    intersection(otherLine: PointToPointLine): Point | undefined {\r\n        if (this.hasIndistinctPoints(otherLine)) {\r\n            return undefined;\r\n        }\r\n\r\n        const x1 = this.p1.x;\r\n        const y1 = this.p1.y;\r\n        const x2 = this.p2.x;\r\n        const y2 = this.p2.y;\r\n        const x3 = otherLine.p1.x;\r\n        const y3 = otherLine.p1.y;\r\n        const x4 = otherLine.p2.x;\r\n        const y4 = otherLine.p2.y;\r\n\r\n        const denominator = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\r\n        if (denominator === 0) {\r\n            return undefined;\r\n        }\r\n        const numeratorA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\r\n        const numeratorB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\r\n        if (numeratorA === 0 && numeratorB === 0) {\r\n            return undefined;\r\n        }\r\n\r\n        const determinantA = numeratorA / denominator;\r\n        const determinantB = numeratorB / denominator;\r\n        if (determinantA < 0 || determinantA > 1 || determinantB < 0 || determinantB > 1) {\r\n            return undefined;\r\n        }\r\n\r\n        const x = x1 + (determinantA * (x2 - x1));\r\n        const y = y1 + (determinantA * (y2 - y1));\r\n        return { x, y };\r\n    }\r\n\r\n    /**\r\n     * @param otherLine the other line\r\n     * @returns whether the start and end point of this line is does not have distinct start\r\n     * or end points with the `otherLine`\r\n     */\r\n    hasIndistinctPoints(otherLine: PointToPointLine): boolean {\r\n        return Point.equals(this.p1, otherLine.p1) ||\r\n            Point.equals(this.p1, otherLine.p2) ||\r\n            Point.equals(this.p2, otherLine.p1) ||\r\n            Point.equals(this.p2, otherLine.p2);\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the intersection of two lines `l1` and `l2`\r\n * @param {Line} l1 - A line\r\n * @param {Line} l2 - Another line\r\n * @returns {Point} The intersection point of `l1` and `l2`\r\n */\r\nexport function intersection(l1: Line, l2: Line): Point {\r\n    return {\r\n        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),\r\n        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)\r\n    };\r\n}\r\n\r\n/**\r\n * A minimum and maximum value of a numeric type.\r\n */\r\nexport interface Limits {\r\n    min: number\r\n    max: number\r\n}\r\n\r\n/**\r\n * Limits a value to the specified `limits`.\r\n * @param {number} value - The value to limit\r\n * @param {Limits} limits - The minimum and maximum limits\r\n */\r\nexport function limit(value: number, limits: Limits): number {\r\n    if (value < limits.min) {\r\n        return limits.min;\r\n    }\r\n    if (value > limits.max) {\r\n        return limits.max;\r\n    }\r\n    return value;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2023 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Dimension } from 'sprotty-protocol';\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { limit, Limits } from '../../utils/geometry';\r\n\r\nexport const viewportFeature = Symbol('viewportFeature');\r\n\r\n/**\r\n * Determine whether the given model element has a viewport.\r\n */\r\nexport function isViewport(element: SModelElementImpl): element is SModelRootImpl & Viewport {\r\n    return element instanceof SModelRootImpl\r\n        && element.hasFeature(viewportFeature)\r\n        && 'zoom' in element\r\n        && 'scroll' in element;\r\n}\r\n\r\n/**\r\n * Apply limits to the given viewport.\r\n */\r\nexport function limitViewport(viewport: Viewport,\r\n    canvasBounds: Bounds | undefined,\r\n    horizontalScrollLimits: Limits | undefined,\r\n    verticalScrollLimits: Limits | undefined,\r\n    zoomLimits: Limits | undefined): Viewport {\r\n    if (canvasBounds && !Dimension.isValid(canvasBounds)) {\r\n        canvasBounds = undefined;\r\n    }\r\n    // Limit the zoom factor\r\n    let zoom = zoomLimits ? limit(viewport.zoom, zoomLimits) : viewport.zoom;\r\n    if (canvasBounds && horizontalScrollLimits) {\r\n        const minZoom = canvasBounds.width / (horizontalScrollLimits.max - horizontalScrollLimits.min);\r\n        if (zoom < minZoom) {\r\n            zoom = minZoom;\r\n        }\r\n    }\r\n    if (canvasBounds && verticalScrollLimits) {\r\n        const minZoom = canvasBounds.height / (verticalScrollLimits.max - verticalScrollLimits.min);\r\n        if (zoom < minZoom) {\r\n            zoom = minZoom;\r\n        }\r\n    }\r\n    // Limit the horizontal scroll position\r\n    let scrollX: number;\r\n    if (horizontalScrollLimits) {\r\n        const min = horizontalScrollLimits.min;\r\n        const max = canvasBounds ? horizontalScrollLimits.max - canvasBounds.width / zoom : horizontalScrollLimits.max;\r\n        scrollX = limit(viewport.scroll.x, { min, max });\r\n    } else {\r\n        scrollX = viewport.scroll.x;\r\n    }\r\n    // Limit the vertical scroll position\r\n    let scrollY: number;\r\n    if (verticalScrollLimits) {\r\n        const min = verticalScrollLimits.min;\r\n        const max = canvasBounds ? verticalScrollLimits.max - canvasBounds.height / zoom : verticalScrollLimits.max;\r\n        scrollY = limit(viewport.scroll.y, { min, max });\r\n    } else {\r\n        scrollY = viewport.scroll.y;\r\n    }\r\n    return { scroll: { x: scrollX, y: scrollY }, zoom };\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const exportFeature = Symbol('exportFeature');\r\n\r\nexport function isExportable(element: SModelElementImpl): boolean {\r\n     return element.hasFeature(exportFeature);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelRootImpl, ModelIndexImpl } from '../../base/model/smodel';\r\nimport { viewportFeature } from \"./model\";\r\nimport { exportFeature } from \"../export/model\";\r\nimport { BoundsAware } from \"../bounds/model\";\r\n\r\n/**\r\n * Model root element that defines a viewport, so it transforms the coordinate system with\r\n * a `scroll` translation and a `zoom` scaling.\r\n */\r\nexport class ViewportRootElementImpl extends SModelRootImpl implements Viewport, BoundsAware {\r\n    static readonly DEFAULT_FEATURES = [viewportFeature, exportFeature];\r\n\r\n    scroll: Point = { x: 0, y: 0 };\r\n    zoom: number = 1;\r\n    position: Point = Point.ORIGIN;\r\n    size: Dimension = Dimension.EMPTY;\r\n\r\n    constructor(index?: ModelIndexImpl) {\r\n        super(index);\r\n    }\r\n\r\n    get bounds(): Bounds {\r\n        return {\r\n            x: this.position.x,\r\n            y: this.position.y,\r\n            width: this.size.width,\r\n            height: this.size.height\r\n        };\r\n    }\r\n\r\n    set bounds(newBounds: Bounds) {\r\n        this.position = {\r\n            x: newBounds.x,\r\n            y: newBounds.y\r\n        };\r\n        this.size = {\r\n            width: newBounds.width,\r\n            height: newBounds.height\r\n        };\r\n    }\r\n\r\n    override localToParent(point: Point | Bounds): Bounds {\r\n        const result = {\r\n            x: (point.x - this.scroll.x) * this.zoom,\r\n            y: (point.y - this.scroll.y) * this.zoom,\r\n            width: -1,\r\n            height: -1\r\n        };\r\n        if (isBounds(point)) {\r\n            result.width = point.width * this.zoom;\r\n            result.height = point.height * this.zoom;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override parentToLocal(point: Point | Bounds): Bounds {\r\n        const result = {\r\n            x: (point.x / this.zoom) + this.scroll.x,\r\n            y: (point.y / this.zoom) + this.scroll.y,\r\n            width: -1,\r\n            height: -1\r\n        };\r\n        if (isBounds(point) && Dimension.isValid(point)) {\r\n            result.width = point.width / this.zoom;\r\n            result.height = point.height / this.zoom;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { ModelIndexImpl, SChildElementImpl, SModelElementImpl } from '../base/model/smodel';\r\nimport {\r\n    Alignable, alignFeature, BoundsAware, boundsFeature, layoutableChildFeature, layoutContainerFeature,\r\n    ModelLayoutOptions, SShapeElementImpl\r\n} from '../features/bounds/model';\r\nimport { edgeLayoutFeature, EdgePlacement } from '../features/edge-layout/model';\r\nimport { deletableFeature } from '../features/edit/delete';\r\nimport { editFeature } from '../features/edit/model';\r\nimport { Fadeable, fadeFeature } from '../features/fade/model';\r\nimport { Hoverable, hoverFeedbackFeature, popupFeature } from '../features/hover/model';\r\nimport { moveFeature } from '../features/move/model';\r\nimport { connectableFeature, SConnectableElementImpl, SRoutableElementImpl } from '../features/routing/model';\r\nimport { Selectable, selectFeature } from '../features/select/model';\r\nimport { ViewportRootElementImpl } from '../features/viewport/viewport-root';\r\nimport { FluentIterable, FluentIterableImpl } from '../utils/iterable';\r\n\r\n/**\r\n * Root element for graph-like models.\r\n */\r\nexport class SGraphImpl extends ViewportRootElementImpl {\r\n    layoutOptions?: ModelLayoutOptions;\r\n\r\n    constructor(index = new SGraphIndex()) {\r\n        super(index);\r\n    }\r\n}\r\n\r\n/**\r\n * Model element class for nodes, which are the main entities in a graph. A node can be connected to\r\n * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of\r\n * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.\r\n */\r\nexport class SNodeImpl extends SConnectableElementImpl implements Selectable, Fadeable, Hoverable {\r\n    static readonly DEFAULT_FEATURES = [connectableFeature, deletableFeature, selectFeature, boundsFeature,\r\n        moveFeature, layoutContainerFeature, fadeFeature, hoverFeedbackFeature, popupFeature];\r\n\r\n    override children: SChildElementImpl[];\r\n    layout?: string;\r\n    selected: boolean = false;\r\n    hoverFeedback: boolean = false;\r\n    opacity: number = 1;\r\n\r\n    override canConnect(routable: SRoutableElementImpl, role: string) {\r\n        return this.children.find(c => c instanceof SPortImpl) === undefined;\r\n    }\r\n\r\n    override get incomingEdges(): FluentIterable<SEdgeImpl> {\r\n        const index = this.index;\r\n        if (index instanceof SGraphIndex) {\r\n            return index.getIncomingEdges(this);\r\n        }\r\n        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\r\n        return allEdges.filter(e => e.targetId === this.id);\r\n    }\r\n\r\n    override get outgoingEdges(): FluentIterable<SEdgeImpl> {\r\n        const index = this.index;\r\n        if (index instanceof SGraphIndex) {\r\n            return index.getOutgoingEdges(this);\r\n        }\r\n        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\r\n        return allEdges.filter(e => e.sourceId === this.id);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A port is a connection point for edges. It should always be contained in an SNode.\r\n */\r\nexport class SPortImpl extends SConnectableElementImpl implements Selectable, Fadeable, Hoverable {\r\n    static readonly DEFAULT_FEATURES = [connectableFeature, selectFeature, boundsFeature, fadeFeature,\r\n        hoverFeedbackFeature];\r\n\r\n    selected: boolean = false;\r\n    hoverFeedback: boolean = false;\r\n    opacity: number = 1;\r\n\r\n    override get incomingEdges(): FluentIterable<SEdgeImpl> {\r\n        const index = this.index;\r\n        if (index instanceof SGraphIndex) {\r\n            return index.getIncomingEdges(this);\r\n        }\r\n        return super.incomingEdges.filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\r\n    }\r\n\r\n    override get outgoingEdges(): FluentIterable<SEdgeImpl> {\r\n        const index = this.index;\r\n        if (index instanceof SGraphIndex) {\r\n            return index.getOutgoingEdges(this);\r\n        }\r\n        return super.outgoingEdges.filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,\r\n * each of which can be either a node or a port. The source and target elements are referenced via their\r\n * ids and can be resolved with the index stored in the root element.\r\n */\r\nexport class SEdgeImpl extends SRoutableElementImpl implements Fadeable, Selectable, Hoverable, BoundsAware {\r\n    static readonly DEFAULT_FEATURES = [editFeature, deletableFeature, selectFeature, fadeFeature,\r\n        hoverFeedbackFeature];\r\n\r\n    selected: boolean = false;\r\n    hoverFeedback: boolean = false;\r\n    opacity: number = 1;\r\n\r\n}\r\n\r\n/**\r\n * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.\r\n */\r\nexport class SLabelImpl extends SShapeElementImpl implements Selectable, Alignable, Fadeable {\r\n    static readonly DEFAULT_FEATURES = [boundsFeature, alignFeature, layoutableChildFeature,\r\n        edgeLayoutFeature, fadeFeature];\r\n\r\n    text: string;\r\n    selected: boolean = false;\r\n    alignment: Point = Point.ORIGIN;\r\n    opacity = 1;\r\n    edgePlacement?: EdgePlacement;\r\n\r\n}\r\n\r\n/**\r\n * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`\r\n * or `hbox` layout is used to arrange these children.\r\n */\r\nexport class SCompartmentImpl extends SShapeElementImpl implements Fadeable {\r\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutContainerFeature, layoutableChildFeature,\r\n        fadeFeature];\r\n\r\n    override children: SChildElementImpl[];\r\n    layout?: string;\r\n    override layoutOptions?: {[key: string]: string | number | boolean};\r\n    opacity = 1;\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * A specialized model index that tracks outgoing and incoming edges.\r\n */\r\nexport class SGraphIndex extends ModelIndexImpl {\r\n\r\n    private outgoing: Map<string, SEdgeImpl[]> = new Map;\r\n    private incoming: Map<string, SEdgeImpl[]> = new Map;\r\n\r\n    override add(element: SModelElementImpl): void {\r\n        super.add(element);\r\n        if (element instanceof SEdgeImpl) {\r\n            // Register the edge in the outgoing map\r\n            if (element.sourceId) {\r\n                const sourceArr = this.outgoing.get(element.sourceId);\r\n                if (sourceArr === undefined)\r\n                    this.outgoing.set(element.sourceId, [element]);\r\n                else\r\n                    sourceArr.push(element);\r\n            }\r\n            // Register the edge in the incoming map\r\n            if (element.targetId) {\r\n                const targetArr = this.incoming.get(element.targetId);\r\n                if (targetArr === undefined)\r\n                    this.incoming.set(element.targetId, [element]);\r\n                else\r\n                    targetArr.push(element);\r\n            }\r\n        }\r\n    }\r\n\r\n    override remove(element: SModelElementImpl): void {\r\n        super.remove(element);\r\n        if (element instanceof SEdgeImpl) {\r\n            // Remove the edge from the outgoing map\r\n            const sourceArr = this.outgoing.get(element.sourceId);\r\n            if (sourceArr !== undefined) {\r\n                const index = sourceArr.indexOf(element);\r\n                if (index >= 0) {\r\n                    if (sourceArr.length === 1)\r\n                        this.outgoing.delete(element.sourceId);\r\n                    else\r\n                        sourceArr.splice(index, 1);\r\n                }\r\n            }\r\n            // Remove the edge from the incoming map\r\n            const targetArr = this.incoming.get(element.targetId);\r\n            if (targetArr !== undefined) {\r\n                const index = targetArr.indexOf(element);\r\n                if (index >= 0) {\r\n                    if (targetArr.length === 1)\r\n                        this.incoming.delete(element.targetId);\r\n                    else\r\n                        targetArr.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override getAttachedElements(element: SModelElementImpl): FluentIterable<SModelElementImpl> {\r\n        return new FluentIterableImpl(\r\n            () => ({\r\n                outgoing: this.outgoing.get(element.id),\r\n                incoming: this.incoming.get(element.id),\r\n                nextOutgoingIndex: 0,\r\n                nextIncomingIndex: 0\r\n            }),\r\n            (state) => {\r\n                let index = state.nextOutgoingIndex;\r\n                if (state.outgoing !== undefined && index < state.outgoing.length) {\r\n                    state.nextOutgoingIndex = index + 1;\r\n                    return { done: false, value: state.outgoing[index] };\r\n                }\r\n                index = state.nextIncomingIndex;\r\n                if (state.incoming !== undefined) {\r\n                    // Filter out self-loops: edges that are both outgoing and incoming\r\n                    while (index < state.incoming.length) {\r\n                        const edge = state.incoming[index];\r\n                        if (edge.sourceId !== edge.targetId) {\r\n                            state.nextIncomingIndex = index + 1;\r\n                            return { done: false, value: edge };\r\n                        }\r\n                        index++;\r\n                    }\r\n                }\r\n                return { done: true, value: undefined as any };\r\n            }\r\n        );\r\n    }\r\n\r\n    getIncomingEdges(element: SConnectableElementImpl): FluentIterable<SEdgeImpl> {\r\n        return this.incoming.get(element.id) || [];\r\n    }\r\n\r\n    getOutgoingEdges(element: SConnectableElementImpl): FluentIterable<SEdgeImpl> {\r\n        return this.outgoing.get(element.id) || [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject } from \"inversify\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { InstanceRegistry } from \"../../utils/registry\";\r\nimport { SConnectableElementImpl } from \"./model\";\r\n\r\nexport const DIAMOND_ANCHOR_KIND = 'diamond';\r\nexport const ELLIPTIC_ANCHOR_KIND = 'elliptic';\r\nexport const RECTANGULAR_ANCHOR_KIND = 'rectangular';\r\n\r\nexport interface IAnchorComputer {\r\n    readonly kind: string;\r\n\r\n    /**\r\n     * Compute an anchor position for routing an edge towards this element.\r\n     *\r\n     * The default implementation returns the element's center point. If edges should be connected\r\n     * differently, e.g. to some point on the boundary of the element's view, the according computation\r\n     * should be implemented in a subclass by overriding this method.\r\n     *\r\n     * @param connectable The node or port an edge should be connected to.\r\n     * @param referencePoint The point from which the edge is routed towards this elemet, in the same\r\n     *                       coordintae system as the connectable.\r\n     * @param offset An optional offset value to be considered in the anchor computation;\r\n     *               positive values should shift the anchor away from this element, negative values\r\n     *               should shift the anchor more to the inside. Use this to adapt ot arrow heads.\r\n     */\r\n    getAnchor(connectable: SConnectableElementImpl, referencePoint: Point, offset?: number): Point;\r\n}\r\n\r\n\r\n@injectable()\r\nexport class AnchorComputerRegistry extends InstanceRegistry<IAnchorComputer> {\r\n\r\n    constructor(@multiInject(TYPES.IAnchorComputer) anchors: IAnchorComputer[]) {\r\n        super();\r\n        anchors.forEach(anchor => this.register(anchor.kind, anchor));\r\n    }\r\n\r\n    protected get defaultAnchorKind() {\r\n        return RECTANGULAR_ANCHOR_KIND;\r\n    }\r\n\r\n    override get(routerKind: string, anchorKind?: string): IAnchorComputer {\r\n        return super.get(`${routerKind}:${anchorKind || this.defaultAnchorKind}`);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SModelElementImpl, SParentElementImpl } from \"../../base/model/smodel\";\r\nimport { translateBounds, translatePoint } from \"../../base/model/smodel-utils\";\r\nimport { ResolvedHandleMove } from \"../move/move\";\r\nimport { RoutingHandleKind, SDanglingAnchorImpl, SRoutingHandleImpl, edgeInProgressID, edgeInProgressTargetHandleID } from \"./model\";\r\nimport { AnchorComputerRegistry, IAnchorComputer } from \"./anchor\";\r\nimport { SConnectableElementImpl, SRoutableElementImpl } from \"./model\";\r\nimport { EdgeSnapshot, IEdgeRouter, RoutedPoint } from \"./routing\";\r\n\r\nexport interface LinearRouteOptions {\r\n    minimalPointDistance: number\r\n    standardDistance: number\r\n    selfEdgeOffset: number\r\n}\r\n\r\nexport enum Side { RIGHT, LEFT, TOP, BOTTOM }\r\n\r\nexport class DefaultAnchors {\r\n    readonly bounds: Bounds;\r\n    readonly left: RoutedPoint;\r\n    readonly right: RoutedPoint;\r\n    readonly top: RoutedPoint;\r\n    readonly bottom: RoutedPoint;\r\n\r\n    constructor(readonly element: SConnectableElementImpl, edgeParent: SParentElementImpl, readonly kind: 'source' | 'target') {\r\n        const bounds = element.bounds;\r\n        this.bounds = translateBounds(bounds, element.parent, edgeParent);\r\n        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind };\r\n        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind };\r\n        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind };\r\n        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind };\r\n    }\r\n\r\n    get(side: Side): RoutedPoint {\r\n        return (this as any)[Side[side].toLowerCase()];\r\n    }\r\n\r\n    getNearestSide(point: Point): Side {\r\n        const leftDistance = Point.euclideanDistance(point, this.left);\r\n        const rightDistance = Point.euclideanDistance(point, this.right);\r\n        const topDistance = Point.euclideanDistance(point, this.top);\r\n        const bottomDistance = Point.euclideanDistance(point, this.bottom);\r\n        let currentNearestSide = Side.LEFT;\r\n        let currentMinDist = leftDistance;\r\n        if (rightDistance < currentMinDist) {\r\n            currentMinDist = rightDistance;\r\n            currentNearestSide = Side.RIGHT;\r\n        }\r\n        if (topDistance < currentMinDist) {\r\n            currentMinDist = topDistance;\r\n            currentNearestSide = Side.TOP;\r\n        }\r\n        if (bottomDistance < currentMinDist) {\r\n            currentMinDist = bottomDistance;\r\n            currentNearestSide = Side.BOTTOM;\r\n        }\r\n        return currentNearestSide;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport abstract class AbstractEdgeRouter implements IEdgeRouter {\r\n\r\n    @inject(AnchorComputerRegistry) anchorRegistry: AnchorComputerRegistry;\r\n\r\n    abstract get kind(): string;\r\n\r\n    abstract route(edge: SRoutableElementImpl): RoutedPoint[];\r\n\r\n    abstract createRoutingHandles(edge: SRoutableElementImpl): void;\r\n\r\n    protected abstract getOptions(edge: SRoutableElementImpl): LinearRouteOptions;\r\n\r\n    pointAt(edge: SRoutableElementImpl, t: number): Point | undefined {\r\n        const segments = this.calculateSegment(edge, t);\r\n        if (!segments)\r\n            return undefined;\r\n        const { segmentStart, segmentEnd, lambda } = segments;\r\n        return Point.linear(segmentStart, segmentEnd, lambda);\r\n    }\r\n\r\n    derivativeAt(edge: SRoutableElementImpl, t: number): Point | undefined {\r\n        const segments = this.calculateSegment(edge, t);\r\n        if (!segments)\r\n            return undefined;\r\n        const { segmentStart, segmentEnd } = segments;\r\n        return {\r\n            x: segmentEnd.x - segmentStart.x,\r\n            y: segmentEnd.y - segmentStart.y\r\n        };\r\n    }\r\n\r\n    protected calculateSegment(edge: SRoutableElementImpl, t: number): { segmentStart: Point, segmentEnd: Point, lambda: number} | undefined {\r\n        if (t < 0 || t > 1)\r\n            return undefined;\r\n        const routedPoints = this.route(edge);\r\n        if (routedPoints.length < 2)\r\n            return undefined;\r\n        const segmentLengths: number[] = [];\r\n        let totalLength = 0;\r\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\r\n            segmentLengths[i] = Point.euclideanDistance(routedPoints[i], routedPoints[i + 1]);\r\n            totalLength += segmentLengths[i];\r\n        }\r\n        let currentLenght = 0;\r\n        const tAsLenght = t * totalLength;\r\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\r\n            const newLength = currentLenght + segmentLengths[i];\r\n            // avoid division by (almost) zero\r\n            if (segmentLengths[i] > 1E-8) {\r\n                if (newLength >= tAsLenght) {\r\n                    const lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];\r\n                    return {\r\n                        segmentStart: routedPoints[i],\r\n                        segmentEnd: routedPoints[i + 1],\r\n                        lambda\r\n                    };\r\n                }\r\n            }\r\n            currentLenght = newLength;\r\n        }\r\n        return {\r\n            segmentEnd: routedPoints.pop()!,\r\n            segmentStart: routedPoints.pop()!,\r\n            lambda: 1\r\n        };\r\n    }\r\n\r\n    protected addHandle(edge: SRoutableElementImpl, kind: RoutingHandleKind, type: string, routingPointIndex: number): SRoutingHandleImpl {\r\n        const handle = new SRoutingHandleImpl();\r\n        handle.kind = kind;\r\n        handle.pointIndex = routingPointIndex;\r\n        handle.type = type;\r\n        if (kind === 'target' && edge.id === edgeInProgressID)\r\n            handle.id = edgeInProgressTargetHandleID;\r\n        edge.add(handle);\r\n        return handle;\r\n    }\r\n\r\n    getHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined {\r\n        switch (handle.kind) {\r\n            case 'source':\r\n                if (edge.source instanceof SDanglingAnchorImpl)\r\n                    return edge.source.position;\r\n                else\r\n                    return route[0];\r\n            case 'target':\r\n                if (edge.target instanceof SDanglingAnchorImpl)\r\n                    return edge.target.position;\r\n                 else {\r\n                    return route[route.length - 1];\r\n                }\r\n            default:\r\n                const position = this.getInnerHandlePosition(edge, route, handle);\r\n                if (position !== undefined)\r\n                    return position;\r\n                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)\r\n                    return edge.routingPoints[handle.pointIndex];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected abstract getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined;\r\n\r\n    protected findRouteSegment(edge: SRoutableElementImpl, route: RoutedPoint[], handleIndex: number): { start?: Point, end?: Point } {\r\n        const getIndex = (rp: RoutedPoint) => {\r\n            if (rp.pointIndex !== undefined)\r\n                return rp.pointIndex;\r\n            else if (rp.kind === 'target')\r\n                return edge.routingPoints.length;\r\n            else\r\n                return -2;\r\n        };\r\n        let start, end: RoutedPoint | undefined;\r\n        for (const rp of route) {\r\n            const i = getIndex(rp);\r\n            if (i <= handleIndex && (start === undefined || i > getIndex(start)))\r\n                start = rp;\r\n            if (i > handleIndex && (end === undefined || i < getIndex(end)))\r\n                end = rp;\r\n        }\r\n        return { start, end };\r\n    }\r\n\r\n    getTranslatedAnchor(connectable: SConnectableElementImpl, refPoint: Point, refContainer: SParentElementImpl, edge: SRoutableElementImpl, anchorCorrection: number = 0): Point {\r\n        const translatedRefPoint = translatePoint(refPoint, refContainer, connectable.parent);\r\n        const anchorComputer = this.getAnchorComputer(connectable);\r\n        const strokeCorrection = 0.5 * connectable.strokeWidth;\r\n        const anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);\r\n        return translatePoint(anchor, connectable.parent, edge.parent);\r\n    }\r\n\r\n    protected getAnchorComputer(connectable: SConnectableElementImpl): IAnchorComputer {\r\n       return this.anchorRegistry.get(this.kind, connectable.anchorKind);\r\n    }\r\n\r\n    applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\r\n        const remainingMoves = moves.slice();\r\n        moves.forEach(move => {\r\n            const handle = move.handle;\r\n            if (handle.kind === 'source' && !(edge.source instanceof SDanglingAnchorImpl)) {\r\n                // detach source\r\n                const anchor = new SDanglingAnchorImpl();\r\n                anchor.id = edge.id + '_dangling-source';\r\n                anchor.original = edge.source;\r\n                anchor.position = move.toPosition;\r\n                handle.root.add(anchor);\r\n                handle.danglingAnchor = anchor;\r\n                edge.sourceId = anchor.id;\r\n            } else if (handle.kind === 'target' && !(edge.target instanceof SDanglingAnchorImpl)) {\r\n                // detach target\r\n                const anchor = new SDanglingAnchorImpl();\r\n                anchor.id = edge.id + '_dangling-target';\r\n                anchor.original = edge.target;\r\n                anchor.position = move.toPosition;\r\n                handle.root.add(anchor);\r\n                handle.danglingAnchor = anchor;\r\n                edge.targetId = anchor.id;\r\n            }\r\n            if (handle.danglingAnchor) {\r\n                handle.danglingAnchor.position = move.toPosition;\r\n                remainingMoves.splice(remainingMoves.indexOf(move), 1);\r\n            }\r\n        });\r\n        if (remainingMoves.length > 0)\r\n            this.applyInnerHandleMoves(edge, remainingMoves);\r\n        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\r\n    }\r\n\r\n    protected abstract applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void;\r\n\r\n    cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\r\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\r\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\r\n        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);\r\n    }\r\n\r\n    protected resetRoutingPointsOnReconnect(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean,\r\n        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors): boolean {\r\n        if (routingPoints.length === 0 || edge.source instanceof SDanglingAnchorImpl || edge.target instanceof SDanglingAnchorImpl) {\r\n            const options = this.getOptions(edge);\r\n            const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\r\n            routingPoints.splice(0, routingPoints.length, ...corners);\r\n            if (updateHandles) {\r\n                let maxPointIndex = -2;\r\n                edge.children.forEach(child => {\r\n                    if (child instanceof SRoutingHandleImpl) {\r\n                        if (child.kind === 'target')\r\n                            child.pointIndex = routingPoints.length;\r\n                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)\r\n                            edge.remove(child);\r\n                        else\r\n                            maxPointIndex = Math.max(child.pointIndex, maxPointIndex);\r\n                    }\r\n                });\r\n                for (let i = maxPointIndex; i < routingPoints.length - 1; ++i)\r\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    applyReconnect(edge: SRoutableElementImpl, newSourceId?: string, newTargetId?: string) {\r\n        let hasChanged = false;\r\n        if (newSourceId) {\r\n            const newSource = edge.root.index.getById(newSourceId);\r\n            if (newSource instanceof SConnectableElementImpl) {\r\n                edge.sourceId = newSource.id;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (newTargetId) {\r\n            const newTarget = edge.root.index.getById(newTargetId);\r\n            if (newTarget instanceof SConnectableElementImpl) {\r\n                edge.targetId = newTarget.id;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (hasChanged) {\r\n            // reset attached elements in index\r\n            edge.index.remove(edge);\r\n            edge.index.add(edge);\r\n            if (this.getSelfEdgeIndex(edge) > -1) {\r\n                edge.routingPoints = [];\r\n                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot {\r\n        return {\r\n            routingPoints: edge.routingPoints.slice(),\r\n            routingHandles: edge.children\r\n                .filter(child => child instanceof SRoutingHandleImpl)\r\n                .map(child => child as SRoutingHandleImpl),\r\n            routedPoints: this.route(edge),\r\n            router: this,\r\n            source: edge.source,\r\n            target: edge.target\r\n        };\r\n    }\r\n\r\n    applySnapshot(edge: SRoutableElementImpl, snapshot: EdgeSnapshot): void {\r\n        edge.routingPoints = snapshot.routingPoints;\r\n        edge.removeAll(child => child instanceof SRoutingHandleImpl);\r\n        edge.routerKind = snapshot.router.kind;\r\n        snapshot.routingHandles.forEach(handle => edge.add(handle));\r\n        if (snapshot.source)\r\n            edge.sourceId = snapshot.source.id;\r\n        if (snapshot.target)\r\n            edge.targetId = snapshot.target.id;\r\n        // update index\r\n        edge.root.index.remove(edge as SModelElementImpl);\r\n        edge.root.index.add(edge as SModelElementImpl);\r\n    }\r\n\r\n    protected calculateDefaultCorners(edge: SRoutableElementImpl, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: LinearRouteOptions): Point[] {\r\n        const selfEdgeIndex = this.getSelfEdgeIndex(edge);\r\n        if (selfEdgeIndex >= 0) {\r\n            const standardDist = options.standardDistance;\r\n            const delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);\r\n            switch (selfEdgeIndex % 4) {\r\n                case 0:\r\n                    return [\r\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },\r\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\r\n                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\r\n                    ];\r\n                case 1:\r\n                    return [\r\n                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\r\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\r\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta},\r\n                    ];\r\n                case 2:\r\n                    return [\r\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },\r\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\r\n                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\r\n                    ];\r\n                case 3:\r\n                    return [\r\n                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\r\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\r\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },\r\n                    ];\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    protected getSelfEdgeIndex(edge: SRoutableElementImpl): number {\r\n        if (!edge.source || edge.source !== edge.target)\r\n            return -1;\r\n        return edge.source.outgoingEdges\r\n            .filter(otherEdge => otherEdge.target === edge.source)\r\n            .indexOf(edge);\r\n    }\r\n\r\n    protected commitRoute(edge: SRoutableElementImpl, routedPoints: RoutedPoint[]) {\r\n        const newRoutingPoints: Point[] = [];\r\n        for (let i = 1; i < routedPoints.length - 1; ++i)\r\n            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });\r\n        edge.routingPoints = newRoutingPoints;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { angleBetweenPoints, Bounds, centerOfLine, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SRoutingHandleImpl } from \"./model\";\r\nimport { ResolvedHandleMove } from \"../move/move\";\r\nimport { AnchorComputerRegistry } from \"./anchor\";\r\nimport { AbstractEdgeRouter, LinearRouteOptions } from \"./abstract-edge-router\";\r\nimport { SRoutableElementImpl } from \"./model\";\r\nimport { RoutedPoint } from \"./routing\";\r\n\r\nexport interface PolylineRouteOptions extends LinearRouteOptions {\r\n    /** The angle in radians below which a routing handle is removed. */\r\n    removeAngleThreshold: number;\r\n}\r\n\r\n@injectable()\r\nexport class PolylineEdgeRouter extends AbstractEdgeRouter {\r\n\r\n    @inject(AnchorComputerRegistry) override anchorRegistry: AnchorComputerRegistry;\r\n\r\n    static readonly KIND = 'polyline';\r\n\r\n    get kind() {\r\n        return PolylineEdgeRouter.KIND;\r\n    }\r\n\r\n    protected getOptions(edge: SRoutableElementImpl): PolylineRouteOptions {\r\n        return {\r\n            minimalPointDistance: 2,\r\n            removeAngleThreshold: 0.1,\r\n            standardDistance: 20,\r\n            selfEdgeOffset: 0.25\r\n        };\r\n    }\r\n\r\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\r\n        const source = edge.source;\r\n        const target = edge.target;\r\n        if (source === undefined || target === undefined) {\r\n            return [];\r\n        }\r\n\r\n        let sourceAnchor: Point;\r\n        let targetAnchor: Point;\r\n        const options = this.getOptions(edge);\r\n        const routingPoints = edge.routingPoints.length > 0\r\n            ? edge.routingPoints\r\n            : [];\r\n        this.cleanupRoutingPoints(edge, routingPoints, false, false);\r\n        const rpCount = routingPoints !== undefined ? routingPoints.length : 0;\r\n        if (rpCount === 0) {\r\n            // Use the target center as start anchor reference\r\n            const startRef = Bounds.center(target.bounds);\r\n            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);\r\n            // Use the source center as end anchor reference\r\n            const endRef = Bounds.center(source.bounds);\r\n            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);\r\n        } else {\r\n            // Use the first routing point as start anchor reference\r\n            const p0 = routingPoints[0];\r\n            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);\r\n            // Use the last routing point as end anchor reference\r\n            const pn = routingPoints[rpCount - 1];\r\n            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);\r\n        }\r\n\r\n        const result: RoutedPoint[] = [];\r\n        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });\r\n        for (let i = 0; i < rpCount; i++) {\r\n            const p = routingPoints[i];\r\n            if (i > 0 && i < rpCount - 1\r\n                || i === 0 && Point.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)\r\n                || i === rpCount - 1 && Point.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {\r\n                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });\r\n            }\r\n        }\r\n        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });\r\n            return this.filterEditModeHandles(result, edge, options);\r\n    }\r\n\r\n    /**\r\n     * Remove routed points that are in edit mode and for which the angle between the preceding and\r\n     * following points falls below a threshold.\r\n     */\r\n    protected filterEditModeHandles(route: RoutedPoint[], edge: SRoutableElementImpl, options: PolylineRouteOptions): RoutedPoint[] {\r\n        if (edge.children.length === 0)\r\n            return route;\r\n\r\n        let i = 0;\r\n        while (i < route.length) {\r\n            const curr = route[i];\r\n            if (curr.pointIndex !== undefined) {\r\n                const handle: SRoutingHandleImpl | undefined = edge.children.find(child =>\r\n                    child instanceof SRoutingHandleImpl && child.kind === 'junction' && child.pointIndex === curr.pointIndex) as any;\r\n                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {\r\n                    const prev = route[i - 1], next = route[i + 1];\r\n                    const prevDiff: Point = { x: prev.x - curr.x, y: prev.y - curr.y };\r\n                    const nextDiff: Point = { x: next.x - curr.x, y: next.y - curr.y };\r\n                    const angle = angleBetweenPoints(prevDiff, nextDiff);\r\n                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {\r\n                        route.splice(i, 1);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        return route;\r\n    }\r\n\r\n    createRoutingHandles(edge: SRoutableElementImpl): void {\r\n        const rpCount = edge.routingPoints.length;\r\n        this.addHandle(edge, 'source', 'routing-point', -2);\r\n        this.addHandle(edge, 'line', 'volatile-routing-point', -1);\r\n        for (let i = 0; i < rpCount; i++) {\r\n            this.addHandle(edge, 'junction', 'routing-point', i);\r\n            this.addHandle(edge, 'line', 'volatile-routing-point', i);\r\n        }\r\n        this.addHandle(edge, 'target', 'routing-point', rpCount);\r\n    }\r\n\r\n    getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\r\n        if (handle.kind === 'line') {\r\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\r\n            if (start !== undefined && end !== undefined)\r\n                return centerOfLine(start, end);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]) {\r\n        moves.forEach(move => {\r\n            const handle = move.handle;\r\n            const points = edge.routingPoints;\r\n            let index = handle.pointIndex;\r\n            if (handle.kind === 'line') {\r\n                // Upgrade to a proper routing point\r\n                handle.kind = 'junction';\r\n                handle.type = 'routing-point';\r\n                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);\r\n                edge.children.forEach(child => {\r\n                    if (child instanceof SRoutingHandleImpl && (child === handle || child.pointIndex > index))\r\n                        child.pointIndex++;\r\n                });\r\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\r\n                index++;\r\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\r\n            }\r\n            if (index >= 0 && index < points.length) {\r\n                points[index] = move.toPosition;\r\n            }\r\n        });\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, multiInject, optional } from \"inversify\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SParentElementImpl } from \"../../base/model/smodel\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { findArgValue, IViewArgs } from \"../../base/views/view\";\r\nimport { InstanceRegistry } from \"../../utils/registry\";\r\nimport { ResolvedHandleMove } from \"../move/move\";\r\nimport { SRoutingHandleImpl } from \"../routing/model\";\r\nimport { SConnectableElementImpl, SRoutableElementImpl } from \"./model\";\r\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\r\n\r\n/**\r\n * A point describing the shape of an edge.\r\n *\r\n * The <code>RoutedPoints</code> of an edge are derived from the <code>routingPoints</code>\r\n * which plain <code>Points</code> stored in the SModel by the <code>IEdgeRouter</code>.\r\n * As opposed to the originals, they also contain the source and target anchor points.\r\n * The router may also add or remove points in order to satisfy the constraints\r\n * the constraints of the routing algorithm or in order to to filter out points which are\r\n * obsolete, e.g. to close to each other.\r\n */\r\nexport interface RoutedPoint extends Point {\r\n    kind: 'source' | 'target' | 'linear' | 'bezier-control-before' | 'bezier-junction' | 'bezier-control-after'\r\n    pointIndex?: number\r\n}\r\n\r\n/**\r\n * Stores the state of an edge at a specific time.\r\n */\r\nexport interface EdgeSnapshot {\r\n    routingHandles: SRoutingHandleImpl[]\r\n    routingPoints: Point[]\r\n    routedPoints: RoutedPoint[]\r\n    router: IEdgeRouter\r\n    source?: SConnectableElementImpl\r\n    target?: SConnectableElementImpl\r\n}\r\n\r\nexport interface EdgeMemento {\r\n    edge: SRoutableElementImpl\r\n    before: EdgeSnapshot\r\n    after: EdgeSnapshot\r\n}\r\n\r\n/**\r\n * Encapsulates the logic of how the actual shape of an edge is derived from its routing points,\r\n * and how the user can modify it.\r\n */\r\nexport interface IEdgeRouter {\r\n\r\n    readonly kind: string;\r\n\r\n    /**\r\n     * Calculates the route of the given edge.\r\n     */\r\n    route(edge: SRoutableElementImpl): RoutedPoint[]\r\n\r\n    /**\r\n     * Calculates a point on the edge\r\n     *\r\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\r\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\r\n     */\r\n    pointAt(edge: SRoutableElementImpl, t: number): Point | undefined\r\n\r\n    /**\r\n     * Calculates the derivative at a point on the edge.\r\n     *\r\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\r\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\r\n     */\r\n    derivativeAt(edge: SRoutableElementImpl, t: number): Point | undefined\r\n\r\n    /**\r\n     * Retuns the position of the given handle based on the routing points of the edge.\r\n     */\r\n    getHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined\r\n\r\n    /**\r\n     * Creates the routing handles for the given target.\r\n     */\r\n    createRoutingHandles(edge: SRoutableElementImpl): void\r\n\r\n    /**\r\n     * Updates the routing points and handles of the given edge with regard to the given moves.\r\n     */\r\n    applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void\r\n\r\n    /**\r\n     * Updates the routing points and handles of the given edge with regard to the given moves.\r\n     */\r\n    applyReconnect(edge: SRoutableElementImpl, newSourceId?: string, newTargetId?: string): void\r\n\r\n    /**\r\n     * Remove/add points in order to keep routing constraints consistent, or reset RPs on reconnect.\r\n     */\r\n    cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean): void;\r\n    /**\r\n     * Creates a snapshot of the given edge, storing all the data needed to restore it to\r\n     * its current state.\r\n     */\r\n    takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot;\r\n\r\n    /**\r\n     * Applies a snapshot to the current edge.\r\n     */\r\n    applySnapshot(edge: SRoutableElementImpl, edgeSnapshot: EdgeSnapshot): void;\r\n}\r\n\r\nexport interface IMultipleEdgesRouter extends IEdgeRouter {\r\n    routeAll(\r\n        edges: SRoutableElementImpl[],\r\n        parent: Readonly<SParentElementImpl>\r\n    ): EdgeRouting;\r\n}\r\n\r\nfunction isMultipleEdgesRouter(\r\n    router: IEdgeRouter | IMultipleEdgesRouter\r\n): router is IMultipleEdgesRouter {\r\n    return (router as IMultipleEdgesRouter).routeAll !== undefined;\r\n}\r\n\r\n/** A postprocessor that is applied to all routes, once they are computed. */\r\nexport interface IEdgeRoutePostprocessor {\r\n    apply(routing: EdgeRouting): void;\r\n}\r\n\r\n@injectable()\r\nexport class EdgeRouterRegistry extends InstanceRegistry<IEdgeRouter> {\r\n\r\n    @multiInject(TYPES.IEdgeRoutePostprocessor) @optional()\r\n    protected postProcessors: IEdgeRoutePostprocessor[];\r\n\r\n    constructor(@multiInject(TYPES.IEdgeRouter) edgeRouters: IEdgeRouter[]) {\r\n        super();\r\n        edgeRouters.forEach(router => this.register(router.kind, router));\r\n    }\r\n\r\n    protected get defaultKind() {\r\n        return PolylineEdgeRouter.KIND;\r\n    }\r\n\r\n    override get(kind: string | undefined): IEdgeRouter {\r\n        return super.get(kind || this.defaultKind);\r\n    }\r\n\r\n    /**\r\n     * Computes the routes of all edges contained by the specified `parent`.\r\n     * After all routes are available, it'll apply the registered `EdgeRoutePostProcessors`.\r\n     * @param parent the parent to traverse for edges\r\n     * @returns the routes of all edges that are children of `parent`\r\n     */\r\n    routeAllChildren(parent: Readonly<SParentElementImpl>): EdgeRouting {\r\n        const routing = this.doRouteAllChildren(parent);\r\n        for (const postProcessor of this.postProcessors) {\r\n            postProcessor.apply(routing);\r\n        }\r\n        return routing;\r\n    }\r\n\r\n    /**\r\n     * Recursively traverses the children of `parent`, collects children grouped by router kind,\r\n     * and then routes them either.\r\n     * @param parent the parent to traverse for edges\r\n     * @returns the routes of all edges that are children of `parent`\r\n     */\r\n    protected doRouteAllChildren(parent: Readonly<SParentElementImpl>) {\r\n        const routing = new EdgeRouting();\r\n        const routersEdges = new Map<string, SRoutableElementImpl[]>();\r\n\r\n        const elementsToProcess = [parent];\r\n        while (elementsToProcess.length > 0) {\r\n            const element = elementsToProcess.shift() as SParentElementImpl;\r\n            for (const child of element.children) {\r\n                if (child instanceof SRoutableElementImpl) {\r\n                    const routerKind = child.routerKind || this.defaultKind;\r\n                    if (routersEdges.has(routerKind)) {\r\n                        (routersEdges.get(routerKind) as SRoutableElementImpl[]).push(child);\r\n                    } else {\r\n                        routersEdges.set(routerKind, [child]);\r\n                    }\r\n                }\r\n                if (child instanceof SParentElementImpl) {\r\n                    elementsToProcess.push(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        routersEdges.forEach((edges, routerKind) => {\r\n            const childRouter = this.get(routerKind);\r\n            if (isMultipleEdgesRouter(childRouter)) {\r\n                routing.setAll(childRouter.routeAll(edges, parent));\r\n            } else {\r\n                for (const edge of  edges) {\r\n                    routing.set(edge.id, this.route(edge));\r\n                }\r\n            }\r\n        });\r\n\r\n        return routing;\r\n    }\r\n\r\n    /**\r\n     * Computes or obtains the route of a single edge.\r\n     * @param edge the edge to be routed\r\n     * @param args arguments that may contain an `EdgeRouting` already\r\n     * @returns the route of the specified `edge`\r\n     */\r\n    route(edge: Readonly<SRoutableElementImpl>, args?: IViewArgs): RoutedPoint[] {\r\n        const edgeRouting = findArgValue<EdgeRouting>(args, 'edgeRouting');\r\n        if (edgeRouting) {\r\n            const route = edgeRouting.get(edge.id);\r\n            if (route) {\r\n                return route;\r\n            }\r\n        }\r\n        const router = this.get(edge.routerKind);\r\n        return router.route(edge);\r\n    }\r\n\r\n}\r\n\r\n/** Any object that contains a routing, such as an argument object passed to views for rendering. */\r\nexport interface EdgeRoutingContainer {\r\n    edgeRouting: EdgeRouting;\r\n}\r\n\r\n/**\r\n * Map of edges and their computed routes.\r\n */\r\nexport class EdgeRouting {\r\n\r\n    protected routesMap = new Map<string, RoutedPoint[]>();\r\n\r\n    set(routableId: string, route: RoutedPoint[]): void {\r\n        this.routesMap.set(routableId, route);\r\n    }\r\n\r\n    setAll(otherRoutes: EdgeRouting): void {\r\n        otherRoutes.routes.forEach((route, routableId) => this.set(routableId, route));\r\n    }\r\n\r\n    get(routableId: string): RoutedPoint[] | undefined {\r\n        return this.routesMap.get(routableId);\r\n    }\r\n\r\n    get routes() {\r\n        return this.routesMap;\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Bounds, Point, toDegrees } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\r\nimport { setAttr } from \"../../base/views/vnode-utils\";\r\nimport { SEdgeImpl } from \"../../graph/sgraph\";\r\nimport { Orientation } from \"../../utils/geometry\";\r\nimport { isAlignable, BoundsAware } from \"../bounds/model\";\r\nimport { DEFAULT_EDGE_PLACEMENT, isEdgeLayoutable, EdgeLayoutable, EdgePlacement } from \"./model\";\r\nimport { EdgeRouterRegistry } from \"../routing/routing\";\r\n\r\n@injectable()\r\nexport class EdgeLayoutPostprocessor implements IVNodePostprocessor {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdgeImpl) {\r\n            if (element.bounds !== Bounds.EMPTY) {\r\n                const placement = this.getEdgePlacement(element);\r\n                const edge = element.parent;\r\n                const position = Math.min(1, Math.max(0, placement.position));\r\n                const router = this.edgeRouterRegistry.get(edge.routerKind);\r\n                const pointOnEdge = router.pointAt(edge, position);\r\n                const derivativeOnEdge = router.derivativeAt(edge, position);\r\n                let transform = '';\r\n                if (pointOnEdge && derivativeOnEdge) {\r\n                    transform += `translate(${pointOnEdge.x}, ${pointOnEdge.y})`;\r\n                    const angle = toDegrees(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));\r\n                    if (placement.rotate) {\r\n                        let flippedAngle = angle;\r\n                        if (Math.abs(angle) > 90) {\r\n                             if (angle < 0)\r\n                                flippedAngle += 180;\r\n                            else if (angle > 0)\r\n                                flippedAngle -= 180;\r\n                        }\r\n                        transform += ` rotate(${flippedAngle})`;\r\n                        const alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);\r\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\r\n                    } else {\r\n                        const alignment = this.getAlignment(element, placement, angle);\r\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\r\n                    }\r\n                    setAttr(vnode, 'transform', transform);\r\n                }\r\n            }\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    protected getRotatedAlignment(element: EdgeLayoutable & SModelElementImpl & BoundsAware, placement: EdgePlacement, flip: boolean) {\r\n        let x = isAlignable(element) ? element.alignment.x : 0;\r\n        let y = isAlignable(element) ? element.alignment.y : 0;\r\n        const bounds = element.bounds;\r\n        if (placement.side === 'on')\r\n            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height};\r\n        if (flip) {\r\n            if (placement.position < 0.3333333)\r\n                x -= bounds.width + placement.offset;\r\n            else if (placement.position < 0.6666666)\r\n                x -= 0.5 * bounds.width;\r\n            else\r\n                x += placement.offset;\r\n            switch (placement.side) {\r\n                case 'left':\r\n                case 'bottom':\r\n                    y -= placement.offset + bounds.height;\r\n                    break;\r\n                case 'right':\r\n                case 'top':\r\n                    y += placement.offset;\r\n            }\r\n        } else {\r\n            if (placement.position < 0.3333333)\r\n                x += placement.offset;\r\n            else if (placement.position < 0.6666666)\r\n                x -= 0.5 * bounds.width;\r\n            else\r\n                x -= bounds.width + placement.offset;\r\n            switch (placement.side) {\r\n                case 'right':\r\n                case 'bottom':\r\n                    y += - placement.offset - bounds.height;\r\n                    break;\r\n                case 'left':\r\n                case 'top':\r\n                    y += placement.offset;\r\n            }\r\n        }\r\n        return { x, y };\r\n    }\r\n\r\n    protected getEdgePlacement(element: SModelElementImpl): EdgePlacement {\r\n        let current = element;\r\n        const allPlacements: EdgePlacement[] = [];\r\n        while (current !== undefined) {\r\n            const placement = (current as any).edgePlacement;\r\n            if (placement !== undefined)\r\n                allPlacements.push(placement);\r\n            if (current instanceof SChildElementImpl)\r\n                current = current.parent;\r\n            else\r\n                break;\r\n        }\r\n        return allPlacements.reverse().reduce(\r\n            (a, b) => { return {...a, ...b}; }, DEFAULT_EDGE_PLACEMENT);\r\n    }\r\n\r\n    protected getAlignment(label: EdgeLayoutable & SModelElementImpl & BoundsAware, placement: EdgePlacement, angle: number): Point {\r\n        const bounds = label.bounds;\r\n        const x = isAlignable(label) ? label.alignment.x - bounds.width : 0;\r\n        const y = isAlignable(label) ? label.alignment.y - bounds.height : 0;\r\n        if (placement.side === 'on') {\r\n            return { x: x + 0.5 * bounds.width, y: y + 0.5 * bounds.height};\r\n        }\r\n        const quadrant = this.getQuadrant(angle);\r\n        const midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };\r\n        const topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };\r\n        const topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset};\r\n        const midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };\r\n        const bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset};\r\n        const bottomLeft = { x: placement.offset, y: y - placement.offset};\r\n        switch (placement.side) {\r\n            case 'left':\r\n                switch (quadrant.orientation) {\r\n                    case 'west':\r\n                        return Point.linear(topLeft, topRight, quadrant.position);\r\n                    case 'north':\r\n                        return Point.linear(topRight, bottomRight, quadrant.position);\r\n                    case 'east':\r\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\r\n                    case 'south':\r\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\r\n                }\r\n                break;\r\n            case 'right':\r\n                switch (quadrant.orientation) {\r\n                    case 'west':\r\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\r\n                    case 'north':\r\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\r\n                    case 'east':\r\n                        return Point.linear(topLeft, topRight, quadrant.position);\r\n                    case 'south':\r\n                        return Point.linear(topRight, bottomRight, quadrant.position);\r\n                }\r\n                break;\r\n            case 'top':\r\n                switch (quadrant.orientation) {\r\n                    case 'west':\r\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\r\n                    case 'north':\r\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\r\n                    case 'east':\r\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\r\n                    case 'south':\r\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\r\n                }\r\n                break;\r\n            case 'bottom':\r\n                switch (quadrant.orientation) {\r\n                    case 'west':\r\n                        return Point.linear(topLeft, topRight, quadrant.position);\r\n                    case 'north':\r\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\r\n                    case 'east':\r\n                        return Point.linear(topLeft, topRight, quadrant.position);\r\n                    case 'south':\r\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\r\n                }\r\n                break;\r\n        }\r\n        return {x: 0, y: 0};\r\n    }\r\n\r\n    protected getQuadrant(angle: number): {orientation: Orientation, position: number} {\r\n        if (Math.abs(angle) > 135)\r\n            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };\r\n        else if (angle < -45)\r\n            return { orientation: 'north', position: (angle + 135) / 90 };\r\n        else if (angle < 45)\r\n            return { orientation: 'east', position: (angle + 45) / 90 };\r\n        else\r\n            return { orientation: 'south', position: (angle - 45) / 90 };\r\n    }\r\n\r\n    protected linearFlip(p0: Point, p1: Point, p2: Point, p3: Point, position: number) {\r\n        return position < 0.5 ? Point.linear(p0, p1, 2 * position) : Point.linear(p2, p3, 2 * position - 1);\r\n    }\r\n\r\n    postUpdate(): void {}\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { EdgeLayoutPostprocessor } from \"./edge-layout\";\r\n\r\nconst edgeLayoutModule = new ContainerModule(bind => {\r\n    bind(EdgeLayoutPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(EdgeLayoutPostprocessor);\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(EdgeLayoutPostprocessor);\r\n});\r\n\r\nexport default edgeLayoutModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { CreateElementAction } from 'sprotty-protocol/lib/actions';\r\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { SParentElementImpl, SChildElementImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\n\r\n@injectable()\r\nexport class CreateElementCommand extends Command {\r\n    static readonly KIND = CreateElementAction.KIND;\r\n\r\n    container: SParentElementImpl;\r\n    newElement: SChildElementImpl;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: CreateElementAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const container = context.root.index.getById(this.action.containerId);\r\n        if (container instanceof SParentElementImpl) {\r\n            this.container = container;\r\n            this.newElement = context.modelFactory.createElement(this.action.elementSchema);\r\n            this.container.add(this.newElement);\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        this.container.remove(this.newElement);\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        this.container.add(this.newElement);\r\n        return context.root;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { SModelElementImpl } from \"../../base/model/smodel\";\r\n\r\nexport const creatingOnDragFeature = Symbol('creatingOnDragFeature');\r\n\r\n/**\r\n *  Feature extension interface for {@link creatingOnDragFeature}.\r\n */\r\nexport interface CreatingOnDrag {\r\n    createAction(id: string): Action;\r\n}\r\n\r\nexport function isCreatingOnDrag<T extends SModelElementImpl>(element: T): element is T & CreatingOnDrag {\r\n    return element.hasFeature(creatingOnDragFeature) && (element as any).createAction !== undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx svg */\r\nimport { svg } from './jsx';\r\n\r\nimport { VNode } from \"snabbdom\";\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\r\nimport { SNodeImpl, SPortImpl } from \"../graph/sgraph\";\r\nimport { ViewportRootElementImpl } from \"../features/viewport/viewport-root\";\r\nimport { SShapeElementImpl } from '../features/bounds/model';\r\nimport { ShapeView } from '../features/bounds/views';\r\nimport { Hoverable } from '../features/hover/model';\r\nimport { Selectable } from '../features/select/model';\r\nimport { Diamond } from '../utils/geometry';\r\nimport { SModelElementImpl } from '../base/model/smodel';\r\nimport { injectable } from 'inversify';\r\n\r\n@injectable()\r\nexport class SvgViewportView implements IView {\r\n    render(model: Readonly<ViewportRootElementImpl>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\r\n        return <svg>\r\n            <g transform={transform}>\r\n                {context.renderChildren(model)}\r\n            </g>\r\n        </svg>;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class CircularNodeView extends ShapeView {\r\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        if (!this.isVisible(node, context)) {\r\n            return undefined;\r\n        }\r\n        const radius = this.getRadius(node);\r\n        return <g>\r\n            <circle class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\r\n                    class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                    r={radius} cx={radius} cy={radius}></circle>\r\n            {context.renderChildren(node)}\r\n        </g>;\r\n    }\r\n\r\n    protected getRadius(node: SShapeElementImpl): number {\r\n        const d = Math.min(node.size.width, node.size.height);\r\n        return d > 0 ? d / 2 : 0;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class RectangularNodeView extends ShapeView {\r\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        if (!this.isVisible(node, context)) {\r\n            return undefined;\r\n        }\r\n        return <g>\r\n            <rect class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\r\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                  x=\"0\" y=\"0\" width={Math.max(node.size.width, 0)} height={Math.max(node.size.height, 0)}></rect>\r\n            {context.renderChildren(node)}\r\n        </g>;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class DiamondNodeView extends ShapeView {\r\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        if (!this.isVisible(node, context)) {\r\n            return undefined;\r\n        }\r\n        const diamond = new Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });\r\n        const points = `${svgStr(diamond.topPoint)} ${svgStr(diamond.rightPoint)} ${svgStr(diamond.bottomPoint)} ${svgStr(diamond.leftPoint)}`;\r\n        return <g>\r\n            <polygon class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\r\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\r\n                  points={points} />\r\n            {context.renderChildren(node)}\r\n        </g>;\r\n    }\r\n}\r\n\r\nfunction svgStr(point: Point) {\r\n    return `${point.x},${point.y}`;\r\n}\r\n\r\n@injectable()\r\nexport class EmptyGroupView implements IView {\r\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext): VNode {\r\n        return <g></g>;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject } from 'inversify';\r\nimport { Action, isAction, ApplyLabelEditAction } from 'sprotty-protocol/lib/actions';\r\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { isSelectable } from '../select/model';\r\nimport { toArray } from '../../utils/iterable';\r\nimport { EditableLabel, isEditableLabel, isWithEditableLabel } from './model';\r\n\r\nexport interface EditLabelAction extends Action {\r\n    kind: typeof EditLabelAction.KIND\r\n    labelId: string\r\n}\r\nexport namespace EditLabelAction {\r\n    export const KIND = 'EditLabel';\r\n\r\n    export function create(labelId: string): EditLabelAction {\r\n        return {\r\n            kind: KIND,\r\n            labelId\r\n        };\r\n    }\r\n}\r\n\r\nexport function isEditLabelAction(element?: any): element is EditLabelAction {\r\n    return isAction(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;\r\n}\r\n\r\nexport function isApplyLabelEditAction(element?: any): element is ApplyLabelEditAction {\r\n    return isAction(element) && element.kind === ApplyLabelEditAction.KIND && 'labelId' in element && 'text' in element;\r\n}\r\n\r\nexport class ResolvedLabelEdit {\r\n    label: EditableLabel;\r\n    oldLabel: string;\r\n    newLabel: string;\r\n}\r\n\r\nexport class ApplyLabelEditCommand extends Command {\r\n    static readonly KIND = ApplyLabelEditAction.KIND;\r\n\r\n    protected resolvedLabelEdit: ResolvedLabelEdit;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: ApplyLabelEditAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const index = context.root.index;\r\n        const label = index.getById(this.action.labelId);\r\n        if (label && isEditableLabel(label)) {\r\n            this.resolvedLabelEdit = { label, oldLabel: label.text, newLabel: this.action.text };\r\n            label.text = this.action.text;\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        if (this.resolvedLabelEdit) {\r\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        if (this.resolvedLabelEdit) {\r\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n}\r\n\r\nexport interface IEditLabelValidator {\r\n    validate(value: string, label: EditableLabel & SModelElementImpl): Promise<EditLabelValidationResult>;\r\n}\r\n\r\nexport interface EditLabelValidationResult {\r\n    readonly severity: Severity;\r\n    readonly message?: string;\r\n}\r\n\r\nexport type Severity = 'ok' | 'warning' | 'error';\r\n\r\nexport class EditLabelMouseListener extends MouseListener {\r\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const editableLabel = getEditableLabel(target);\r\n        if (editableLabel) {\r\n            return [EditLabelAction.create(editableLabel.id)];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport class EditLabelKeyListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'F2')) {\r\n            const editableLabels = toArray(element.index.all()\r\n                .filter(e => isSelectable(e) && e.selected)).map(getEditableLabel)\r\n                .filter((e): e is EditableLabel & SModelElementImpl => e !== undefined);\r\n            if (editableLabels.length === 1) {\r\n                return [EditLabelAction.create(editableLabels[0].id)];\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function getEditableLabel(element: SModelElementImpl): EditableLabel & SModelElementImpl | undefined {\r\n    if (isEditableLabel(element)) {\r\n        return element;\r\n    } else if (isWithEditableLabel(element) && element.editableLabel) {\r\n        return element.editableLabel;\r\n    }\r\n    return undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { RequestAction, ResponseAction } from 'sprotty-protocol/lib/actions';\r\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\nimport { isBoundsAware } from '../bounds/model';\r\nimport { ActionDispatcher } from '../../base/actions/action-dispatcher';\r\nimport { TYPES } from '../../base/types';\r\nimport { SModelRootImpl } from '../../base/model/smodel';\r\nimport { ILogger } from '../../utils/logging';\r\n\r\nexport interface ExportSvgAction extends ResponseAction {\r\n    kind: typeof ExportSvgAction.KIND;\r\n    svg: string\r\n    responseId: string\r\n}\r\nexport namespace ExportSvgAction {\r\n    export const KIND = 'exportSvg';\r\n\r\n    export function create(svg: string, requestId: string): ExportSvgAction {\r\n        return {\r\n            kind: KIND,\r\n            svg,\r\n            responseId: requestId\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SvgExporter {\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: ActionDispatcher;\r\n    @inject(TYPES.ILogger) protected log: ILogger;\r\n\r\n    export(root: SModelRootImpl, request?: RequestAction<ExportSvgAction>): void {\r\n        if (typeof document !== 'undefined') {\r\n            const div = document.getElementById(this.options.hiddenDiv);\r\n            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {\r\n                const svgElement = div.firstElementChild as SVGSVGElement;\r\n                const svg = this.createSvg(svgElement, root);\r\n                this.actionDispatcher.dispatch(ExportSvgAction.create(svg, request ? request.requestId : ''));\r\n            }\r\n        }\r\n    }\r\n\r\n    protected createSvg(svgElementOrig: SVGSVGElement, root: SModelRootImpl): string {\r\n        const serializer = new XMLSerializer();\r\n        const svgCopy = serializer.serializeToString(svgElementOrig);\r\n        const iframe: HTMLIFrameElement = document.createElement('iframe');\r\n        document.body.appendChild(iframe);\r\n        if (!iframe.contentWindow)\r\n            throw new Error('IFrame has no contentWindow');\r\n        const docCopy = iframe.contentWindow.document;\r\n        docCopy.open();\r\n        docCopy.write(svgCopy);\r\n        docCopy.close();\r\n        const svgElementNew = docCopy.getElementById(svgElementOrig.id)!;\r\n        svgElementNew.removeAttribute('opacity');\r\n        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);\r\n        svgElementNew.setAttribute('version', '1.1');\r\n        const bounds = this.getBounds(root);\r\n        svgElementNew.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`);\r\n        const svgCode = serializer.serializeToString(svgElementNew);\r\n        document.body.removeChild(iframe);\r\n        return svgCode;\r\n    }\r\n\r\n    protected copyStyles(source: Element, target: Element, skipedProperties: string[]) {\r\n        const sourceStyle = getComputedStyle(source);\r\n        const targetStyle = getComputedStyle(target);\r\n        let diffStyle = '';\r\n        for (let i = 0; i < sourceStyle.length; i++) {\r\n            const key = sourceStyle[i];\r\n            if (skipedProperties.indexOf(key) === -1) {\r\n                const value = sourceStyle.getPropertyValue(key);\r\n                if (targetStyle.getPropertyValue(key) !== value) {\r\n                    diffStyle += key + \":\" + value + \";\";\r\n                }\r\n            }\r\n        }\r\n        if (diffStyle !== '')\r\n            target.setAttribute('style', diffStyle);\r\n        // IE doesn't retrun anything on source.children\r\n        for (let i = 0; i < source.childNodes.length; ++i) {\r\n            const sourceChild = source.childNodes[i];\r\n            const targetChild = target.childNodes[i];\r\n            if (sourceChild instanceof Element)\r\n                this.copyStyles(sourceChild, targetChild as Element, []);\r\n        }\r\n    }\r\n\r\n    protected getBounds(root: SModelRootImpl) {\r\n        const allBounds: Bounds[] = [ Bounds.EMPTY ];\r\n        root.children.forEach(element => {\r\n            if (isBoundsAware(element)) {\r\n                allBounds.push(element.bounds);\r\n            }\r\n        });\r\n        return allBounds.reduce((one, two) => Bounds.combine(one, two));\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { Action, ComputedBoundsAction, RequestModelAction } from 'sprotty-protocol/lib/actions';\r\nimport { SModelElement, SModelRoot } from 'sprotty-protocol/lib/model';\r\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelIndex } from 'sprotty-protocol/lib/utils/model-utils';\r\nimport { IActionDispatcher } from '../base/actions/action-dispatcher';\r\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from '../base/actions/action-handler';\r\nimport { ICommand } from '../base/commands/command';\r\nimport { TYPES } from '../base/types';\r\nimport { ViewerOptions } from '../base/views/viewer-options';\r\nimport { ExportSvgAction } from '../features/export/svg-exporter';\r\n\r\n/**\r\n * A model source is serving the model to the event cycle. It represents\r\n * the entry point to the client for external sources, such as model\r\n * editors.\r\n *\r\n * As an `IActionHandler` it listens to actions in and reacts to them with\r\n * commands or actions if necessary. This way, you can implement action\r\n * protocols between the client and the outside world.\r\n *\r\n * There are two default implementations for a ModelSource:\r\n *\r\n *  - The `LocalModelSource` handles the actions to calculate bounds and\r\n *    set/update the model\r\n *  - the `DiagramServerProxy` connects via websocket to a remote source.\r\n *    It can be used to connect to a model editor that provides the model,\r\n *    layouts diagrams, transfers selection and answers model queries from\r\n *    the client.\r\n */\r\n@injectable()\r\nexport abstract class ModelSource implements IActionHandler, IActionHandlerInitializer {\r\n\r\n    @inject(TYPES.IActionDispatcher) readonly actionDispatcher: IActionDispatcher;\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n\r\n    initialize(registry: ActionHandlerRegistry): void {\r\n        // Register this model source\r\n        registry.register(RequestModelAction.KIND, this);\r\n        registry.register(ExportSvgAction.KIND, this);\r\n    }\r\n\r\n    abstract get model(): SModelRoot;\r\n\r\n    abstract handle(action: Action): ICommand | Action | void;\r\n\r\n    /**\r\n     * Commit changes from the internal SModel back to the currentModel.\r\n     *\r\n     * This method is meant to be called only by CommitModelCommand and other commands\r\n     * that need to feed the current internal model back to the model source. It does\r\n     * not have any side effects such as triggering layout or bounds computation, as the\r\n     * internal model is already current. See `CommitModelAction` for details.\r\n     *\r\n     * @param newRoot the new model.\r\n     * @return the previous model.\r\n     */\r\n    abstract commitModel(newRoot: SModelRoot): Promise<SModelRoot> | SModelRoot;\r\n}\r\n\r\n\r\n@injectable()\r\nexport class ComputedBoundsApplicator {\r\n    apply(root: SModelRoot, action: ComputedBoundsAction): SModelIndex {\r\n        const index = new SModelIndex();\r\n        index.add(root);\r\n        for (const b of action.bounds) {\r\n            const element = index.getById(b.elementId);\r\n            if (element !== undefined)\r\n                this.applyBounds(element, b.newPosition, b.newSize);\r\n        }\r\n        if (action.alignments !== undefined) {\r\n            for (const a of action.alignments) {\r\n                const element = index.getById(a.elementId);\r\n                if (element !== undefined)\r\n                    this.applyAlignment(element, a.newAlignment);\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    protected applyAlignment(element: SModelElement, newAlignment: Point) {\r\n        const e = element as any;\r\n        e.alignment = { x: newAlignment.x, y: newAlignment.y };\r\n    }\r\n\r\n    protected applyBounds(element: SModelElement, newPosition: Point | undefined, newSize: Dimension) {\r\n        const e = element as any;\r\n        if (newPosition)\r\n            e.position = {...newPosition};\r\n        e.size = {...newSize};\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { Action } from 'sprotty-protocol/lib/actions';\r\nimport { SModelRoot } from 'sprotty-protocol/lib/model';\r\nimport { CommandExecutionContext, CommandReturn, SystemCommand } from '../base/commands/command';\r\nimport { SModelRootImpl } from '../base/model/smodel';\r\nimport { TYPES } from '../base/types';\r\nimport { ModelSource } from './model-source';\r\n\r\n/**\r\n * Commit the current SModel back to the model source.\r\n *\r\n * The SModel (AKA internal model) contains a lot of dirty/transitional state, such\r\n * as intermediate move postions or handles. When a user interaction that spans multiple\r\n * commands finishes, it fires a CommitModelAction to write the final changes back to\r\n * the model source.\r\n */\r\nexport interface CommitModelAction extends Action {\r\n    kind: typeof CommitModelAction.KIND;\r\n}\r\nexport namespace CommitModelAction {\r\n    export const KIND = 'commitModel';\r\n\r\n    export function create(): CommitModelAction {\r\n        return {\r\n            kind: KIND\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class CommitModelCommand extends SystemCommand {\r\n    static readonly KIND = CommitModelAction.KIND;\r\n\r\n    @inject(TYPES.ModelSource) modelSource: ModelSource;\r\n\r\n    originalModel: SModelRoot;\r\n    newModel: SModelRoot;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: CommitModelAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.newModel = context.modelFactory.createSchema(context.root);\r\n        return this.doCommit(this.newModel, context.root, true);\r\n    }\r\n\r\n    protected doCommit(model: SModelRoot, result: SModelRootImpl, doSetOriginal: boolean): CommandReturn {\r\n        const commitResult = this.modelSource.commitModel(model);\r\n        if (commitResult instanceof Promise) {\r\n            return commitResult.then(originalModel => {\r\n                if (doSetOriginal)\r\n                    this.originalModel = originalModel;\r\n                return result;\r\n            });\r\n        } else {\r\n            if (doSetOriginal)\r\n                this.originalModel = commitResult;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return this.doCommit(this.originalModel, context.root, false);\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return this.doCommit(this.newModel, context.root, false);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2023 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject } from 'inversify';\r\nimport { Action, SetViewportAction } from 'sprotty-protocol/lib/actions';\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { almostEquals, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { TYPES } from '../../base/types';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\nimport { getWindowScroll } from '../../utils/browser';\r\nimport { isViewport } from './model';\r\n\r\nexport function getZoom(label: SModelElementImpl) {\r\n    let zoom = 1;\r\n    const viewport = findParentByFeature(label, isViewport);\r\n    if (viewport) {\r\n        zoom = viewport.zoom;\r\n    }\r\n    return zoom;\r\n}\r\n\r\nexport class ZoomMouseListener extends MouseListener {\r\n\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n\r\n    override wheel(target: SModelElementImpl, event: WheelEvent): Action[] {\r\n        const viewport = findParentByFeature(target, isViewport);\r\n        if (!viewport) {\r\n            return [];\r\n        }\r\n        const newViewport = this.isScrollMode(event) ? this.processScroll(viewport, event) : this.processZoom(viewport, target, event);\r\n        if (newViewport) {\r\n            return [SetViewportAction.create(viewport.id, newViewport, { animate: false })];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    protected isScrollMode(event: WheelEvent) {\r\n        return event.altKey;\r\n    }\r\n\r\n    protected processScroll(viewport: Viewport, event: WheelEvent): Viewport {\r\n        return {\r\n            scroll: {\r\n                x: viewport.scroll.x + event.deltaX,\r\n                y: viewport.scroll.y + event.deltaY\r\n            },\r\n            zoom: viewport.zoom\r\n        };\r\n    }\r\n\r\n    protected processZoom(viewport: Viewport, target: SModelElementImpl, event: WheelEvent): Viewport | undefined {\r\n        const zoomFactor = this.getZoomFactor(event);\r\n        if (zoomFactor > 1 && almostEquals(viewport.zoom, this.viewerOptions.zoomLimits.max)\r\n            || zoomFactor < 1 && almostEquals(viewport.zoom, this.viewerOptions.zoomLimits.min)) {\r\n            return;\r\n        }\r\n        const zoom = viewport.zoom * zoomFactor;\r\n        const viewportOffset = this.getViewportOffset(target.root, event);\r\n        const offsetFactor = 1.0 / zoom - 1.0 / viewport.zoom;\r\n        return {\r\n            scroll: {\r\n                x: viewport.scroll.x - offsetFactor * viewportOffset.x,\r\n                y: viewport.scroll.y - offsetFactor * viewportOffset.y\r\n            },\r\n            zoom\r\n        };\r\n    }\r\n\r\n    protected getViewportOffset(root: SModelRootImpl, event: WheelEvent): Point {\r\n        const canvasBounds = root.canvasBounds;\r\n        const windowScroll = getWindowScroll();\r\n        return {\r\n            x: event.clientX + windowScroll.x - canvasBounds.x,\r\n            y: event.clientY + windowScroll.y - canvasBounds.y\r\n        };\r\n    }\r\n\r\n    protected getZoomFactor(event: WheelEvent): number {\r\n        if (event.deltaMode === event.DOM_DELTA_PAGE)\r\n            return Math.exp(-event.deltaY * 0.5);\r\n        else if (event.deltaMode === event.DOM_DELTA_LINE)\r\n            return Math.exp(-event.deltaY * 0.05);\r\n        else // deltaMode === DOM_DELTA_PIXEL\r\n            return Math.exp(-event.deltaY * 0.005);\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019-2022 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport { Action, ApplyLabelEditAction } from 'sprotty-protocol/lib/actions';\r\nimport { IActionDispatcherProvider } from '../../base/actions/action-dispatcher';\r\nimport { IActionHandler } from '../../base/actions/action-handler';\r\nimport { ICommand } from '../../base/commands/command';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { TYPES } from '../../base/types';\r\nimport { AbstractUIExtension } from '../../base/ui-extensions/ui-extension';\r\nimport { SetUIExtensionVisibilityAction } from '../../base/ui-extensions/ui-extension-registry';\r\nimport { DOMHelper } from '../../base/views/dom-helper';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\nimport { CommitModelAction } from '../../model-source/commit-model';\r\nimport { matchesKeystroke, KeyCode, KeyboardModifier } from '../../utils/keyboard';\r\nimport { getAbsoluteClientBounds } from '../bounds/model';\r\nimport { getZoom } from '../viewport/zoom';\r\nimport { EditLabelValidationResult, IEditLabelValidator, isEditLabelAction, Severity } from './edit-label';\r\nimport { EditableLabel, isEditableLabel } from './model';\r\n\r\n/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */\r\n@injectable()\r\nexport class EditLabelActionHandler implements IActionHandler {\r\n    handle(action: Action): void | Action | ICommand {\r\n        if (isEditLabelAction(action)) {\r\n            return SetUIExtensionVisibilityAction.create({ extensionId: EditLabelUI.ID, visible: true, contextElementsId: [action.labelId] });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IEditLabelValidationDecorator {\r\n    decorate(input: HTMLInputElement | HTMLTextAreaElement, validationResult: EditLabelValidationResult): void;\r\n    dispose(input: HTMLInputElement | HTMLTextAreaElement): void;\r\n}\r\n\r\n@injectable()\r\nexport class EditLabelUI extends AbstractUIExtension {\r\n    static readonly ID = 'editLabelUi';\r\n\r\n    @inject(TYPES.IActionDispatcherProvider) public actionDispatcherProvider: IActionDispatcherProvider;\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\r\n    @inject(TYPES.IEditLabelValidator) @optional() public labelValidator: IEditLabelValidator;\r\n    @inject(TYPES.IEditLabelValidationDecorator) @optional() public validationDecorator: IEditLabelValidationDecorator;\r\n\r\n    protected inputElement: HTMLInputElement;\r\n    protected textAreaElement: HTMLTextAreaElement;\r\n\r\n    protected label?: EditableLabel & SModelElementImpl;\r\n    protected labelElement: HTMLElement | null;\r\n    protected validationTimeout?: number = undefined;\r\n    protected isActive: boolean = false;\r\n    protected blockApplyEditOnInvalidInput = true;\r\n    protected isCurrentLabelValid: boolean = true;\r\n    protected previousLabelContent?: string;\r\n\r\n    public id() { return EditLabelUI.ID; }\r\n    public containerClass() { return 'label-edit'; }\r\n\r\n    protected get labelId() { return this.label ? this.label.id : 'unknown'; }\r\n\r\n    protected initializeContents(containerElement: HTMLElement) {\r\n        containerElement.style.position = 'absolute';\r\n        this.inputElement = document.createElement('input');\r\n        this.textAreaElement = document.createElement('textarea');\r\n        [this.inputElement, this.textAreaElement].forEach((element) => {\r\n            element.onkeydown = event => this.applyLabelEditOnEvent(event, 'Enter');\r\n            this.configureAndAdd(element, containerElement);\r\n        });\r\n    }\r\n\r\n    protected configureAndAdd(element: HTMLInputElement | HTMLTextAreaElement, containerElement: HTMLElement) {\r\n        element.style.visibility = 'hidden';\r\n        element.style.position = 'absolute';\r\n        element.style.top = '0px';\r\n        element.style.left = '0px';\r\n        element.addEventListener('keydown', (event: KeyboardEvent) => this.hideIfEscapeEvent(event));\r\n        element.addEventListener('keyup', (event: KeyboardEvent) => this.validateLabelIfContentChange(event, element.value));\r\n        element.addEventListener('blur', () => window.setTimeout(() => this.applyLabelEdit(), 200));\r\n        containerElement.appendChild(element);\r\n    }\r\n\r\n    get editControl(): HTMLInputElement | HTMLTextAreaElement {\r\n        if (this.label && this.label.isMultiLine) {\r\n            return this.textAreaElement;\r\n        }\r\n        return this.inputElement;\r\n    }\r\n\r\n    protected hideIfEscapeEvent(event: KeyboardEvent) {\r\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\r\n    }\r\n\r\n    protected applyLabelEditOnEvent(event: KeyboardEvent, code?: KeyCode, ...modifiers: KeyboardModifier[]) {\r\n        if (matchesKeystroke(event, code ? code : 'Enter', ...modifiers)) {\r\n            event.preventDefault();\r\n            this.applyLabelEdit();\r\n        }\r\n    }\r\n\r\n    protected validateLabelIfContentChange(event: KeyboardEvent, value: string) {\r\n        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {\r\n            this.previousLabelContent = value;\r\n            this.performLabelValidation(event, this.editControl.value);\r\n        }\r\n    }\r\n\r\n    protected async applyLabelEdit() {\r\n        if (!this.isActive) {\r\n            return;\r\n        }\r\n        if (this.label?.text === this.editControl.value) {\r\n            // no action necessary\r\n            this.hide();\r\n            return;\r\n        }\r\n        if (this.blockApplyEditOnInvalidInput) {\r\n            const result = await this.validateLabel(this.editControl.value);\r\n            if ('error' === result.severity) {\r\n                this.editControl.focus();\r\n                return;\r\n            }\r\n        }\r\n        this.actionDispatcherProvider()\r\n            .then((actionDispatcher) => actionDispatcher.dispatchAll([ApplyLabelEditAction.create(this.labelId, this.editControl.value), CommitModelAction.create()]))\r\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute apply label edit action', reason));\r\n        this.hide();\r\n    }\r\n\r\n    protected performLabelValidation(event: KeyboardEvent, value: string) {\r\n        if (this.validationTimeout) {\r\n            window.clearTimeout(this.validationTimeout);\r\n        }\r\n        this.validationTimeout = window.setTimeout(() => this.validateLabel(value), 200);\r\n    }\r\n\r\n    protected async validateLabel(value: string): Promise<EditLabelValidationResult> {\r\n        if (this.labelValidator && this.label) {\r\n            try {\r\n                const result = await this.labelValidator.validate(value, this.label);\r\n                this.isCurrentLabelValid = 'error' !== result.severity;\r\n                this.showValidationResult(result);\r\n                return result;\r\n            } catch (reason) {\r\n                this.logger.error(this, 'Error validating edited label', reason);\r\n            }\r\n        }\r\n        this.isCurrentLabelValid = true;\r\n        return { severity: <Severity>'ok', message: undefined };\r\n    }\r\n\r\n    protected showValidationResult(result: EditLabelValidationResult) {\r\n        this.clearValidationResult();\r\n        if (this.validationDecorator) {\r\n            this.validationDecorator.decorate(this.editControl, result);\r\n        }\r\n    }\r\n\r\n    protected clearValidationResult() {\r\n        if (this.validationDecorator) {\r\n            this.validationDecorator.dispose(this.editControl);\r\n        }\r\n    }\r\n\r\n    override show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\r\n        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {\r\n            return;\r\n        }\r\n        super.show(root, ...contextElementIds);\r\n        this.isActive = true;\r\n    }\r\n\r\n    override hide(): void {\r\n        this.editControl.style.visibility = 'hidden';\r\n        super.hide();\r\n        this.clearValidationResult();\r\n        this.isActive = false;\r\n        this.isCurrentLabelValid = true;\r\n        this.previousLabelContent = undefined;\r\n        if (this.labelElement) {\r\n            this.labelElement.style.visibility = 'visible';\r\n        }\r\n    }\r\n\r\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\r\n        this.label = getEditableLabels(contextElementIds, root)[0];\r\n        this.previousLabelContent = this.label.text;\r\n        this.setPosition(containerElement);\r\n        this.applyTextContents();\r\n        this.applyFontStyling();\r\n        this.editControl.style.visibility = 'visible';\r\n        this.editControl.focus();\r\n    }\r\n\r\n    protected setPosition(containerElement: HTMLElement) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let width = 100;\r\n        let height = 20;\r\n\r\n        if (this.label) {\r\n            const zoom = getZoom(this.label);\r\n            const bounds = getAbsoluteClientBounds(this.label, this.domHelper, this.viewerOptions);\r\n            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;\r\n            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;\r\n            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;\r\n            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;\r\n        }\r\n\r\n        containerElement.style.left = `${x}px`;\r\n        containerElement.style.top = `${y}px`;\r\n        containerElement.style.width = `${width}px`;\r\n        this.editControl.style.width = `${width}px`;\r\n        containerElement.style.height = `${height}px`;\r\n        this.editControl.style.height = `${height}px`;\r\n    }\r\n\r\n    protected applyTextContents() {\r\n        if (this.label) {\r\n            this.editControl.value = this.label.text;\r\n            if (this.editControl instanceof HTMLTextAreaElement) {\r\n                this.editControl.selectionStart = 0;\r\n                this.editControl.selectionEnd = 0;\r\n                this.editControl.scrollTop = 0;\r\n                this.editControl.scrollLeft = 0;\r\n            } else {\r\n                this.editControl.setSelectionRange(0, this.editControl.value.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected applyFontStyling() {\r\n        if (this.label) {\r\n            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));\r\n            if (this.labelElement) {\r\n                this.labelElement.style.visibility = 'hidden';\r\n                const style = window.getComputedStyle(this.labelElement);\r\n                this.editControl.style.font = style.font;\r\n                this.editControl.style.fontStyle = style.fontStyle;\r\n                this.editControl.style.fontFamily = style.fontFamily;\r\n                this.editControl.style.fontSize = scaledFont(style.fontSize, getZoom(this.label));\r\n                this.editControl.style.fontWeight = style.fontWeight;\r\n                this.editControl.style.lineHeight = style.lineHeight;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasEditableLabel(contextElementIds: string[], root: Readonly<SModelRootImpl>) {\r\n    return getEditableLabels(contextElementIds, root).length === 1;\r\n}\r\n\r\nfunction getEditableLabels(contextElementIds: string[], root: Readonly<SModelRootImpl>) {\r\n    return contextElementIds.map(id => root.index.getById(id)).filter(isEditableLabel);\r\n}\r\n\r\nfunction scaledFont(font: string, zoom: number): string {\r\n    return font.replace(/\\d+(\\.\\d+)?/, (match) => {\r\n        return String(Number.parseInt(match, 10) * zoom);\r\n    });\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { Action } from \"sprotty-protocol/lib/actions\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { Command, CommandExecutionContext, CommandReturn } from \"../../base/commands/command\";\r\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { TYPES } from \"../../base/types\";\r\nimport { SRoutableElementImpl, SRoutingHandleImpl } from \"../routing/model\";\r\nimport { EdgeRouterRegistry } from \"../routing/routing\";\r\nimport { canEditRouting } from './model';\r\n\r\nexport interface SwitchEditModeAction extends Action {\r\n    kind: typeof SwitchEditModeAction.KIND;\r\n    elementsToActivate: string[]\r\n    elementsToDeactivate: string[]\r\n}\r\nexport namespace SwitchEditModeAction {\r\n    export const KIND = \"switchEditMode\";\r\n\r\n    export function create(options: { elementsToActivate?: string[], elementsToDeactivate?: string[] }): SwitchEditModeAction {\r\n        return {\r\n            kind: KIND,\r\n            elementsToActivate: options.elementsToActivate ?? [],\r\n            elementsToDeactivate: options.elementsToDeactivate ?? []\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SwitchEditModeCommand extends Command {\r\n    static readonly KIND: string = SwitchEditModeAction.KIND;\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    protected elementsToActivate: SModelElementImpl[] = [];\r\n    protected elementsToDeactivate: SModelElementImpl[] = [];\r\n    protected handlesToRemove: { handle: SRoutingHandleImpl, parent: SRoutableElementImpl, point?: Point }[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SwitchEditModeAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const index = context.root.index;\r\n        this.action.elementsToActivate.forEach(id => {\r\n            const element = index.getById(id);\r\n            if (element !== undefined )\r\n                this.elementsToActivate.push(element);\r\n        });\r\n        this.action.elementsToDeactivate.forEach(id => {\r\n            const element = index.getById(id);\r\n            if (element !== undefined)\r\n                this.elementsToDeactivate.push(element);\r\n            if (element instanceof SRoutingHandleImpl && element.parent instanceof SRoutableElementImpl) {\r\n                const parent = element.parent;\r\n                if (this.shouldRemoveHandle(element, parent)) {\r\n                    this.handlesToRemove.push({ handle: element, parent });\r\n                    this.elementsToDeactivate.push(parent);\r\n                    this.elementsToActivate.push(parent);\r\n                }\r\n            }\r\n        });\r\n        return this.doExecute(context);\r\n    }\r\n\r\n    protected doExecute(context: CommandExecutionContext): SModelRootImpl {\r\n        this.handlesToRemove.forEach(entry => {\r\n            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];\r\n        });\r\n        this.elementsToDeactivate.forEach(element => {\r\n            if (element instanceof SRoutableElementImpl)\r\n                element.removeAll(child => child instanceof SRoutingHandleImpl);\r\n            else if (element instanceof SRoutingHandleImpl) {\r\n                element.editMode = false;\r\n                if (element.danglingAnchor) {\r\n                    if (element.parent instanceof SRoutableElementImpl && element.danglingAnchor.original)  {\r\n                        if (element.parent.source === element.danglingAnchor)\r\n                            element.parent.sourceId = element.danglingAnchor.original.id;\r\n                        else if (element.parent.target === element.danglingAnchor)\r\n                            element.parent.targetId = element.danglingAnchor.original.id;\r\n                        element.danglingAnchor.parent.remove(element.danglingAnchor);\r\n                        element.danglingAnchor = undefined;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.elementsToActivate.forEach(element => {\r\n            if (canEditRouting(element) && element instanceof SParentElementImpl) {\r\n                const router = this.edgeRouterRegistry.get(element.routerKind);\r\n                router.createRoutingHandles(element);\r\n            } else if (element instanceof SRoutingHandleImpl)\r\n                element.editMode = true;\r\n        });\r\n        return context.root;\r\n    }\r\n\r\n    protected shouldRemoveHandle(handle: SRoutingHandleImpl, parent: SRoutableElementImpl): boolean {\r\n        if (handle.kind === 'junction') {\r\n            const route = this.edgeRouterRegistry.route(parent);\r\n            return route.find(rp => rp.pointIndex === handle.pointIndex) === undefined;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        this.handlesToRemove.forEach(entry => {\r\n            if (entry.point !== undefined)\r\n                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);\r\n        });\r\n        this.elementsToActivate.forEach(element => {\r\n            if (element instanceof SRoutableElementImpl)\r\n                element.removeAll(child => child instanceof SRoutingHandleImpl);\r\n            else if (element instanceof SRoutingHandleImpl)\r\n                element.editMode = false;\r\n        });\r\n        this.elementsToDeactivate.forEach(element => {\r\n            if (canEditRouting(element)) {\r\n                const router = this.edgeRouterRegistry.get(element.routerKind);\r\n                router.createRoutingHandles(element);\r\n            } else if (element instanceof SRoutingHandleImpl)\r\n                element.editMode = true;\r\n        });\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return this.doExecute(context);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { ReconnectAction } from 'sprotty-protocol/lib/actions';\r\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { TYPES } from '../../base/types';\r\nimport { SRoutableElementImpl } from '../routing/model';\r\nimport { EdgeMemento, EdgeRouterRegistry } from '../routing/routing';\r\n\r\n@injectable()\r\nexport class ReconnectCommand extends Command {\r\n    static readonly KIND = ReconnectAction.KIND;\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    memento: EdgeMemento | undefined;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: ReconnectAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.doExecute(context);\r\n        return context.root;\r\n    }\r\n\r\n    private doExecute(context: CommandExecutionContext) {\r\n        const index = context.root.index;\r\n        const edge = index.getById(this.action.routableId);\r\n        if (edge instanceof SRoutableElementImpl) {\r\n            const router = this.edgeRouterRegistry.get(edge.routerKind);\r\n            const before = router.takeSnapshot(edge);\r\n            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);\r\n            const after = router.takeSnapshot(edge);\r\n            this.memento = {\r\n                edge: edge,\r\n                before,\r\n                after\r\n            };\r\n        }\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        if (this.memento) {\r\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\r\n            router.applySnapshot(this.memento.edge, this.memento.before);\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        if (this.memento) {\r\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\r\n            router.applySnapshot(this.memento.edge, this.memento.after);\r\n        }\r\n        return context.root;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\r\nimport { configureModelElement } from \"../../base/views/view\";\r\nimport { SDanglingAnchorImpl } from \"../../features/routing/model\";\r\nimport { EmptyGroupView } from \"../../lib/svg-views\";\r\nimport { DeleteElementCommand } from \"./delete\";\r\nimport { EditLabelMouseListener, ApplyLabelEditCommand, EditLabelKeyListener, EditLabelAction } from \"./edit-label\";\r\nimport { EditLabelUI, EditLabelActionHandler } from \"./edit-label-ui\";\r\nimport { SwitchEditModeCommand } from \"./edit-routing\";\r\nimport { ReconnectCommand } from \"./reconnect\";\r\n\r\nexport const edgeEditModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    const context = { bind, isBound };\r\n    configureCommand(context, SwitchEditModeCommand);\r\n    configureCommand(context, ReconnectCommand);\r\n    configureCommand(context, DeleteElementCommand);\r\n    configureModelElement(context, 'dangling-anchor', SDanglingAnchorImpl, EmptyGroupView);\r\n});\r\n\r\nexport const labelEditModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(EditLabelMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(EditLabelMouseListener);\r\n    bind(EditLabelKeyListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(EditLabelKeyListener);\r\n    configureCommand({ bind, isBound }, ApplyLabelEditCommand);\r\n});\r\n\r\nexport const labelEditUiModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    const context = { bind, isBound };\r\n    configureActionHandler(context, EditLabelAction.KIND, EditLabelActionHandler);\r\n    bind(EditLabelUI).toSelf().inSingletonScope();\r\n    bind(TYPES.IUIExtension).toService(EditLabelUI);\r\n});\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const expandFeature = Symbol('expandFeature');\r\n\r\n/**\r\n * Model elements that implement this interface can be expanded/collapsed\r\n *\r\n * Feature extension interface for {@link expandFeature}.\r\n */\r\nexport interface Expandable {\r\n    expanded: boolean\r\n}\r\n\r\nexport function isExpandable(element: SModelElementImpl): element is SModelElementImpl & Expandable {\r\n    return element.hasFeature(expandFeature) && 'expanded' in element;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { Action, CollapseExpandAction } from 'sprotty-protocol/lib/actions';\r\nimport { SButtonImpl } from '../button/model';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { isExpandable } from './model';\r\nimport { IButtonHandler } from '../button/button-handler';\r\n\r\n@injectable()\r\nexport class ExpandButtonHandler implements IButtonHandler {\r\n    static TYPE = 'button:expand';\r\n\r\n    buttonPressed(button: SButtonImpl): Action[] {\r\n        const expandable = findParentByFeature(button, isExpandable);\r\n        if (expandable !== undefined) {\r\n            return [ CollapseExpandAction.create({\r\n                expandIds:   expandable.expanded ? [] : [ expandable.id ],\r\n                collapseIds:  expandable.expanded ? [ expandable.id ] : []\r\n            })];\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n /** @jsx svg */\r\nimport { svg } from '../../lib/jsx';\r\n\r\nimport { VNode } from 'snabbdom';\r\nimport { IView, RenderingContext } from '../../base/views/view';\r\nimport { isExpandable } from './model';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { SButtonImpl } from '../button/model';\r\nimport { injectable } from 'inversify';\r\n\r\n@injectable()\r\nexport class ExpandButtonView implements IView {\r\n    render(button: SButtonImpl, context: RenderingContext): VNode {\r\n        const expandable = findParentByFeature(button, isExpandable);\r\n        const path = (expandable !== undefined && expandable.expanded)\r\n            ? 'M 1,5 L 8,12 L 15,5 Z'\r\n            : 'M 1,8 L 8,15 L 8,1 Z';\r\n        return <g class-sprotty-button=\"{true}\" class-enabled=\"{button.enabled}\">\r\n                <rect x={0} y={0} width={16} height={16} opacity={0}></rect>\r\n                <path d={path}></path>\r\n            </g>;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { VNode } from 'snabbdom';\r\nimport { Action, generateRequestId, RequestAction } from \"sprotty-protocol/lib/actions\";\r\nimport { CommandExecutionContext, HiddenCommand, CommandResult } from '../../base/commands/command';\r\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\r\nimport { isSelectable } from '../select/model';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { isExportable } from './model';\r\nimport { SvgExporter, ExportSvgAction } from './svg-exporter';\r\nimport { isViewport } from '../viewport/model';\r\nimport { isHoverable } from '../hover/model';\r\nimport { TYPES } from '../../base/types';\r\n\r\n@injectable()\r\nexport class ExportSvgKeyListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'KeyE', 'ctrlCmd', 'shift'))\r\n            return [ RequestExportSvgAction.create() ];\r\n        else\r\n            return [];\r\n    }\r\n}\r\n\r\nexport interface RequestExportSvgAction extends RequestAction<ExportSvgAction> {\r\n    kind: typeof RequestExportSvgAction.KIND\r\n}\r\nexport namespace RequestExportSvgAction {\r\n    export const KIND = 'requestExportSvg';\r\n\r\n    export function create(): RequestExportSvgAction {\r\n        return {\r\n            kind: KIND,\r\n            requestId: generateRequestId()\r\n        };\r\n    }\r\n}\r\n\r\nexport class ExportSvgCommand extends HiddenCommand {\r\n    static readonly KIND = RequestExportSvgAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected action: RequestExportSvgAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandResult {\r\n        if (isExportable(context.root)) {\r\n            const root = context.modelFactory.createRoot(context.root);\r\n            if (isExportable(root)) {\r\n                if (isViewport(root)) {\r\n                    root.zoom = 1;\r\n                    root.scroll = { x: 0, y: 0 };\r\n                }\r\n                root.index.all().forEach(element => {\r\n                    if (isSelectable(element) && element.selected)\r\n                        element.selected = false;\r\n                    if (isHoverable(element) && element.hoverFeedback)\r\n                        element.hoverFeedback = false;\r\n                });\r\n                return {\r\n                    model: root,\r\n                    modelChanged: true,\r\n                    cause: this.action\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            model: context.root,\r\n            modelChanged: false\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class ExportSvgPostprocessor implements IVNodePostprocessor {\r\n\r\n    root: SModelRootImpl;\r\n\r\n    @inject(TYPES.SvgExporter) protected svgExporter: SvgExporter;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (element instanceof SModelRootImpl)\r\n            this.root = element;\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(cause?: Action): void {\r\n        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {\r\n            this.svgExporter.export(this.root, cause as RequestExportSvgAction);\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { Animation } from \"../../base/animations/animation\";\r\nimport { CommandExecutionContext } from \"../../base/commands/command\";\r\nimport { SModelRootImpl, SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\r\nimport { setAttr } from \"../../base/views/vnode-utils\";\r\nimport { Fadeable, isFadeable } from \"./model\";\r\n\r\nexport interface ResolvedElementFade {\r\n    element: SModelElementImpl & Fadeable\r\n    type: 'in' | 'out'\r\n}\r\n\r\nexport class FadeAnimation extends Animation {\r\n\r\n    constructor(protected model: SModelRootImpl,\r\n                public elementFades: ResolvedElementFade[],\r\n                context: CommandExecutionContext,\r\n                protected removeAfterFadeOut: boolean = false) {\r\n        super(context);\r\n    }\r\n\r\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\r\n        for (const elementFade of this.elementFades) {\r\n            const element = elementFade.element;\r\n            if (elementFade.type === 'in') {\r\n                element.opacity = t;\r\n            } else if (elementFade.type === 'out') {\r\n                element.opacity = 1 - t;\r\n                if (t === 1 && this.removeAfterFadeOut && element instanceof SChildElementImpl) {\r\n                    element.parent.remove(element);\r\n                }\r\n            }\r\n        }\r\n        return this.model;\r\n    }\r\n\r\n}\r\n\r\n@injectable()\r\nexport class ElementFader implements IVNodePostprocessor {\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (isFadeable(element) && element.opacity !== 1) {\r\n            setAttr(vnode, 'opacity', element.opacity);\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { Action, RequestPopupModelAction, SetPopupModelAction, HoverFeedbackAction } from 'sprotty-protocol/lib/actions';\r\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { TYPES } from '../../base/types';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { CommandExecutionContext, PopupCommand, SystemCommand, CommandReturn, ICommand } from '../../base/commands/command';\r\nimport { IActionHandler } from '../../base/actions/action-handler';\r\nimport { EMPTY_ROOT } from '../../base/model/smodel-factory';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { findParentByFeature, findParent } from '../../base/model/smodel-utils';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\nimport { getAbsoluteBounds } from '../bounds/model';\r\nimport { hasPopupFeature, isHoverable } from './model';\r\n\r\n\r\n@injectable()\r\nexport class HoverFeedbackCommand extends SystemCommand {\r\n    static readonly KIND = HoverFeedbackAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: HoverFeedbackAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const model: SModelRootImpl = context.root;\r\n        const modelElement: SModelElementImpl | undefined = model.index.getById(this.action.mouseoverElement);\r\n\r\n        if (modelElement) {\r\n            if (isHoverable(modelElement)) {\r\n                modelElement.hoverFeedback = this.action.mouseIsOver;\r\n            }\r\n        }\r\n\r\n        return this.redo(context);\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return context.root;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SetPopupModelCommand extends PopupCommand {\r\n    static readonly KIND = SetPopupModelAction.KIND;\r\n\r\n    oldRoot: SModelRootImpl;\r\n    newRoot: SModelRootImpl;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SetPopupModelAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.oldRoot = context.root;\r\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\r\n\r\n        return this.newRoot;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return this.oldRoot;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return this.newRoot;\r\n    }\r\n}\r\n\r\nexport interface HoverState {\r\n    mouseOverTimer: number | undefined\r\n    mouseOutTimer: number | undefined\r\n    popupOpen: boolean\r\n    previousPopupElement: SModelElementImpl | undefined\r\n}\r\n\r\nexport abstract class AbstractHoverMouseListener extends MouseListener {\r\n\r\n    protected mouseIsDown: boolean;\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n    @inject(TYPES.HoverState) protected state: HoverState;\r\n\r\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        this.mouseIsDown = true;\r\n        return [];\r\n    }\r\n\r\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        this.mouseIsDown = false;\r\n        return [];\r\n    }\r\n\r\n    protected stopMouseOutTimer(): void {\r\n        if (this.state.mouseOutTimer !== undefined) {\r\n            window.clearTimeout(this.state.mouseOutTimer);\r\n            this.state.mouseOutTimer = undefined;\r\n        }\r\n    }\r\n\r\n    protected startMouseOutTimer(): Promise<Action> {\r\n        this.stopMouseOutTimer();\r\n        return new Promise((resolve) => {\r\n            this.state.mouseOutTimer = window.setTimeout(() => {\r\n                this.state.popupOpen = false;\r\n                this.state.previousPopupElement = undefined;\r\n                resolve(SetPopupModelAction.create({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id }));\r\n            }, this.options.popupCloseDelay);\r\n        });\r\n    }\r\n\r\n    protected stopMouseOverTimer(): void {\r\n        if (this.state.mouseOverTimer !== undefined) {\r\n            window.clearTimeout(this.state.mouseOverTimer);\r\n            this.state.mouseOverTimer = undefined;\r\n        }\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class HoverMouseListener extends AbstractHoverMouseListener {\r\n\r\n    protected lastHoverFeedbackElementId?: string;\r\n\r\n    @inject(TYPES.ViewerOptions) protected override options: ViewerOptions;\r\n\r\n    protected computePopupBounds(target: SModelElementImpl, mousePosition: Point): Bounds {\r\n        // Default position: below the mouse cursor\r\n        let offset: Point = { x: -5, y: 20 };\r\n\r\n        const targetBounds = getAbsoluteBounds(target);\r\n        const canvasBounds = target.root.canvasBounds;\r\n        const boundsInWindow = Bounds.translate(targetBounds, canvasBounds);\r\n        const distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;\r\n        const distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;\r\n        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {\r\n            // Put the popup below the target element\r\n            offset = { x: -5, y: Math.round(distBottom + 5) };\r\n        } else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {\r\n            // Put the popup right of the target element\r\n            offset = { x: Math.round(distRight + 5), y: -5 };\r\n        }\r\n        let leftPopupPosition = mousePosition.x + offset.x;\r\n        const canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;\r\n        if (leftPopupPosition > canvasRightBorderPosition) {\r\n            leftPopupPosition = canvasRightBorderPosition;\r\n        }\r\n        let topPopupPosition = mousePosition.y + offset.y;\r\n        const canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;\r\n        if (topPopupPosition > canvasBottomBorderPosition) {\r\n            topPopupPosition = canvasBottomBorderPosition;\r\n        }\r\n        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };\r\n    }\r\n\r\n    protected allowSidePosition(target: SModelElementImpl, side: 'above' | 'below' | 'left' | 'right', distance: number): boolean {\r\n        return !(target instanceof SModelRootImpl) && distance <= 150;\r\n    }\r\n\r\n    protected startMouseOverTimer(target: SModelElementImpl, event: MouseEvent): Promise<Action> {\r\n        this.stopMouseOverTimer();\r\n        return new Promise((resolve) => {\r\n            this.state.mouseOverTimer = window.setTimeout(() => {\r\n                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });\r\n                resolve(RequestPopupModelAction.create({ elementId: target.id, bounds: popupBounds }));\r\n\r\n                this.state.popupOpen = true;\r\n                this.state.previousPopupElement = target;\r\n            }, this.options.popupOpenDelay);\r\n        });\r\n    }\r\n\r\n    override mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: (Action | Promise<Action>)[] = [];\r\n        if (!this.mouseIsDown) {\r\n            const popupTarget = findParent(target, hasPopupFeature);\r\n            if (this.state.popupOpen && (popupTarget === undefined ||\r\n                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {\r\n                result.push(this.startMouseOutTimer());\r\n            } else {\r\n                this.stopMouseOverTimer();\r\n                this.stopMouseOutTimer();\r\n            }\r\n            if (popupTarget !== undefined &&\r\n                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {\r\n                result.push(this.startMouseOverTimer(popupTarget, event));\r\n            }\r\n            if (this.lastHoverFeedbackElementId) {\r\n                result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\r\n                this.lastHoverFeedbackElementId = undefined;\r\n            }\r\n            const hoverTarget = findParentByFeature(target, isHoverable);\r\n            if (hoverTarget !== undefined) {\r\n                result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: true }));\r\n                this.lastHoverFeedbackElementId = hoverTarget.id;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: (Action | Promise<Action>)[] = [];\r\n        if (!this.mouseIsDown) {\r\n            const elementUnderMouse = this.getElementFromEventPosition(event);\r\n            if (!this.isSprottyPopup(elementUnderMouse)) {\r\n                if (this.state.popupOpen) {\r\n                    const popupTarget = findParent(target, hasPopupFeature);\r\n                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined\r\n                        && this.state.previousPopupElement.id === popupTarget.id)\r\n                        result.push(this.startMouseOutTimer());\r\n                }\r\n                this.stopMouseOverTimer();\r\n                const hoverTarget = findParentByFeature(target, isHoverable);\r\n                if (hoverTarget !== undefined) {\r\n                    result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: false }));\r\n                    if (this.lastHoverFeedbackElementId && this.lastHoverFeedbackElementId !== hoverTarget.id) {\r\n                        result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\r\n                    }\r\n                    this.lastHoverFeedbackElementId = undefined;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected getElementFromEventPosition(event: MouseEvent) {\r\n        return document.elementFromPoint(event.x, event.y);\r\n    }\r\n\r\n    protected isSprottyPopup(element: Element | null): boolean {\r\n        return element\r\n            ? (element.id === this.options.popupDiv\r\n                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))\r\n            : false;\r\n    }\r\n\r\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: (Action | Promise<Action>)[] = [];\r\n\r\n        if (!this.mouseIsDown) {\r\n            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {\r\n                result.push(this.startMouseOutTimer());\r\n            }\r\n\r\n            const popupTarget = findParent(target, hasPopupFeature);\r\n            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined\r\n                || this.state.previousPopupElement.id !== popupTarget.id)) {\r\n                result.push(this.startMouseOverTimer(popupTarget, event));\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected closeOnMouseMove(target: SModelElementImpl, event: MouseEvent): boolean {\r\n        return target instanceof SModelRootImpl;\r\n    }\r\n\r\n}\r\n\r\n@injectable()\r\nexport class PopupHoverMouseListener extends AbstractHoverMouseListener {\r\n\r\n    override mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [this.startMouseOutTimer()];\r\n    }\r\n\r\n    override mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        this.stopMouseOutTimer();\r\n        this.stopMouseOverTimer();\r\n        return [];\r\n    }\r\n}\r\n\r\nexport class HoverKeyListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'Escape')) {\r\n            return [SetPopupModelAction.create({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id })];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class ClosePopupActionHandler implements IActionHandler {\r\n    protected popupOpen: boolean = false;\r\n\r\n    handle(action: Action): void | ICommand | Action {\r\n        if (action.kind === SetPopupModelCommand.KIND) {\r\n            this.popupOpen = (action as SetPopupModelAction).newRoot.type !== EMPTY_ROOT.type;\r\n        } else if (this.popupOpen) {\r\n            return  SetPopupModelAction.create({ id: EMPTY_ROOT.id, type: EMPTY_ROOT.type });\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { SShapeElementImpl, boundsFeature } from '../bounds/model';\r\nimport { hoverFeedbackFeature, popupFeature } from '../hover/model';\r\n\r\nexport const decorationFeature = Symbol('decorationFeature');\r\n\r\n/**\r\n * Feature extension interface for {@link decorationFeature}.\r\n */\r\nexport interface Decoration {\r\n}\r\n\r\nexport function isDecoration<T extends SModelElementImpl>(e: T): e is T & Decoration {\r\n    return e.hasFeature(decorationFeature);\r\n}\r\n\r\nexport class SDecoration extends SShapeElementImpl implements Decoration {\r\n    static readonly DEFAULT_FEATURES = [decorationFeature, boundsFeature, hoverFeedbackFeature, popupFeature];\r\n}\r\n\r\nexport type SIssueSeverity = 'error' | 'warning' | 'info';\r\n\r\nexport class SIssueMarker extends SDecoration {\r\n    issues: SIssue[];\r\n}\r\n\r\nexport class SIssue {\r\n    message: string;\r\n    severity: SIssueSeverity;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx svg */\r\nimport { svg } from '../../lib/jsx';\r\n\r\nimport { VNode } from 'snabbdom';\r\nimport { IView, RenderingContext } from '../../base/views/view';\r\nimport { SIssueMarker, SIssueSeverity } from './model';\r\nimport { setClass } from '../../base/views/vnode-utils';\r\nimport { injectable } from 'inversify';\r\n\r\n@injectable()\r\nexport class IssueMarkerView implements IView {\r\n    render(marker: SIssueMarker, context: RenderingContext): VNode {\r\n        const scale = 16 / 1792;\r\n        const trafo = `scale(${scale}, ${scale})`;\r\n        const maxSeverity = this.getMaxSeverity(marker);\r\n        const group = <g class-sprotty-issue={true}>\r\n            <g transform={trafo}>\r\n                <path d={this.getPath(maxSeverity)} />\r\n            </g>\r\n        </g>;\r\n        setClass(group, 'sprotty-' + maxSeverity, true);\r\n        return group;\r\n    }\r\n\r\n    protected getMaxSeverity(marker: SIssueMarker): SIssueSeverity {\r\n        let currentSeverity: SIssueSeverity = 'info';\r\n        for (const severity of marker.issues.map(s => s.severity)) {\r\n            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))\r\n                currentSeverity = severity;\r\n        }\r\n        return currentSeverity;\r\n    }\r\n\r\n    protected getPath(severity: SIssueSeverity) {\r\n        switch (severity) {\r\n            case 'error':\r\n            case 'warning':\r\n                // eslint-disable-next-line max-len\r\n                return \"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z\";\r\n            case 'info':\r\n                // eslint-disable-next-line max-len\r\n                return \"M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\";\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\r\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\r\nimport { isDecoration, Decoration } from \"./model\";\r\nimport { setAttr } from \"../../base/views/vnode-utils\";\r\nimport { isSizeable } from \"../bounds/model\";\r\nimport { SRoutableElementImpl } from \"../routing/model\";\r\nimport { EdgeRouterRegistry } from \"../routing/routing\";\r\nimport { Point } from \"sprotty-protocol\";\r\n\r\n@injectable()\r\nexport class DecorationPlacer implements IVNodePostprocessor {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (isDecoration(element)) {\r\n            const position = this.getPosition(element);\r\n            const translate = 'translate(' + position.x + ', ' + position.y + ')';\r\n            setAttr(vnode, 'transform', translate);\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    protected getPosition(element: SModelElementImpl & Decoration): Point {\r\n        if (element instanceof SChildElementImpl && element.parent instanceof SRoutableElementImpl) {\r\n            const route =  this.edgeRouterRegistry.route(element.parent);\r\n            if (route.length > 1) {\r\n                const index = Math.floor(0.5  * (route.length - 1));\r\n                const offset = isSizeable(element)\r\n                    ? {\r\n                        x: - 0.5 * element.bounds.width,\r\n                        y: - 0.5 * element.bounds.width\r\n                    }\r\n                    : Point.ORIGIN;\r\n                return {\r\n                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,\r\n                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y\r\n                };\r\n            }\r\n        }\r\n        if (isSizeable(element))\r\n            return {\r\n                x: -0.666 * element.bounds.width,\r\n                y: -0.666 * element.bounds.height\r\n            };\r\n        return Point.ORIGIN;\r\n    }\r\n\r\n    postUpdate(): void {\r\n    }\r\n}\r\n", "\r\nexport default class TinyQueue {\r\n    constructor(data = [], compare = defaultCompare) {\r\n        this.data = data;\r\n        this.length = this.data.length;\r\n        this.compare = compare;\r\n\r\n        if (this.length > 0) {\r\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\r\n        }\r\n    }\r\n\r\n    push(item) {\r\n        this.data.push(item);\r\n        this.length++;\r\n        this._up(this.length - 1);\r\n    }\r\n\r\n    pop() {\r\n        if (this.length === 0) return undefined;\r\n\r\n        const top = this.data[0];\r\n        const bottom = this.data.pop();\r\n        this.length--;\r\n\r\n        if (this.length > 0) {\r\n            this.data[0] = bottom;\r\n            this._down(0);\r\n        }\r\n\r\n        return top;\r\n    }\r\n\r\n    peek() {\r\n        return this.data[0];\r\n    }\r\n\r\n    _up(pos) {\r\n        const {data, compare} = this;\r\n        const item = data[pos];\r\n\r\n        while (pos > 0) {\r\n            const parent = (pos - 1) >> 1;\r\n            const current = data[parent];\r\n            if (compare(item, current) >= 0) break;\r\n            data[pos] = current;\r\n            pos = parent;\r\n        }\r\n\r\n        data[pos] = item;\r\n    }\r\n\r\n    _down(pos) {\r\n        const {data, compare} = this;\r\n        const halfLength = this.length >> 1;\r\n        const item = data[pos];\r\n\r\n        while (pos < halfLength) {\r\n            let left = (pos << 1) + 1;\r\n            let best = data[left];\r\n            const right = left + 1;\r\n\r\n            if (right < this.length && compare(data[right], best) < 0) {\r\n                left = right;\r\n                best = data[right];\r\n            }\r\n            if (compare(best, item) >= 0) break;\r\n\r\n            data[pos] = best;\r\n            pos = left;\r\n        }\r\n\r\n        data[pos] = item;\r\n    }\r\n}\r\n\r\nfunction defaultCompare(a, b) {\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 Rowan Winsemius and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n// Based on the sweepline implementation at https://github.com/rowanwins/sweepline-intersections\r\n// which is published under the terms of MIT, but has been adapted to the use case of sprotty.\r\nimport TinyQueue from \"tinyqueue\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { PointToPointLine } from \"../../utils/geometry\";\r\nimport { Intersection } from \"./intersection-finder\";\r\nimport { RoutedPoint } from \"../routing/routing\";\r\n\r\n/*\r\n * The algorithm implemented in this module is loosely based on the Bentley-Ottmann algorithm for\r\n * finding intersection among line segments in `O((n+k) log n)`, whereas `n` is the number of line\r\n * segments and `k` is the number of intersections.\r\n * The underlying idea is to use a imaginary sweep line that moves over the x/y plane and testing\r\n * only the line segments for intersection that the sweepline currently crosses, instead of\r\n * testing all segment with each other, which would be `O(n^2)`.\r\n * It does so by generating a prioritized event queue for start and end events of the line segments\r\n * and working its way through the queue (i.e., sweeping).\r\n * More information can be found at https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm\r\n * In contrast to the original Bently-Ottmann algorithm, the implementation below does not use a tree\r\n * data structure to store the segments in order to simplify the implementation.\r\n * See also https://github.com/rowanwins/sweepline-intersections#algorithm-notes\r\n */\r\n\r\n/**\r\n * Add the specified `route` to the event `queue` from left to right.\r\n * @param routeId id of the route.\r\n * @param route the route as array of points.\r\n * @param queue the queue to add the route to.\r\n */\r\nexport function addRoute(routeId: string, route: RoutedPoint[], queue: TinyQueue<SweepEvent>) {\r\n    if (route.length < 1) return;\r\n    let currentPoint = route[0];\r\n    let nextPoint = undefined;\r\n    for (let i = 0; i < route.length - 1; i++) {\r\n        nextPoint = route[i + 1];\r\n\r\n        const e1 = new SweepEvent(routeId, currentPoint, i);\r\n        const e2 = new SweepEvent(routeId, nextPoint, i + 1);\r\n\r\n        e1.otherEvent = e2;\r\n        e2.otherEvent = e1;\r\n\r\n        if (checkWhichEventIsLeft(e1, e2) > 0) {\r\n            e2.isLeftEndpoint = true;\r\n            e1.isLeftEndpoint = false;\r\n        } else {\r\n            e1.isLeftEndpoint = true;\r\n            e2.isLeftEndpoint = false;\r\n        }\r\n        queue.push(e1);\r\n        queue.push(e2);\r\n\r\n        currentPoint = nextPoint;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns which of the two events is left.\r\n * This is used to classify the endpoints of a segment when generating the\r\n * event queue.\r\n */\r\nexport function checkWhichEventIsLeft(e1: SweepEvent, e2: SweepEvent): 1 | -1 {\r\n    if (e1.point.x > e2.point.x) return 1;\r\n    if (e1.point.x < e2.point.x) return -1;\r\n    if (e1.point.y !== e2.point.y) return e1.point.y > e2.point.y ? 1 : -1;\r\n    return 1;\r\n}\r\n\r\n/**\r\n * An event -- or with other words a start or end point of a segment -- in the context\r\n * of the event queue for the sweep.\r\n *\r\n * Stores the original Sprotty `edgeId` and the segment index of this segment in the edge\r\n * to keep track of which edge and segment this event originated from.\r\n */\r\nexport class SweepEvent {\r\n    otherEvent: SweepEvent;\r\n    isLeftEndpoint: boolean;\r\n    constructor(readonly edgeId: string, readonly point: Point, readonly segmentIndex: number) { }\r\n}\r\n\r\n/**\r\n * A line segment consists of a start and a stop event.\r\n */\r\nexport class Segment {\r\n    readonly leftSweepEvent: SweepEvent;\r\n    readonly rightSweepEvent: SweepEvent;\r\n    constructor(event: SweepEvent) {\r\n        this.leftSweepEvent = event;\r\n        this.rightSweepEvent = event.otherEvent;\r\n    }\r\n}\r\n\r\n/**\r\n * Performs the main sweep algorithm on the specified event queue.\r\n *\r\n * An empty priority queue is created to store segments encountered.\r\n * An item is removed from the priority queue if the vertex is the left endpoint\r\n * of a segment, we test it against every other segment in the segment queue for\r\n * intersections with any intersection recorded. We then add the vertex (and it's\r\n * associated right endpoint) to the segment queue.\r\n * If we encounter a right endpoint we remove the first item from the segment queue.\r\n *\r\n * Each pair of segments are only tested once. And only segments that overlap on the\r\n * x plane are tested against each other.\r\n *\r\n * @param eventQueue the event queue.\r\n * @returns the identified intersections.\r\n */\r\nexport function runSweep(eventQueue: TinyQueue<SweepEvent>): Intersection[] {\r\n    const intersectionPoints: Intersection[] = [];\r\n    const outQueue = new TinyQueue<Segment>([], checkWhichSegmentHasRightEndpointFirst);\r\n    while (eventQueue.length) {\r\n        const event = eventQueue.pop();\r\n        if (event?.isLeftEndpoint) {\r\n            const segment = new Segment(event);\r\n            for (let i = 0; i < outQueue.data.length; i++) {\r\n                const otherSegment = outQueue.data[i];\r\n                const intersection = intersectionOfSegments(segment, otherSegment);\r\n                if (intersection) {\r\n                    intersectionPoints.push(\r\n                        <Intersection>{\r\n                            routable1: event.edgeId,\r\n                            routable2: otherSegment.leftSweepEvent.edgeId,\r\n                            segmentIndex1: getSegmentIndex(segment),\r\n                            segmentIndex2: getSegmentIndex(otherSegment),\r\n                            intersectionPoint: intersection\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            outQueue.push(segment);\r\n        } else if (event?.isLeftEndpoint === false) {\r\n            outQueue.pop();\r\n        }\r\n    }\r\n    return intersectionPoints;\r\n}\r\n\r\n/**\r\n * Specifies which of the two specified segments has a right endpoint first.\r\n * Used as a comparator to sort the event queue.\r\n */\r\nexport function checkWhichSegmentHasRightEndpointFirst(seg1: Segment, seg2: Segment): 1 | -1 {\r\n    if (seg1.rightSweepEvent.point.x > seg2.rightSweepEvent.point.x) return 1;\r\n    if (seg1.rightSweepEvent.point.x < seg2.rightSweepEvent.point.x) return -1;\r\n    if (seg1.rightSweepEvent.point.y !== seg2.rightSweepEvent.point.y) return seg1.rightSweepEvent.point.y < seg2.rightSweepEvent.point.y ? 1 : -1;\r\n    return 1;\r\n}\r\n\r\nexport function getSegmentIndex(segment: Segment): number {\r\n    return Math.min(segment.leftSweepEvent.segmentIndex, segment.rightSweepEvent.segmentIndex);\r\n}\r\n\r\n/**\r\n * Tests whether two segments intersect and returns the intersection point if existing.\r\n */\r\nexport function intersectionOfSegments(seg1: Segment, seg2: Segment): Point | undefined {\r\n    if (seg1.leftSweepEvent.edgeId === seg2.leftSweepEvent.edgeId) {\r\n        return undefined;\r\n    }\r\n    const seg1Line = new PointToPointLine(seg1.leftSweepEvent.point, seg1.rightSweepEvent.point);\r\n    const seg2Line = new PointToPointLine(seg2.leftSweepEvent.point, seg2.rightSweepEvent.point);\r\n    return seg1Line.intersection(seg2Line);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2021-2022 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport TinyQueue from \"tinyqueue\";\r\nimport { EdgeRouting, IEdgeRoutePostprocessor, RoutedPoint } from \"../routing/routing\";\r\nimport { addRoute, checkWhichEventIsLeft, runSweep, SweepEvent } from \"./sweepline\";\r\n\r\nexport interface Intersection {\r\n    readonly routable1: string;\r\n    readonly segmentIndex1: number;\r\n    readonly routable2: string;\r\n    readonly segmentIndex2: number;\r\n    readonly intersectionPoint: Point;\r\n}\r\n\r\nexport interface IntersectingRoutedPoint extends RoutedPoint {\r\n    intersections: Intersection[];\r\n}\r\n\r\nexport function isIntersectingRoutedPoint(routedPoint: Point): routedPoint is IntersectingRoutedPoint {\r\n    return routedPoint !== undefined && 'intersections' in routedPoint && 'kind' in routedPoint;\r\n}\r\n\r\nexport const BY_X_THEN_Y = (a: Intersection, b: Intersection): number => {\r\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\r\n        return a.intersectionPoint.y - b.intersectionPoint.y;\r\n    }\r\n    return a.intersectionPoint.x - b.intersectionPoint.x;\r\n};\r\n\r\nexport const BY_DESCENDING_X_THEN_Y = (a: Intersection, b: Intersection): number => {\r\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\r\n        return a.intersectionPoint.y - b.intersectionPoint.y;\r\n    }\r\n    return b.intersectionPoint.x - a.intersectionPoint.x;\r\n};\r\n\r\nexport const BY_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\r\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\r\n        return b.intersectionPoint.y - a.intersectionPoint.y;\r\n    }\r\n    return a.intersectionPoint.x - b.intersectionPoint.x;\r\n};\r\n\r\nexport const BY_DESCENDING_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\r\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\r\n        return b.intersectionPoint.y - a.intersectionPoint.y;\r\n    }\r\n    return b.intersectionPoint.x - a.intersectionPoint.x;\r\n};\r\n\r\n/**\r\n * Finds intersections among edges and updates routed points to reflect those intersections.\r\n *\r\n * This only yields correct intersections among straight line segments and doesn't work with bezier curves.\r\n */\r\n@injectable()\r\nexport class IntersectionFinder implements IEdgeRoutePostprocessor {\r\n\r\n    /**\r\n     * Finds all intersections in the specified `routing` and replaces the `RoutedPoints` that are\r\n     * intersecting by adding intersection information to routing points (@see `IntersectingRoutedPoints`).\r\n     * @param routing the edge routing to find intersections for and update.\r\n     */\r\n    apply(routing: EdgeRouting) {\r\n        const intersections = this.find(routing);\r\n        this.addToRouting(intersections, routing);\r\n    }\r\n\r\n    /**\r\n     * Finds the intersections in the specified `routing` and returns them.\r\n     * @param routing the edge routing to find intersections for and update.\r\n     * @returns the identified intersections.\r\n     */\r\n    find(routing: EdgeRouting): Intersection[] {\r\n        const eventQueue = new TinyQueue<SweepEvent>(undefined, checkWhichEventIsLeft);\r\n        routing.routes.forEach((route, routeId) => {\r\n            if (this.isSupportedRoute(route)) {\r\n                addRoute(routeId, route, eventQueue);\r\n            }\r\n        });\r\n        return runSweep(eventQueue);\r\n    }\r\n\r\n    /**\r\n     * Specifies whether or not a specific route should be included in this intersection search or not.\r\n     *\r\n     * As this intersection finder only supports linear line segments, this method only returns `true`\r\n     * for routes that only contain routed points, which are either 'source', 'target' or 'linear'.\r\n     */\r\n    protected isSupportedRoute(route: RoutedPoint[]): boolean {\r\n        return route.find(point => point.kind !== 'source' && point.kind !== 'target' && point.kind !== 'linear') === undefined;\r\n    }\r\n\r\n    protected addToRouting(intersections: Intersection[], routing: EdgeRouting) {\r\n        for (const intersection of intersections) {\r\n            const routable1 = routing.get(intersection.routable1);\r\n            const routable2 = routing.get(intersection.routable2);\r\n            this.addIntersectionToRoutedPoint(intersection, routable1, intersection.segmentIndex1);\r\n            this.addIntersectionToRoutedPoint(intersection, routable2, intersection.segmentIndex2);\r\n        }\r\n    }\r\n\r\n    private addIntersectionToRoutedPoint(intersection: Intersection, routedPoint: RoutedPoint[] | undefined, segmentIndex: number) {\r\n        if (routedPoint && routedPoint.length > segmentIndex) {\r\n            const segment = routedPoint[segmentIndex + 1];\r\n            if (isIntersectingRoutedPoint(segment)) {\r\n                segment.intersections.push(intersection);\r\n            } else {\r\n                const intersectingRoutedPoint = { ...segment, intersections: [intersection] };\r\n                routedPoint[segmentIndex + 1] = intersectingRoutedPoint;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { Action, DeleteElementAction, ReconnectAction, SelectAction, SelectAllAction, MoveAction } from 'sprotty-protocol/lib/actions';\r\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\r\nimport { CommandExecutionContext, ICommand, MergeableCommand, CommandReturn } from '../../base/commands/command';\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { findParentByFeature, translatePoint } from '../../base/model/smodel-utils';\r\nimport { TYPES } from '../../base/types';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\r\nimport { setAttr } from '../../base/views/vnode-utils';\r\nimport { SEdgeImpl } from '../../graph/sgraph';\r\nimport { CommitModelAction } from '../../model-source/commit-model';\r\nimport { findChildrenAtPosition, isAlignable } from '../bounds/model';\r\nimport { CreatingOnDrag, isCreatingOnDrag } from '../edit/create-on-drag';\r\nimport { SwitchEditModeAction } from '../edit/edit-routing';\r\nimport { ReconnectCommand } from '../edit/reconnect';\r\nimport { edgeInProgressID, edgeInProgressTargetHandleID, isConnectable, SRoutableElementImpl, SRoutingHandleImpl } from '../routing/model';\r\nimport { EdgeMemento, EdgeRouterRegistry, EdgeSnapshot, RoutedPoint } from '../routing/routing';\r\nimport { isEdgeLayoutable } from '../edge-layout/model';\r\nimport { isSelectable } from '../select/model';\r\nimport { isViewport } from '../viewport/model';\r\nimport { isLocateable, isMoveable, Locateable } from './model';\r\nimport { ISnapper } from './snap';\r\n\r\nexport interface ElementMove {\r\n    elementId: string\r\n    elementType?: string\r\n    fromPosition?: Point\r\n    toPosition: Point\r\n}\r\n\r\nexport interface ResolvedElementMove {\r\n    element: SModelElementImpl & Locateable\r\n    fromPosition: Point\r\n    toPosition: Point\r\n}\r\n\r\nexport interface ResolvedHandleMove {\r\n    handle: SRoutingHandleImpl\r\n    fromPosition: Point\r\n    toPosition: Point\r\n}\r\n\r\n@injectable()\r\nexport class MoveCommand extends MergeableCommand {\r\n    static readonly KIND = MoveAction.KIND;\r\n\r\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\r\n\r\n    protected resolvedMoves: Map<string, ResolvedElementMove> = new Map;\r\n    protected edgeMementi: EdgeMemento[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: MoveAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const index = context.root.index;\r\n        const edge2handleMoves = new Map<SRoutableElementImpl, ResolvedHandleMove[]>();\r\n        const attachedEdgeShifts = new Map<SRoutableElementImpl, Point>();\r\n        this.action.moves.forEach(move => {\r\n            const element = index.getById(move.elementId);\r\n            if (element instanceof SRoutingHandleImpl && this.edgeRouterRegistry) {\r\n                const edge = element.parent;\r\n                if (edge instanceof SRoutableElementImpl) {\r\n                    const resolvedMove = this.resolveHandleMove(element, edge, move);\r\n                    if (resolvedMove) {\r\n                        let movesByEdge = edge2handleMoves.get(edge);\r\n                        if (!movesByEdge) {\r\n                            movesByEdge = [];\r\n                            edge2handleMoves.set(edge, movesByEdge);\r\n                        }\r\n                        movesByEdge.push(resolvedMove);\r\n                    }\r\n                }\r\n            } else if (element && isLocateable(element)) {\r\n                const resolvedMove = this.resolveElementMove(element, move);\r\n                if (resolvedMove) {\r\n                    this.resolvedMoves.set(resolvedMove.element.id, resolvedMove);\r\n                    if (this.edgeRouterRegistry) {\r\n                        index.getAttachedElements(element).forEach(edge => {\r\n                            if (edge instanceof SRoutableElementImpl) {\r\n                                const existingDelta = attachedEdgeShifts.get(edge);\r\n                                const newDelta = Point.subtract(resolvedMove.toPosition, resolvedMove.fromPosition);\r\n                                const delta = (existingDelta)\r\n                                    ? Point.linear(existingDelta, newDelta, 0.5)\r\n                                    : newDelta;\r\n                                attachedEdgeShifts.set(edge, delta);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.doMove(edge2handleMoves, attachedEdgeShifts);\r\n        if (this.action.animate) {\r\n            this.undoMove();\r\n            return new CompoundAnimation(context.root, context, [\r\n                new MoveAnimation(context.root, this.resolvedMoves, context, false),\r\n                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\r\n            ]).start();\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    protected resolveHandleMove(handle: SRoutingHandleImpl, edge: SRoutableElementImpl, move: ElementMove): ResolvedHandleMove | undefined {\r\n        let fromPosition = move.fromPosition;\r\n        if (!fromPosition) {\r\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\r\n            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);\r\n        }\r\n        if (fromPosition)\r\n            return {\r\n                handle,\r\n                fromPosition,\r\n                toPosition: move.toPosition\r\n            };\r\n        return undefined;\r\n    }\r\n\r\n    protected resolveElementMove(element: SModelElementImpl & Locateable, move: ElementMove): ResolvedElementMove | undefined {\r\n        const fromPosition = move.fromPosition\r\n            || { x: element.position.x, y: element.position.y };\r\n        return {\r\n            element,\r\n            fromPosition,\r\n            toPosition: move.toPosition\r\n        };\r\n    }\r\n\r\n    protected doMove(edge2move: Map<SRoutableElementImpl, ResolvedHandleMove[]>, attachedEdgeShifts: Map<SRoutableElementImpl, Point>) {\r\n        this.resolvedMoves.forEach(res => {\r\n            res.element.position = res.toPosition;\r\n        });\r\n        // reset edges to state before\r\n        edge2move.forEach((moves, edge) => {\r\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\r\n            const before = router.takeSnapshot(edge);\r\n            router.applyHandleMoves(edge, moves);\r\n            const after = router.takeSnapshot(edge);\r\n            this.edgeMementi.push({ edge, before, after });\r\n        });\r\n        attachedEdgeShifts.forEach((delta, edge) => {\r\n            if (!edge2move.get(edge)) {\r\n                const router = this.edgeRouterRegistry!.get(edge.routerKind);\r\n                const before = router.takeSnapshot(edge);\r\n                if (edge.source\r\n                    && edge.target\r\n                    && this.resolvedMoves.get(edge.source.id)\r\n                    && this.resolvedMoves.get(edge.target.id)) {\r\n                    // move the entire edge when both source and target are moved\r\n                    edge.routingPoints = edge.routingPoints.map(rp => Point.add(rp, delta));\r\n                } else {\r\n                    // add/remove RPs according to the new source/target positions\r\n                    const updateHandles = isSelectable(edge) && edge.selected;\r\n                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, this.action.finished);\r\n                }\r\n                const after = router.takeSnapshot(edge);\r\n                this.edgeMementi.push({ edge, before, after });\r\n            }\r\n        });\r\n    }\r\n\r\n    protected undoMove() {\r\n        this.resolvedMoves.forEach(res => {\r\n            (res.element as any).position = res.fromPosition;\r\n        });\r\n        this.edgeMementi.forEach(memento => {\r\n            const router = this.edgeRouterRegistry!.get(memento.edge.routerKind);\r\n            router.applySnapshot(memento.edge, memento.before);\r\n        });\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): Promise<SModelRootImpl> {\r\n        return new CompoundAnimation(context.root, context, [\r\n            new MoveAnimation(context.root, this.resolvedMoves, context, true),\r\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)\r\n        ]).start();\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): Promise<SModelRootImpl> {\r\n        return new CompoundAnimation(context.root, context, [\r\n            new MoveAnimation(context.root, this.resolvedMoves, context, false),\r\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\r\n        ]).start();\r\n    }\r\n\r\n    override merge(other: ICommand, context: CommandExecutionContext) {\r\n        if (!this.action.animate && other instanceof MoveCommand) {\r\n            other.resolvedMoves.forEach(\r\n                (otherMove, otherElementId) => {\r\n                    const existingMove = this.resolvedMoves.get(otherElementId);\r\n                    if (existingMove) {\r\n                        existingMove.toPosition = otherMove.toPosition;\r\n                    } else {\r\n                        this.resolvedMoves.set(otherElementId, otherMove);\r\n                    }\r\n                }\r\n            );\r\n            other.edgeMementi.forEach(otherMemento => {\r\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\r\n                if (existingMemento) {\r\n                    existingMemento.after = otherMemento.after;\r\n                } else {\r\n                    this.edgeMementi.push(otherMemento);\r\n                }\r\n            });\r\n            return true;\r\n        } else if (other instanceof ReconnectCommand) {\r\n            const otherMemento = other.memento;\r\n            if (otherMemento) {\r\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\r\n                if (existingMemento) {\r\n                    existingMemento.after = otherMemento.after;\r\n                } else {\r\n                    this.edgeMementi.push(otherMemento);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class MoveAnimation extends Animation {\r\n\r\n    constructor(protected model: SModelRootImpl,\r\n                public elementMoves: Map<string, ResolvedElementMove>,\r\n                context: CommandExecutionContext,\r\n                protected reverse: boolean = false) {\r\n        super(context);\r\n    }\r\n\r\n    tween(t: number) {\r\n        this.elementMoves.forEach((elementMove) => {\r\n            if (this.reverse) {\r\n                elementMove.element.position = {\r\n                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,\r\n                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y\r\n                };\r\n            } else {\r\n                elementMove.element.position = {\r\n                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,\r\n                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y\r\n                };\r\n            }\r\n        });\r\n        return this.model;\r\n    }\r\n}\r\n\r\ninterface ExpandedEdgeMorph {\r\n    startExpandedRoute: Point[],\r\n    endExpandedRoute: Point[],\r\n    memento: EdgeMemento\r\n}\r\n\r\nexport class MorphEdgesAnimation extends Animation {\r\n\r\n    protected expanded: ExpandedEdgeMorph[] = [];\r\n\r\n    constructor(protected model: SModelRootImpl,\r\n                originalMementi: EdgeMemento[],\r\n                context: CommandExecutionContext,\r\n                protected reverse: boolean = false) {\r\n        super(context);\r\n        originalMementi.forEach(edgeMemento => {\r\n            const start = this.reverse ? edgeMemento.after : edgeMemento.before;\r\n            const end = this.reverse ? edgeMemento.before : edgeMemento.after;\r\n            const startRoute = start.routedPoints;\r\n            const endRoute = end.routedPoints;\r\n            const maxRoutingPoints = Math.max(startRoute.length, endRoute.length);\r\n            this.expanded.push({\r\n                startExpandedRoute: this.growToSize(startRoute, maxRoutingPoints),\r\n                endExpandedRoute: this.growToSize(endRoute, maxRoutingPoints),\r\n                memento: edgeMemento\r\n            });\r\n        });\r\n    }\r\n\r\n    protected midPoint(edgeMemento: EdgeMemento): Point {\r\n        const edge = edgeMemento.edge;\r\n        const source = edgeMemento.edge.source!;\r\n        const target = edgeMemento.edge.target!;\r\n        return Point.linear(\r\n            translatePoint(Bounds.center(source.bounds), source.parent, edge.parent),\r\n            translatePoint(Bounds.center(target.bounds), target.parent, edge.parent),\r\n            0.5);\r\n    }\r\n\r\n    override start() {\r\n        this.expanded.forEach(morph => {\r\n            morph.memento.edge.removeAll(e => e instanceof SRoutingHandleImpl);\r\n        });\r\n        return super.start();\r\n    }\r\n\r\n    tween(t: number) {\r\n        if (t === 1) {\r\n            this.expanded.forEach(morph => {\r\n                const memento = morph.memento;\r\n                if (this.reverse)\r\n                    memento.before.router.applySnapshot(memento.edge, memento.before);\r\n                else\r\n                    memento.after.router.applySnapshot(memento.edge, memento.after);\r\n            });\r\n        } else {\r\n            this.expanded.forEach(morph => {\r\n                const newRoutingPoints: Point[] = [];\r\n                // ignore source and target anchor\r\n                for (let i = 1; i < morph.startExpandedRoute.length - 1; ++i)\r\n                    newRoutingPoints.push(Point.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));\r\n\r\n                const closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;\r\n                const newSnapshot: EdgeSnapshot = {\r\n                    ...closestSnapshot,\r\n                    routingPoints: newRoutingPoints,\r\n                    routingHandles: []\r\n                };\r\n                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);\r\n            });\r\n        }\r\n        return this.model;\r\n    }\r\n\r\n    protected growToSize(route: RoutedPoint[], targetSize: number): Point[] {\r\n        const diff = targetSize - route.length;\r\n        if (diff <= 0)\r\n            return route;\r\n        const result: Point[] = [];\r\n        result.push(route[0]);\r\n        const deltaDiff = 1 / (diff + 1);\r\n        const deltaSmaller = 1 / (route.length - 1);\r\n        let nextInsertion = 1;\r\n        for (let i = 1; i < route.length; ++i) {\r\n            const pos = deltaSmaller * i;\r\n            let insertions = 0;\r\n            while (pos > (nextInsertion + insertions) * deltaDiff)\r\n                ++insertions;\r\n            nextInsertion += insertions;\r\n            for (let j = 0; j < insertions; ++j) {\r\n                const p = Point.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));\r\n                result.push(p);\r\n            }\r\n            result.push(route[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport class MoveMouseListener extends MouseListener {\r\n\r\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\r\n    @inject(TYPES.ISnapper) @optional() snapper?: ISnapper;\r\n\r\n    hasDragged = false;\r\n    startDragPosition: Point | undefined;\r\n    elementId2startPos = new Map<string, Point>();\r\n\r\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        if (event.button === 0) {\r\n            const moveable = findParentByFeature(target, isMoveable);\r\n            const isRoutingHandle = target instanceof SRoutingHandleImpl;\r\n            if (moveable !== undefined || isRoutingHandle || isCreatingOnDrag(target)) {\r\n                this.startDragPosition = { x: event.pageX, y: event.pageY };\r\n            } else {\r\n                this.startDragPosition = undefined;\r\n            }\r\n            this.hasDragged = false;\r\n            if (isCreatingOnDrag(target)) {\r\n                return this.startCreatingOnDrag(target, event);\r\n            } else if (isRoutingHandle) {\r\n                return this.activateRoutingHandle(target, event);\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    protected startCreatingOnDrag(target: CreatingOnDrag, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: Action[] = [];\r\n        result.push(SelectAllAction.create({ select: false }));\r\n        result.push(target.createAction(edgeInProgressID));\r\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressID] }));\r\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressID] }));\r\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressTargetHandleID] }));\r\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressTargetHandleID] }));\r\n        return result;\r\n    }\r\n\r\n    protected activateRoutingHandle(target: SRoutingHandleImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        return [SwitchEditModeAction.create({ elementsToActivate: [target.id] })];\r\n    }\r\n\r\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        const result: Action[] = [];\r\n        if (event.buttons === 0)\r\n            this.mouseUp(target, event);\r\n        else if (this.startDragPosition) {\r\n            if (this.elementId2startPos.size === 0) {\r\n                this.collectStartPositions(target.root);\r\n            }\r\n            this.hasDragged = true;\r\n            const moveAction = this.getElementMoves(target, event, false);\r\n            if (moveAction)\r\n                result.push(moveAction);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected collectStartPositions(root: SModelRootImpl) {\r\n        const selectedElements = new Set<SModelElementImpl>(root.index.all()\r\n            .filter(element => isSelectable(element) && element.selected));\r\n\r\n        selectedElements.forEach(element => {\r\n            if (!this.isChildOfSelected(selectedElements, element)) {\r\n                if (isMoveable(element))\r\n                    this.elementId2startPos.set(element.id, element.position);\r\n                else if (element instanceof SRoutingHandleImpl) {\r\n                    const position = this.getHandlePosition(element);\r\n                    if (position)\r\n                        this.elementId2startPos.set(element.id, position);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    protected isChildOfSelected(selectedElements: Set<SModelElementImpl>, element: SModelElementImpl): boolean {\r\n        while (element instanceof SChildElementImpl) {\r\n            element = element.parent;\r\n            if (isMoveable(element) && selectedElements.has(element)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected getElementMoves(target: SModelElementImpl, event: MouseEvent, isFinished: boolean): MoveAction | undefined {\r\n        if (!this.startDragPosition)\r\n            return undefined;\r\n        const elementMoves: ElementMove[] = [];\r\n        const viewport = findParentByFeature(target, isViewport);\r\n        const zoom = viewport ? viewport.zoom : 1;\r\n        const delta = {\r\n            x: (event.pageX - this.startDragPosition.x) / zoom,\r\n            y: (event.pageY - this.startDragPosition.y) / zoom\r\n        };\r\n        this.elementId2startPos.forEach((startPosition, elementId) => {\r\n            const element = target.root.index.getById(elementId);\r\n            if (element) {\r\n                const move = this.createElementMove(element, startPosition, delta, event);\r\n                if (move) {\r\n                    elementMoves.push(move);\r\n                }\r\n            }\r\n        });\r\n        if (elementMoves.length > 0)\r\n            return MoveAction.create(elementMoves, { animate: false, finished: isFinished });\r\n        else\r\n            return undefined;\r\n    }\r\n\r\n    protected createElementMove(element: SModelElementImpl, startPosition: Point, delta: Point, event: MouseEvent): ElementMove | undefined {\r\n        const toPosition = this.snap({\r\n            x: startPosition.x + delta.x,\r\n            y: startPosition.y + delta.y\r\n        }, element, !event.shiftKey);\r\n        if (isMoveable(element)) {\r\n            return {\r\n                elementId: element.id,\r\n                elementType: element.type,\r\n                fromPosition: {\r\n                    x: element.position.x,\r\n                    y: element.position.y\r\n                },\r\n                toPosition\r\n            };\r\n        } else if (element instanceof SRoutingHandleImpl) {\r\n            const point = this.getHandlePosition(element);\r\n            if (point !== undefined) {\r\n                return {\r\n                    elementId: element.id,\r\n                    elementType: element.type,\r\n                    fromPosition: point,\r\n                    toPosition\r\n                };\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected snap(position: Point, element: SModelElementImpl, isSnap: boolean): Point {\r\n        if (isSnap && this.snapper)\r\n            return this.snapper.snap(position, element);\r\n        else\r\n            return position;\r\n    }\r\n\r\n    protected getHandlePosition(handle: SRoutingHandleImpl): Point | undefined {\r\n        if (this.edgeRouterRegistry) {\r\n            const parent = handle.parent;\r\n            if (!(parent instanceof SRoutableElementImpl))\r\n                return undefined;\r\n            const router = this.edgeRouterRegistry.get(parent.routerKind);\r\n            const route = router.route(parent);\r\n            return router.getHandlePosition(parent, route, handle);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    override mouseEnter(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        if (target instanceof SModelRootImpl && event.buttons === 0 && !this.startDragPosition)\r\n            this.mouseUp(target, event);\r\n        return [];\r\n    }\r\n\r\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: Action[] = [];\r\n        if (this.startDragPosition) {\r\n            const moveAction = this.getElementMoves(target, event, true);\r\n            if (moveAction) {\r\n                result.push(moveAction);\r\n            }\r\n            target.root.index.all().forEach(element => {\r\n                if (element instanceof SRoutingHandleImpl) {\r\n                    result.push(...this.deactivateRoutingHandle(element, target, event));\r\n                }\r\n            });\r\n        }\r\n        if (!result.some(a => a.kind === ReconnectAction.KIND)) {\r\n            const edgeInProgress = target.root.index.getById(edgeInProgressID);\r\n            if (edgeInProgress instanceof SChildElementImpl) {\r\n                result.push(this.deleteEdgeInProgress(edgeInProgress));\r\n            }\r\n        }\r\n        if (this.hasDragged) {\r\n            result.push(CommitModelAction.create());\r\n        }\r\n        this.hasDragged = false;\r\n        this.startDragPosition = undefined;\r\n        this.elementId2startPos.clear();\r\n        return result;\r\n    }\r\n\r\n    protected deactivateRoutingHandle(element: SRoutingHandleImpl, target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        const result: Action[] = [];\r\n        const parent = element.parent;\r\n        if (parent instanceof SRoutableElementImpl && element.danglingAnchor) {\r\n            const handlePos = this.getHandlePosition(element);\r\n            if (handlePos) {\r\n                const handlePosAbs = translatePoint(handlePos, element.parent, element.root);\r\n                const newEnd = findChildrenAtPosition(target.root, handlePosAbs)\r\n                    .find(e => isConnectable(e) && e.canConnect(parent, element.kind as ('source' | 'target')));\r\n                if (newEnd && this.hasDragged) {\r\n                    result.push(ReconnectAction.create({\r\n                        routableId: element.parent.id,\r\n                        newSourceId: element.kind === 'source' ? newEnd.id : parent.sourceId,\r\n                        newTargetId: element.kind === 'target' ? newEnd.id : parent.targetId\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (element.editMode) {\r\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [element.id] }));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected deleteEdgeInProgress(edgeInProgress: SChildElementImpl): Action {\r\n        const deleteIds: string[] = [];\r\n        deleteIds.push(edgeInProgressID);\r\n        edgeInProgress.children.forEach(c => {\r\n            if (c instanceof SRoutingHandleImpl && c.danglingAnchor)\r\n                deleteIds.push(c.danglingAnchor.id);\r\n        });\r\n        return DeleteElementAction.create(deleteIds);\r\n    }\r\n\r\n    override decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        return vnode;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class LocationPostprocessor implements IVNodePostprocessor {\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdgeImpl) {\r\n            // The element is handled by EdgeLayoutDecorator\r\n            return vnode;\r\n        }\r\n        let translate: string = '';\r\n        if (isLocateable(element) && element instanceof SChildElementImpl && element.parent !== undefined) {\r\n            const pos = element.position;\r\n            if (pos.x !== 0 || pos.y !== 0) {\r\n                translate = 'translate(' + pos.x + ', ' + pos.y + ')';\r\n            }\r\n        }\r\n        if (isAlignable(element)) {\r\n            const ali = element.alignment;\r\n            if (ali.x !== 0 || ali.y !== 0) {\r\n                if (translate.length > 0) {\r\n                    translate += ' ';\r\n                }\r\n                translate += 'translate(' + ali.x + ', ' + ali.y + ')';\r\n            }\r\n        }\r\n        if (translate.length > 0) {\r\n            setAttr(vnode, 'transform', translate);\r\n        }\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from \"inversify\";\r\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SModelElementImpl } from \"../../base/model/smodel\";\r\nimport { isBoundsAware } from \"../bounds/model\";\r\n\r\n/**\r\n * A snapper helps to align nodes and routing handles.\r\n */\r\nexport interface ISnapper {\r\n    /**\r\n     * @retruns the closest snapped position that for the `element` located at `position`\r\n     */\r\n    snap(position: Point, element: SModelElementImpl): Point\r\n}\r\n\r\n/**\r\n * A simple snapper that snaps the center of nodes and routing points to a grid.\r\n */\r\n@injectable()\r\nexport class CenterGridSnapper implements ISnapper {\r\n\r\n    get gridX() {\r\n        return 10;\r\n    }\r\n\r\n    get gridY() {\r\n        return 10;\r\n    }\r\n\r\n    snap(position: Point, element: SModelElementImpl): Point {\r\n        if (element && isBoundsAware(element))\r\n            return {\r\n                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,\r\n                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height\r\n            };\r\n        else\r\n            return {\r\n                x: Math.round(position.x / this.gridX) * this.gridX,\r\n                y: Math.round(position.y / this.gridY) * this.gridY\r\n            };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\n\r\nexport const openFeature = Symbol('openFeature');\r\n\r\nexport function isOpenable(element: SModelElementImpl): element is SModelElementImpl  {\r\n    return element.hasFeature(openFeature);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Action, OpenAction } from 'sprotty-protocol/lib/actions';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { isOpenable } from './model';\r\n\r\n\r\nexport class OpenMouseListener extends MouseListener {\r\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const openableTarget = findParentByFeature(target, isOpenable);\r\n        if (openableTarget !== undefined) {\r\n            return [ OpenAction.create(openableTarget.id) ];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { Bounds, Dimension } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\r\nimport { SChildElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { transformToRootBounds } from '../../base/model/smodel-utils';\r\nimport { isBoundsAware } from '../bounds/model';\r\n\r\n/**\r\n * Model elements implementing this interface can be displayed on a projection bar.\r\n * _Note:_ If set, the projectedBounds property will be prefered over the model element bounds.\r\n * Otherwise model elements also have to be `BoundsAware` so their projections can be shown.\r\n */\r\nexport interface Projectable {\r\n    projectionCssClasses: string[],\r\n    projectedBounds?: Bounds,\r\n}\r\n\r\nexport function isProjectable(arg: unknown): arg is Projectable {\r\n    return hasOwnProperty(arg, 'projectionCssClasses');\r\n}\r\n\r\n/**\r\n * A projection can be shown in a horizontal or vertical bar to display an overview of the diagram.\r\n */\r\nexport interface ViewProjection {\r\n    elementId: string;\r\n    projectedBounds: Bounds;\r\n    cssClasses: string[];\r\n}\r\n\r\n/**\r\n * Gather all projections of elements contained in the given parent element.\r\n */\r\nexport function getProjections(parent: Readonly<SParentElementImpl>): ViewProjection[] | undefined {\r\n    let result: ViewProjection[] | undefined;\r\n    for (const child of parent.children) {\r\n        if (isProjectable(child) && child.projectionCssClasses.length > 0) {\r\n            const projectedBounds = getProjectedBounds(child);\r\n            if (projectedBounds) {\r\n                const projection: ViewProjection = {\r\n                    elementId: child.id,\r\n                    projectedBounds,\r\n                    cssClasses: child.projectionCssClasses\r\n                };\r\n                if (result) {\r\n                    result.push(projection);\r\n                } else {\r\n                    result = [projection];\r\n                }\r\n            }\r\n        }\r\n        if (child.children.length > 0) {\r\n            const childProj = getProjections(child);\r\n            if (childProj) {\r\n                if (result) {\r\n                    result.push(...childProj);\r\n                } else {\r\n                    result = childProj;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Compute the projected bounds of the given model element, that is the absolute position in the diagram.\r\n */\r\nexport function getProjectedBounds(model: Readonly<SChildElementImpl & Projectable>): Bounds | undefined {\r\n    const parent = model.parent;\r\n    if (model.projectedBounds) {\r\n        let bounds = model.projectedBounds;\r\n        if (isBoundsAware(parent)) {\r\n            bounds = transformToRootBounds(parent, bounds);\r\n        }\r\n        return bounds;\r\n    } else if (isBoundsAware(model)) {\r\n        let bounds = model.bounds;\r\n        bounds = transformToRootBounds(parent, bounds);\r\n        return bounds;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nconst MAX_COORD = 1_000_000_000;\r\n\r\n/**\r\n * Determine the total bounds of a model; this takes the viewport into consideration\r\n * so it can be shown in the projections.\r\n */\r\nexport function getModelBounds(model: SModelRootImpl & Viewport): Bounds | undefined {\r\n    let minX = MAX_COORD;\r\n    let minY = MAX_COORD;\r\n    let maxX = -MAX_COORD;\r\n    let maxY = -MAX_COORD;\r\n\r\n    const bounds = isBoundsAware(model) ? model.bounds : undefined;\r\n    if (bounds && Dimension.isValid(bounds)) {\r\n        // Get the bounds directly from the model if it returns a valid size\r\n        minX = bounds.x;\r\n        minY = bounds.y;\r\n        maxX = minX + bounds.width;\r\n        maxY = minY + bounds.height;\r\n    } else {\r\n        // Determine the min. / max coordinates of top-level model elements\r\n        // Note that this approach is slower, so provide valid bounds to speed up the process.\r\n        for (const element of model.children) {\r\n            if (isBoundsAware(element)) {\r\n                const b = element.bounds;\r\n                minX = Math.min(minX, b.x);\r\n                minY = Math.min(minY, b.y);\r\n                maxX = Math.max(maxX, b.x + b.width);\r\n                maxY = Math.max(maxY, b.y + b.height);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Enlarge the bounds by the current viewport to ensure it always fits into the projection\r\n    minX = Math.min(minX, model.scroll.x);\r\n    minY = Math.min(minY, model.scroll.y);\r\n    maxX = Math.max(maxX, model.scroll.x + model.canvasBounds.width / model.zoom);\r\n    maxY = Math.max(maxY, model.scroll.y + model.canvasBounds.height / model.zoom);\r\n\r\n    if (minX < maxX && minY < maxY) {\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx html */\r\nimport { html } from '../../lib/jsx';\r\n\r\nimport { injectable } from 'inversify';\r\nimport { VNode, VNodeStyle, h } from 'snabbdom';\r\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { IView, IViewArgs, RenderingContext } from '../../base/views/view';\r\nimport { setAttr, setClass } from '../../base/views/vnode-utils';\r\nimport { ViewportRootElementImpl } from '../viewport/viewport-root';\r\nimport { getModelBounds, getProjections, ViewProjection } from './model';\r\n\r\n/**\r\n * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.\r\n */\r\n@injectable()\r\nexport class ProjectedViewportView implements IView {\r\n\r\n    render(model: Readonly<ViewportRootElementImpl>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const rootNode: VNode = <div class-sprotty-root={true}>\r\n            {this.renderSvg(model, context, args)}\r\n            {this.renderProjections(model, context, args)}\r\n        </div>;\r\n        setAttr(rootNode, 'tabindex', 0); // make root div focus-able\r\n        return rootNode;\r\n    }\r\n\r\n    protected renderSvg(model: Readonly<ViewportRootElementImpl>, context: RenderingContext, args?: IViewArgs): VNode {\r\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\r\n        const ns = 'http://www.w3.org/2000/svg';\r\n        return h('svg', { ns }, h('g', { ns, attrs: { transform } }, context.renderChildren(model)));\r\n    }\r\n\r\n    protected renderProjections(model: Readonly<ViewportRootElementImpl>, context: RenderingContext, args?: IViewArgs): VNode[] {\r\n        if (model.zoom <= 0) {\r\n            return [];\r\n        }\r\n        const modelBounds = getModelBounds(model);\r\n        if (!modelBounds) {\r\n            return [];\r\n        }\r\n        const projections = getProjections(model) ?? [];\r\n        return [\r\n            this.renderProjectionBar(projections, model, modelBounds, 'vertical'),\r\n            this.renderProjectionBar(projections, model, modelBounds, 'horizontal')\r\n        ];\r\n    }\r\n\r\n    protected renderProjectionBar(projections: ViewProjection[], model: Readonly<ViewportRootElementImpl>, modelBounds: Bounds, orientation: 'horizontal' | 'vertical'): VNode {\r\n        const params: ProjectionParams = { modelBounds, orientation } as ProjectionParams;\r\n        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas, i.e. they are drawn as overlay above the canvas.\r\n        params.factor = orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;\r\n        params.zoomedFactor = params.factor / model.zoom;\r\n        return <div\r\n                class-sprotty-projection-bar={true}\r\n                class-horizontal={orientation === 'horizontal'}\r\n                class-vertical={orientation === 'vertical'} >\r\n            {this.renderViewport(model, params)}\r\n            {projections.map(p => this.renderProjection(p, model, params))}\r\n        </div>;\r\n    }\r\n\r\n    protected renderViewport(model: Readonly<ViewportRootElementImpl>, params: ProjectionParams): VNode {\r\n        let canvasSize, viewportPos: number;\r\n        if (params.orientation === 'horizontal') {\r\n            canvasSize = model.canvasBounds.width;\r\n            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;\r\n        } else {\r\n            canvasSize = model.canvasBounds.height;\r\n            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;\r\n        }\r\n        let viewportSize = canvasSize * params.zoomedFactor;\r\n        if (viewportPos < 0) {\r\n            viewportSize += viewportPos;\r\n            viewportPos = 0;\r\n        } else if (viewportPos > canvasSize) {\r\n            viewportPos = canvasSize;\r\n        }\r\n        if (viewportSize < 0) {\r\n            viewportSize = 0;\r\n        } else if (viewportPos + viewportSize > canvasSize) {\r\n            viewportSize = canvasSize - viewportPos;\r\n        }\r\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\r\n            left: `${viewportPos}px`,\r\n            width: `${viewportSize}px`\r\n        } : {\r\n            top: `${viewportPos}px`,\r\n            height: `${viewportSize}px`\r\n        };\r\n        return <div class-sprotty-viewport={true} style={style} />;\r\n    }\r\n\r\n    protected renderProjection(projection: ViewProjection, model: Readonly<ViewportRootElementImpl>, params: ProjectionParams): VNode {\r\n        let canvasSize, projPos, projSize: number;\r\n        if (params.orientation === 'horizontal') {\r\n            canvasSize = model.canvasBounds.width;\r\n            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;\r\n            projSize = projection.projectedBounds.width * params.factor;\r\n        } else {\r\n            canvasSize = model.canvasBounds.height;\r\n            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;\r\n            projSize = projection.projectedBounds.height * params.factor;\r\n        }\r\n        if (projPos < 0) {\r\n            projSize += projPos;\r\n            projPos = 0;\r\n        } else if (projPos > canvasSize) {\r\n            projPos = canvasSize;\r\n        }\r\n        if (projSize < 0) {\r\n            projSize = 0;\r\n        } else if (projPos + projSize > canvasSize) {\r\n            projSize = canvasSize - projPos;\r\n        }\r\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\r\n            left: `${projPos}px`,\r\n            width: `${projSize}px`\r\n        } : {\r\n            top: `${projPos}px`,\r\n            height: `${projSize}px`\r\n        };\r\n        const result = <div id={`${params.orientation}-projection:${projection.elementId}`} class-sprotty-projection={true} style={style} />;\r\n        projection.cssClasses.forEach(cl => setClass(result, cl, true));\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport type ProjectionParams = {\r\n    modelBounds: Bounds\r\n    orientation: 'horizontal' | 'vertical'\r\n    factor: number\r\n    zoomedFactor: number\r\n};\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { IAnchorComputer, ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\r\nimport { SConnectableElementImpl } from \"./model\";\r\nimport { PointToPointLine, Diamond, intersection } from \"../../utils/geometry\";\r\nimport { injectable } from \"inversify\";\r\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\r\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\n\r\n@injectable()\r\nexport class EllipseAnchor implements IAnchorComputer {\r\n\r\n    get kind() {\r\n        return PolylineEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\r\n        const bounds = connectable.bounds;\r\n        const c = Bounds.center(bounds);\r\n        const dx = c.x - refPoint.x;\r\n        const dy = c.y - refPoint.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const normX = (dx / distance) || 0;\r\n        const normY = (dy / distance) || 0;\r\n        return {\r\n            x: c.x - normX * (0.5 * bounds.width + offset),\r\n            y: c.y - normY * (0.5 * bounds.height + offset)\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class RectangleAnchor implements IAnchorComputer {\r\n\r\n    get kind() {\r\n        return PolylineEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\r\n        const bounds = connectable.bounds;\r\n        const c = Bounds.center(bounds);\r\n        const finder = new NearestPointFinder(c, refPoint);\r\n        if (!almostEquals(c.y, refPoint.y)) {\r\n            const xTop = this.getXIntersection(bounds.y, c, refPoint);\r\n            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)\r\n                finder.addCandidate(xTop, bounds.y - offset);\r\n            const xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);\r\n            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)\r\n                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);\r\n        }\r\n        if (!almostEquals(c.x, refPoint.x)) {\r\n            const yLeft = this.getYIntersection(bounds.x, c, refPoint);\r\n            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)\r\n                finder.addCandidate(bounds.x - offset, yLeft);\r\n            const yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);\r\n            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)\r\n                finder.addCandidate(bounds.x + bounds.width + offset, yRight);\r\n        }\r\n        return finder.best;\r\n    }\r\n\r\n    protected getXIntersection(yIntersection: number, centerPoint: Point, point: Point): number {\r\n        const t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);\r\n        return (point.x - centerPoint.x) * t + centerPoint.x;\r\n    }\r\n\r\n    protected getYIntersection(xIntersection: number, centerPoint: Point, point: Point): number {\r\n        const t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);\r\n        return (point.y - centerPoint.y) * t + centerPoint.y;\r\n    }\r\n}\r\n\r\nclass NearestPointFinder {\r\n    protected currentBest: Point | undefined;\r\n    protected currentDist: number = -1;\r\n\r\n    constructor(protected centerPoint: Point, protected refPoint: Point) {\r\n    }\r\n\r\n    addCandidate(x: number, y: number) {\r\n        const dx = this.refPoint.x - x;\r\n        const dy = this.refPoint.y - y;\r\n        const dist = dx * dx + dy * dy;\r\n        if (this.currentDist < 0 || dist < this.currentDist) {\r\n            this.currentBest = {\r\n                x: x,\r\n                y: y\r\n            };\r\n            this.currentDist = dist;\r\n        }\r\n    }\r\n\r\n    get best(): Point {\r\n        if (this.currentBest === undefined)\r\n            return this.centerPoint;\r\n        else\r\n            return this.currentBest;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class DiamondAnchor implements IAnchorComputer {\r\n\r\n    get kind() {\r\n        return PolylineEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number): Point {\r\n        const bounds = connectable.bounds;\r\n        const referenceLine = new PointToPointLine(Bounds.center(bounds), refPoint);\r\n        const closestDiamondSide = new Diamond(bounds).closestSideLine(refPoint);\r\n        const anchorPoint = intersection(closestDiamondSide, referenceLine);\r\n        return Point.shiftTowards(anchorPoint, refPoint, offset);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from 'inversify';\r\nimport { Action } from 'sprotty-protocol/lib/actions';\r\nimport { centerOfLine, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { ResolvedHandleMove } from '../move/move';\r\nimport { SDanglingAnchorImpl, SRoutableElementImpl, SRoutingHandleImpl } from './model';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { EdgeRouterRegistry, RoutedPoint } from './routing';\r\nimport { AbstractEdgeRouter, LinearRouteOptions } from './abstract-edge-router';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { TYPES } from \"../../base/types\";\r\nimport { SEdgeImpl } from '../../graph/sgraph';\r\n\r\n@injectable()\r\nexport class BezierEdgeRouter extends AbstractEdgeRouter {\r\n\r\n    static readonly KIND = 'bezier';\r\n    static readonly DEFAULT_BEZIER_HANDLE_OFFSET = 25;\r\n\r\n    get kind() {\r\n        return BezierEdgeRouter.KIND;\r\n    }\r\n\r\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\r\n        if (!edge.source || !edge.target)\r\n            return [];\r\n        const rpCount = edge.routingPoints.length;\r\n        const source = edge.source;\r\n        const target = edge.target;\r\n\r\n        const result: RoutedPoint[] = [];\r\n        result.push({ kind: 'source', x: 0, y: 0 });\r\n        if (rpCount === 0) {\r\n            // initial values\r\n            const [h1, h2] = this.createDefaultBezierHandles(source.position, target.position);\r\n            result.push( { kind: 'bezier-control-after', x: h1.x, y: h1.y, pointIndex: 0 } );\r\n            result.push( { kind: 'bezier-control-before', x: h2.x, y: h2.y, pointIndex: 1 } );\r\n            edge.routingPoints.push(h1);\r\n            edge.routingPoints.push(h2);\r\n        } else if (rpCount >= 2) {\r\n            for (let i = 0; i < rpCount; i++) {\r\n                const p = edge.routingPoints[i];\r\n                if (i % 3 === 0) {\r\n                    result.push({ kind: 'bezier-control-after', x: p.x, y: p.y, pointIndex: i });\r\n                }\r\n                if ((i + 1) % 3 === 0) {\r\n                    result.push({ kind: 'bezier-junction', x: p.x, y: p.y, pointIndex: i });\r\n                } else if ((i + 2) % 3 === 0) {\r\n                    result.push({ kind: 'bezier-control-before', x: p.x, y: p.y, pointIndex: i });\r\n                }\r\n            }\r\n        }\r\n        result.push({ kind: 'target', x: 0, y: 0 });\r\n\r\n        // use \"ends\" of edge as reference or next bezier-junction\r\n        const p0 = rpCount > 2 ? edge.routingPoints[2] : target.position;\r\n        const pn = rpCount > 2 ? edge.routingPoints[edge.routingPoints.length - 3] : source.position;\r\n\r\n        const sourceAnchor = this.getTranslatedAnchor(source, p0, target.parent, edge, edge.sourceAnchorCorrection);\r\n        const targetAnchor = this.getTranslatedAnchor(target, pn, source.parent, edge, edge.targetAnchorCorrection);\r\n\r\n        result[0] = { kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y };\r\n        result[result.length - 1] = { kind: 'target', x: targetAnchor.x, y: targetAnchor.y };\r\n\r\n        return result;\r\n    }\r\n\r\n    private createDefaultBezierHandles(relH1: Point, relH2: Point): [Point, Point] {\r\n        const h1 = {\r\n            x: relH1.x - BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\r\n            y: relH1.y\r\n        };\r\n        const h2 = {\r\n            x: relH2.x + BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\r\n            y: relH2.y\r\n        };\r\n        return [ h1, h2 ];\r\n    }\r\n\r\n    createRoutingHandles(edge: SRoutableElementImpl): void {\r\n        // route ensure there are at least 2 routed points\r\n        this.route(edge);\r\n\r\n        this.rebuildHandles(edge);\r\n    }\r\n\r\n    private rebuildHandles(edge: SRoutableElementImpl) {\r\n        this.addHandle(edge, 'source', 'routing-point', -2);\r\n        this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', 0);\r\n        this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', 0);\r\n        const rpCount = edge.routingPoints.length;\r\n\r\n        if (rpCount > 2) {\r\n            for (let i = 1; i < rpCount - 1; i += 3) {\r\n                this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', i);\r\n                // Add two circle for add/remove segments\r\n                this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', i + 1);\r\n                this.addHandle(edge, 'bezier-junction', 'routing-point', i + 1);\r\n                this.addHandle(edge, 'bezier-remove', 'bezier-remove-routing-point', i + 1);\r\n                this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', i + 2);\r\n\r\n                // re-position control-pairs\r\n                this.moveBezierControlPair(edge.routingPoints[i], i, edge);\r\n            }\r\n        }\r\n        this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', rpCount - 1);\r\n        this.addHandle(edge, 'target', 'routing-point', -1);\r\n    }\r\n\r\n    getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\r\n       if (handle.kind === 'bezier-control-before' || handle.kind === 'bezier-junction' || handle.kind === 'bezier-control-after') {\r\n            for (let i = 0; i < route.length; i++) {\r\n                const p = route[i];\r\n                if (p.pointIndex === handle.pointIndex && p.kind === handle.kind)\r\n                    return p;\r\n            }\r\n        } else if (handle.kind === 'bezier-add') {\r\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\r\n            return { x: ctrlPoint.x, y: ctrlPoint.y + 12.5};\r\n        } else if (handle.kind === 'bezier-remove') {\r\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\r\n            return { x: ctrlPoint.x, y: ctrlPoint.y - 12.5};\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected findBezierControl(edge: SRoutableElementImpl, route: RoutedPoint[], handleIndex: number): Point {\r\n        let result: Point = { x: route[0].x, y: route[0].y };\r\n        if (handleIndex > 0) {\r\n            for (const rp of route) {\r\n                if (rp.pointIndex !== undefined && rp.pointIndex === handleIndex && rp.kind === 'bezier-junction') {\r\n                    result = { x: rp.x, y: rp.y };\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\r\n        moves.forEach(move => {\r\n            const handle = move.handle;\r\n            let orgPosition = { x: 0, y: 0 };\r\n            let relativePos, newControlPos, ctrlPointIndex;\r\n            const moveToPos = move.toPosition;\r\n\r\n            switch (handle.kind) {\r\n                case 'bezier-control-before':\r\n                case 'bezier-control-after':\r\n                    // find potential other handle/rp and move\r\n                    this.moveBezierControlPair(moveToPos, move.handle.pointIndex, edge);\r\n                    break;\r\n                case 'bezier-junction':\r\n                    const index = handle.pointIndex;\r\n                    if (index >= 0 && index < edge.routingPoints.length) {\r\n                        ctrlPointIndex = index - 1;\r\n                        orgPosition = edge.routingPoints[index];\r\n                        relativePos = edge.routingPoints[ctrlPointIndex];\r\n                        newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\r\n                        edge.routingPoints[index] = moveToPos;\r\n                        this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\r\n                    }\r\n                    break;\r\n                case 'source':\r\n                    ctrlPointIndex = 0;\r\n                    relativePos = edge.routingPoints[ctrlPointIndex];\r\n\r\n                    if (!(edge.source instanceof SDanglingAnchorImpl)) {\r\n                        // detach source\r\n                        const anchor = new SDanglingAnchorImpl();\r\n                        anchor.id = edge.id + '_dangling-source';\r\n                        anchor.original = edge.source;\r\n                        anchor.position = move.toPosition;\r\n                        handle.root.add(anchor);\r\n                        handle.danglingAnchor = anchor;\r\n                        edge.sourceId = anchor.id;\r\n                        if (edge.source) orgPosition = edge.source.position;\r\n                    } else if (handle.danglingAnchor) {\r\n                        orgPosition = handle.danglingAnchor.position;\r\n                        handle.danglingAnchor.position = moveToPos;\r\n                    }\r\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\r\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\r\n                    break;\r\n                case 'target':\r\n                    ctrlPointIndex = edge.routingPoints.length - 1;\r\n                    relativePos = edge.routingPoints[ctrlPointIndex];\r\n\r\n                    if (!(edge.target instanceof SDanglingAnchorImpl)) {\r\n                        // detach target\r\n                        const anchor = new SDanglingAnchorImpl();\r\n                        anchor.id = edge.id + '_dangling-target';\r\n                        anchor.original = edge.target;\r\n                        anchor.position = moveToPos;\r\n                        handle.root.add(anchor);\r\n                        handle.danglingAnchor = anchor;\r\n                        edge.targetId = anchor.id;\r\n                        if (edge.target) orgPosition = edge.target.position;\r\n                    } else if (handle.danglingAnchor) {\r\n                        orgPosition = handle.danglingAnchor.position;\r\n                        handle.danglingAnchor.position = moveToPos;\r\n                    }\r\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\r\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    protected applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\r\n        // not required\r\n    }\r\n\r\n    protected getOptions(edge: SRoutableElementImpl): LinearRouteOptions {\r\n        return  {\r\n            minimalPointDistance: 2,\r\n            standardDistance: 0.1,\r\n            selfEdgeOffset: 20\r\n        };\r\n    }\r\n\r\n    private calcRelativeMove(oldPos: Point, newPos: Point, relativePoint: Point): Point {\r\n        return {\r\n            x: relativePoint.x - (oldPos.x - newPos.x),\r\n            y: relativePoint.y - (oldPos.y - newPos.y)\r\n        };\r\n    }\r\n\r\n    public createNewBezierSegment(index: number, edge: SRoutableElementImpl): void {\r\n        const routingPoints = edge.routingPoints;\r\n\r\n        let bezierJunctionPos, start, end: Point;\r\n        if (routingPoints.length === 2) {\r\n            start = routingPoints[index < 0 ? 0 : index];\r\n            end = routingPoints[routingPoints.length - 1];\r\n            bezierJunctionPos = centerOfLine(start, end);\r\n        } else {\r\n            start = routingPoints[index];\r\n            end = routingPoints[index + 2];\r\n            bezierJunctionPos = centerOfLine(start, end);\r\n        }\r\n        const [h1, h2] = this.createDefaultBezierHandles(bezierJunctionPos, bezierJunctionPos);\r\n\r\n        routingPoints.splice(index + 1, 0, h1);\r\n        routingPoints.splice(index + 2, 0, bezierJunctionPos);\r\n        routingPoints.splice(index + 3, 0, h2);\r\n        // ensure handles are correctly positioned\r\n        this.moveBezierControlPair(h1, index + 1, edge);\r\n\r\n        // simple solution for now: just rebuildHandles\r\n        edge.removeAll(c => c instanceof SRoutingHandleImpl);\r\n        this.rebuildHandles(edge);\r\n    }\r\n\r\n    public removeBezierSegment(index: number, edge: SRoutableElementImpl): void {\r\n        const routingPoints = edge.routingPoints;\r\n\r\n        routingPoints.splice(index - 1, 3);\r\n\r\n        // simple solution for now: just rebuildHandles\r\n        edge.removeAll(c => c instanceof SRoutingHandleImpl);\r\n        this.rebuildHandles(edge);\r\n    }\r\n\r\n    private moveBezierControlPair(newPos: Point, ctrlPointIndex: number, edge: SRoutableElementImpl) {\r\n        if (ctrlPointIndex >= 0 && ctrlPointIndex < edge.routingPoints.length) {\r\n            // find neighbors\r\n            const before = ctrlPointIndex - 1;\r\n            const after = ctrlPointIndex + 1;\r\n\r\n            // this is the first control or the last control => nothing to do further\r\n            if (before < 0 || after === edge.routingPoints.length) {\r\n                edge.routingPoints[ctrlPointIndex] = newPos;\r\n            } else  {\r\n                // behind bezier-junction\r\n                if (ctrlPointIndex % 3 === 0) {\r\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, false);\r\n                // before bezier-junction\r\n                } else if ((ctrlPointIndex + 2) % 3 === 0) {\r\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setBezierMirror(edge: SRoutableElementImpl, newPos: Point, pointIndex: number, before: boolean) {\r\n        edge.routingPoints[pointIndex] = newPos;\r\n        const jct = edge.routingPoints[before ? (pointIndex + 1) : (pointIndex - 1)];\r\n        edge.routingPoints[before ? (pointIndex + 2) : (pointIndex - 2)] = {\r\n            x: jct.x - (newPos.x - jct.x),\r\n            y: jct.y - (newPos.y - jct.y)\r\n        };\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Reacts on mouseDown events if the target kind is bezier-add or bezier-remove\r\n */\r\nexport class BezierMouseListener extends MouseListener {\r\n\r\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        const result = [];\r\n        if (target instanceof SRoutingHandleImpl && (target.kind === 'bezier-add' || target.kind === 'bezier-remove')) {\r\n            if (target.type === 'bezier-create-routing-point') {\r\n                result.push(AddRemoveBezierSegmentAction.create('add', target.id));\r\n            } else if (target.type === 'bezier-remove-routing-point') {\r\n                result.push(AddRemoveBezierSegmentAction.create('remove', target.id));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n};\r\n\r\nexport interface AddRemoveBezierSegmentAction extends Action {\r\n    kind: typeof AddRemoveBezierSegmentAction.KIND\r\n    targetId: string\r\n    actionTask: 'add' | 'remove'\r\n}\r\n\r\nexport namespace AddRemoveBezierSegmentAction {\r\n    export const KIND = 'addRemoveBezierSegment';\r\n    export function create(actionTask: 'add' | 'remove', targetId: string): AddRemoveBezierSegmentAction {\r\n        return {\r\n            kind: KIND,\r\n            actionTask,\r\n            targetId\r\n        };\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class AddRemoveBezierSegmentCommand extends Command {\r\n    static readonly KIND = AddRemoveBezierSegmentAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: AddRemoveBezierSegmentAction,\r\n        @inject(EdgeRouterRegistry) protected readonly edgeRouterRegistry?: EdgeRouterRegistry) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const index = context.root.index;\r\n        const target = index.getById(this.action.targetId);\r\n\r\n        if (this.edgeRouterRegistry && target instanceof SRoutingHandleImpl) {\r\n            const raw = this.edgeRouterRegistry.get((target.parent as SRoutableElementImpl).routerKind);\r\n            if (raw instanceof BezierEdgeRouter) {\r\n                const router = raw;\r\n\r\n                for (const child of context.root.children) {\r\n                    if (child.id === target.parent.id) {\r\n                        if (this.action.actionTask === 'add') {\r\n                            router.createNewBezierSegment(target.pointIndex, child as SEdgeImpl);\r\n                        } else if (this.action.actionTask === 'remove') {\r\n                            router.removeBezierSegment(target.pointIndex, child as SEdgeImpl);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\r\nimport { injectable } from \"inversify\";\r\nimport { DiamondAnchor, EllipseAnchor, RectangleAnchor } from './polyline-anchors';\r\nimport { BezierEdgeRouter } from './bezier-edge-router';\r\n\r\n@injectable()\r\nexport class BezierEllipseAnchor extends EllipseAnchor {\r\n\r\n    override get kind() {\r\n        return BezierEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class BezierRectangleAnchor extends RectangleAnchor {\r\n\r\n    override get kind() {\r\n        return BezierEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class BezierDiamondAnchor extends DiamondAnchor {\r\n\r\n    override get kind() {\r\n        return BezierEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { translatePoint } from \"../../base/model/smodel-utils\";\r\nimport { ResolvedHandleMove } from \"../move/move\";\r\nimport { DefaultAnchors, AbstractEdgeRouter, LinearRouteOptions, Side } from \"./abstract-edge-router\";\r\nimport { SRoutableElementImpl, RoutingHandleKind, SRoutingHandleImpl } from \"./model\";\r\nimport { RoutedPoint } from \"./routing\";\r\n\r\nexport interface ManhattanRouterOptions extends LinearRouteOptions {\r\n    standardDistance: number;\r\n}\r\n\r\nexport class ManhattanEdgeRouter extends AbstractEdgeRouter {\r\n\r\n    static readonly KIND = 'manhattan';\r\n\r\n    get kind() {\r\n        return ManhattanEdgeRouter.KIND;\r\n    }\r\n\r\n    protected getOptions(edge: SRoutableElementImpl): ManhattanRouterOptions {\r\n        return {\r\n            standardDistance: 20,\r\n            minimalPointDistance: 3,\r\n            selfEdgeOffset: 0.25\r\n        };\r\n    }\r\n\r\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\r\n        if (!edge.source || !edge.target)\r\n            return [];\r\n        const routedCorners = this.createRoutedCorners(edge);\r\n        const sourceRefPoint = routedCorners[0]\r\n            || translatePoint(Bounds.center(edge.target.bounds), edge.target.parent, edge.parent);\r\n        const sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);\r\n        const targetRefPoint = routedCorners[routedCorners.length - 1]\r\n            || translatePoint(Bounds.center(edge.source.bounds), edge.source.parent, edge.parent);\r\n        const targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);\r\n        if (!sourceAnchor || !targetAnchor)\r\n            return [];\r\n        const routedPoints: RoutedPoint[] = [];\r\n        routedPoints.push({ kind: 'source', ...sourceAnchor});\r\n        routedCorners.forEach(corner => routedPoints.push(corner));\r\n        routedPoints.push({ kind: 'target', ...targetAnchor});\r\n        return routedPoints;\r\n    }\r\n\r\n    protected createRoutedCorners(edge: SRoutableElementImpl): RoutedPoint[] {\r\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, 'source');\r\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, 'target');\r\n        if (edge.routingPoints.length > 0) {\r\n            const routingPointsCopy = edge.routingPoints.slice();\r\n            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);\r\n            if (routingPointsCopy.length > 0)\r\n                return routingPointsCopy.map((routingPoint, index) => {\r\n                    return <RoutedPoint> { kind: 'linear', pointIndex: index, ...routingPoint};\r\n                });\r\n        }\r\n        const options = this.getOptions(edge);\r\n        const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\r\n        return corners.map(corner => {\r\n            return <RoutedPoint> { kind: 'linear', ...corner };\r\n        });\r\n    }\r\n\r\n    createRoutingHandles(edge: SRoutableElementImpl) {\r\n        const routedPoints = this.route(edge);\r\n        this.commitRoute(edge, routedPoints);\r\n        if (routedPoints.length > 0) {\r\n            this.addHandle(edge, 'source', 'routing-point', -2);\r\n            for (let i = 0; i < routedPoints.length - 1; ++i)\r\n                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);\r\n            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);\r\n        }\r\n    }\r\n\r\n    protected getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\r\n        const fraction = this.getFraction(handle.kind);\r\n        if (fraction !== undefined) {\r\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\r\n            if (start !== undefined && end !== undefined)\r\n                return Point.linear(start, end, fraction);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected getFraction(kind: RoutingHandleKind): number | undefined {\r\n        switch (kind) {\r\n            case 'manhattan-50%': return 0.5;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    protected applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]) {\r\n        const route = this.route(edge);\r\n        const routingPoints = edge.routingPoints;\r\n        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;\r\n        moves.forEach(move => {\r\n            const handle = move.handle;\r\n            const index = handle.pointIndex;\r\n            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);\r\n            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);\r\n            switch (handle.kind) {\r\n                case 'manhattan-50%':\r\n                    if (index < 0) {\r\n                        if (routingPoints.length === 0) {\r\n                            routingPoints.push({ x: correctedX, y: correctedY });\r\n                            handle.pointIndex = 0;\r\n                        } else if (almostEquals(route[0].x, route[1].x)) {\r\n                            this.alignX(routingPoints, 0, correctedX);\r\n                        } else {\r\n                            this.alignY(routingPoints, 0, correctedY);\r\n                        }\r\n                    } else if (index < routingPoints.length - 1) {\r\n                        if (almostEquals(routingPoints[index].x, routingPoints[index + 1].x)) {\r\n                            this.alignX(routingPoints, index, correctedX);\r\n                            this.alignX(routingPoints, index + 1, correctedX);\r\n                        } else {\r\n                            this.alignY(routingPoints, index, correctedY);\r\n                            this.alignY(routingPoints, index + 1, correctedY);\r\n                        }\r\n                    } else {\r\n                        if (almostEquals(route[route.length - 2].x, route[route.length - 1].x)) {\r\n                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);\r\n                        } else {\r\n                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    protected correctX(routingPoints: Point[], index: number, x: number, minimalPointDistance: number) {\r\n        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)\r\n            return routingPoints[index - 1].x;\r\n        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)\r\n            return routingPoints[index + 2].x;\r\n        else\r\n            return x;\r\n    }\r\n\r\n    protected alignX(routingPoints: Point[], index: number, x: number) {\r\n        if (index >= 0 && index < routingPoints.length)\r\n            routingPoints[index] = {\r\n                x,\r\n                y: routingPoints[index].y\r\n            };\r\n    }\r\n\r\n    protected correctY(routingPoints: Point[], index: number, y: number, minimalPointDistance: number) {\r\n        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)\r\n            return routingPoints[index - 1].y;\r\n        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)\r\n            return routingPoints[index + 2].y;\r\n        else\r\n            return y;\r\n    }\r\n\r\n    protected alignY(routingPoints: Point[], index: number, y: number) {\r\n        if (index >= 0 && index < routingPoints.length)\r\n            routingPoints[index] = {\r\n                x: routingPoints[index].x,\r\n                y\r\n            };\r\n    }\r\n\r\n    override cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\r\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\r\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\r\n        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))\r\n            return;\r\n        // delete leading RPs inside the bounds of the source\r\n        for (let i = 0; i < routingPoints.length; ++i)\r\n            if (Bounds.includes(sourceAnchors.bounds, routingPoints[i])) {\r\n                routingPoints.splice(0, 1);\r\n                if (updateHandles) {\r\n                    this.removeHandle(edge, -1);\r\n                }\r\n            } else {\r\n                break;\r\n            }\r\n        // delete trailing RPs inside the bounds of the target\r\n        for (let i = routingPoints.length - 1; i >= 0; --i)\r\n            if (Bounds.includes(targetAnchors.bounds, routingPoints[i])) {\r\n                routingPoints.splice(i, 1);\r\n                if (updateHandles) {\r\n                    this.removeHandle(edge, i);\r\n                }\r\n            } else {\r\n                break;\r\n        }\r\n        if (routingPoints.length >= 2) {\r\n            const options = this.getOptions(edge);\r\n            for (let i = routingPoints.length - 2; i >= 0; --i) {\r\n                if (Point.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {\r\n                    routingPoints.splice(i, 2);\r\n                    --i;\r\n                    if (updateHandles) {\r\n                        this.removeHandle(edge, i - 1);\r\n                        this.removeHandle(edge, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (addRoutingPoints) {\r\n            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);\r\n            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);\r\n            this.manhattanify(edge, routingPoints);\r\n        }\r\n    }\r\n\r\n    protected removeHandle(edge: SRoutableElementImpl, pointIndex: number) {\r\n        const toBeRemoved: SRoutingHandleImpl[] = [];\r\n        edge.children.forEach(child => {\r\n            if (child instanceof SRoutingHandleImpl) {\r\n                if (child.pointIndex > pointIndex)\r\n                    --child.pointIndex;\r\n                else if (child.pointIndex === pointIndex)\r\n                    toBeRemoved.push(child);\r\n            }\r\n        });\r\n        toBeRemoved.forEach(child => edge.remove(child));\r\n    }\r\n\r\n    protected addAdditionalCorner(edge: SRoutableElementImpl, routingPoints: Point[], currentAnchors: DefaultAnchors, otherAnchors: DefaultAnchors, updateHandles: boolean) {\r\n        if (routingPoints.length === 0)\r\n            return;\r\n        const refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];\r\n        const index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;\r\n        const shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);\r\n        let isHorizontal: boolean;\r\n        if (routingPoints.length > 1) {\r\n            isHorizontal = index === 0\r\n            ? almostEquals(routingPoints[0].x, routingPoints[1].x)\r\n            : almostEquals(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);\r\n        } else {\r\n            const nearestSide = otherAnchors.getNearestSide(refPoint);\r\n            isHorizontal = nearestSide === Side.TOP || nearestSide === Side.BOTTOM;\r\n        }\r\n        if (isHorizontal) {\r\n            if (refPoint.y < currentAnchors.get(Side.TOP).y || refPoint.y > currentAnchors.get(Side.BOTTOM).y) {\r\n                const newPoint = { x: currentAnchors.get(Side.TOP).x, y: refPoint.y };\r\n                routingPoints.splice(index, 0, newPoint);\r\n                if (updateHandles) {\r\n                    edge.children.forEach(child => {\r\n                        if (child instanceof SRoutingHandleImpl && child.pointIndex >= shiftIndex)\r\n                            ++child.pointIndex;\r\n                    });\r\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\r\n                }\r\n            }\r\n        } else {\r\n            if (refPoint.x < currentAnchors.get(Side.LEFT).x || refPoint.x > currentAnchors.get(Side.RIGHT).x) {\r\n                const newPoint = { x: refPoint.x, y: currentAnchors.get(Side.LEFT).y };\r\n                routingPoints.splice(index, 0, newPoint);\r\n                if (updateHandles) {\r\n                    edge.children.forEach(child => {\r\n                        if (child instanceof SRoutingHandleImpl && child.pointIndex >= shiftIndex)\r\n                            ++child.pointIndex;\r\n                    });\r\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add artificial routing points to keep all angles rectilinear.\r\n     *\r\n     * This makes edge morphing look a lot smoother, where RP positions are interpolated\r\n     * linearly probably resulting in non-rectilinear angles. We don't add handles for\r\n     * these additional RPs.\r\n     */\r\n    protected manhattanify(edge: SRoutableElementImpl, routingPoints: Point[]) {\r\n        for (let i = 1; i < routingPoints.length; ++i) {\r\n            const isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;\r\n            const isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;\r\n            if (!isVertical && !isHorizontal) {\r\n                routingPoints.splice(i, 0, {\r\n                    x: routingPoints[i - 1].x,\r\n                    y: routingPoints[i].y\r\n                });\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected override calculateDefaultCorners(edge: SRoutableElementImpl, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: ManhattanRouterOptions): Point[] {\r\n        const selfEdge = super.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\r\n        if (selfEdge.length > 0)\r\n            return selfEdge;\r\n        const bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);\r\n        const sourceSide = bestAnchors.source;\r\n        const targetSide = bestAnchors.target;\r\n        const corners: Point[] = [];\r\n        const startPoint = sourceAnchors.get(sourceSide);\r\n        let endPoint = targetAnchors.get(targetSide);\r\n        switch (sourceSide) {\r\n            case Side.RIGHT:\r\n                switch (targetSide) {\r\n                    case Side.BOTTOM:\r\n                        corners.push({ x: endPoint.x, y: startPoint.y });\r\n                        break;\r\n                    case Side.TOP:\r\n                        corners.push({ x: endPoint.x, y: startPoint.y });\r\n                        break;\r\n                    case Side.RIGHT:\r\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });\r\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });\r\n                        break;\r\n                    case Side.LEFT:\r\n                        if (endPoint.y !== startPoint.y) {\r\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\r\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case Side.LEFT:\r\n                switch (targetSide) {\r\n                    case Side.BOTTOM:\r\n                        corners.push({ x: endPoint.x, y: startPoint.y });\r\n                        break;\r\n                    case Side.TOP:\r\n                        corners.push({ x: endPoint.x, y: startPoint.y });\r\n                        break;\r\n                    default:\r\n                        endPoint = targetAnchors.get(Side.RIGHT);\r\n                        if (endPoint.y !== startPoint.y) {\r\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\r\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case Side.TOP:\r\n                switch (targetSide) {\r\n                    case Side.RIGHT:\r\n                        if ((endPoint.x - startPoint.x) > 0) {\r\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\r\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\r\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\r\n                        } else {\r\n                            corners.push({ x: startPoint.x, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                    case Side.LEFT:\r\n                        if ((endPoint.x - startPoint.x) < 0) {\r\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\r\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\r\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\r\n                        } else {\r\n                            corners.push({ x: startPoint.x, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                    case Side.TOP:\r\n                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\r\n                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\r\n                        break;\r\n                    case Side.BOTTOM:\r\n                        if (endPoint.x !== startPoint.x) {\r\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\r\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case Side.BOTTOM:\r\n                switch (targetSide) {\r\n                    case Side.RIGHT:\r\n                        if ((endPoint.x - startPoint.x) > 0) {\r\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\r\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\r\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\r\n                        } else {\r\n                            corners.push({ x: startPoint.x, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                    case Side.LEFT:\r\n                        if ((endPoint.x - startPoint.x) < 0) {\r\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\r\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\r\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\r\n                        } else {\r\n                            corners.push({ x: startPoint.x, y: endPoint.y });\r\n                        }\r\n                        break;\r\n                    default:\r\n                        endPoint = targetAnchors.get(Side.TOP);\r\n                        if (endPoint.x !== startPoint.x) {\r\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\r\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n        return corners;\r\n    }\r\n\r\n    protected getBestConnectionAnchors(edge: SRoutableElementImpl,\r\n                                        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors,\r\n                                        options: ManhattanRouterOptions): { source: Side, target: Side } {\r\n        // distance is enough\r\n        let sourcePoint = sourceAnchors.get(Side.RIGHT);\r\n        let targetPoint = targetAnchors.get(Side.LEFT);\r\n        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)\r\n            return { source: Side.RIGHT, target: Side.LEFT };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.LEFT);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)\r\n            return { source: Side.LEFT, target: Side.RIGHT };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.TOP);\r\n        targetPoint = targetAnchors.get(Side.BOTTOM);\r\n        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)\r\n            return { source: Side.TOP, target: Side.BOTTOM };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\r\n        targetPoint = targetAnchors.get(Side.TOP);\r\n        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)\r\n            return { source: Side.BOTTOM, target: Side.TOP };\r\n\r\n        // One additional point\r\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\r\n        targetPoint = targetAnchors.get(Side.TOP);\r\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\r\n            return { source: Side.RIGHT, target: Side.TOP };\r\n\r\n        targetPoint = targetAnchors.get(Side.BOTTOM);\r\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\r\n            return { source: Side.RIGHT, target: Side.BOTTOM };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.LEFT);\r\n        targetPoint = targetAnchors.get(Side.BOTTOM);\r\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\r\n            return { source: Side.LEFT, target: Side.BOTTOM };\r\n\r\n        targetPoint = targetAnchors.get(Side.TOP);\r\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\r\n            return { source: Side.LEFT, target: Side.TOP };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.TOP);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\r\n            return { source: Side.TOP, target: Side.RIGHT };\r\n\r\n        targetPoint = targetAnchors.get(Side.LEFT);\r\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\r\n            return { source: Side.TOP, target: Side.LEFT };\r\n\r\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\r\n            return { source: Side.BOTTOM, target: Side.RIGHT };\r\n\r\n        targetPoint = targetAnchors.get(Side.LEFT);\r\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\r\n            return { source: Side.BOTTOM, target: Side.LEFT };\r\n\r\n        // Two points\r\n        // priority NN >> EE >> NE >> NW >> SE >> SW\r\n        sourcePoint = sourceAnchors.get(Side.TOP);\r\n        targetPoint = targetAnchors.get(Side.TOP);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\r\n            if ((sourcePoint.y - targetPoint.y) < 0) {\r\n                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))\r\n                    return { source: Side.TOP, target: Side.TOP };\r\n            } else {\r\n                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))\r\n                    return { source: Side.TOP, target: Side.TOP };\r\n            }\r\n        }\r\n\r\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\r\n            if ((sourcePoint.x - targetPoint.x) > 0) {\r\n                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))\r\n                    return { source: Side.RIGHT, target: Side.RIGHT };\r\n            } else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))\r\n                return { source: Side.RIGHT, target: Side.RIGHT };\r\n        }\r\n\r\n        // Secondly, judge NE NW is available\r\n        sourcePoint = sourceAnchors.get(Side.TOP);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\r\n            return { source: Side.TOP, target: Side.RIGHT };\r\n\r\n        targetPoint = targetAnchors.get(Side.LEFT);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\r\n            return { source: Side.TOP, target: Side.LEFT };\r\n\r\n        // Finally, judge SE SW is available\r\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\r\n        targetPoint = targetAnchors.get(Side.RIGHT);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\r\n            return { source: Side.BOTTOM, target: Side.RIGHT };\r\n\r\n        targetPoint = targetAnchors.get(Side.LEFT);\r\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\r\n            return { source: Side.BOTTOM, target: Side.LEFT };\r\n\r\n        // Only to return to the\r\n        return { source: Side.RIGHT, target: Side.BOTTOM };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { Line, PointToPointLine, intersection } from \"../../utils/geometry\";\r\nimport { RECTANGULAR_ANCHOR_KIND, IAnchorComputer, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"./anchor\";\r\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\r\nimport { SConnectableElementImpl } from \"./model\";\r\nimport { injectable } from \"inversify\";\r\n\r\n@injectable()\r\nexport class ManhattanRectangularAnchor implements IAnchorComputer {\r\n\r\n    static KIND = ManhattanEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\r\n\r\n    get kind() {\r\n        return ManhattanRectangularAnchor.KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number): Point {\r\n        const b = connectable.bounds;\r\n        if (b.width <= 0 || b.height <= 0) {\r\n            return b;\r\n        }\r\n        const bounds: Bounds = {\r\n            x: b.x - offset,\r\n            y: b.y - offset,\r\n            width: b.width + 2 * offset,\r\n            height: b.height + 2 * offset\r\n        };\r\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\r\n            if (refPoint.y < bounds.y + 0.5 * bounds.height)\r\n            return { x: refPoint.x, y: bounds.y };\r\n            else\r\n            return { x: refPoint.x, y: bounds.y + bounds.height };\r\n        }\r\n        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\r\n            if (refPoint.x < bounds.x + 0.5 * bounds.width)\r\n            return { x: bounds.x, y: refPoint.y };\r\n            else\r\n            return { x: bounds.x + bounds.width, y: refPoint.y };\r\n        }\r\n        return Bounds.center(bounds);\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class ManhattanDiamondAnchor implements IAnchorComputer {\r\n\r\n    static KIND = ManhattanEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\r\n\r\n    get kind() {\r\n        return ManhattanDiamondAnchor.KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\r\n        const b = connectable.bounds;\r\n        if (b.width <= 0 || b.height <= 0) {\r\n            return b;\r\n        }\r\n        const bounds = {\r\n            x: b.x - offset,\r\n            y: b.y - offset,\r\n            width: b.width + 2 * offset,\r\n            height: b.height + 2 * offset\r\n        };\r\n        const c = Bounds.center(bounds);\r\n\r\n        let outline: Line | undefined = undefined;\r\n        let refLine: Line | undefined = undefined;\r\n        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {\r\n            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {\r\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\r\n                if (refPoint.y < c.y)\r\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\r\n                else\r\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\r\n            } else {\r\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\r\n                if (refPoint.y < c.y)\r\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\r\n                else\r\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\r\n            }\r\n        } else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {\r\n            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {\r\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\r\n                if (refPoint.x < c.x)\r\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\r\n                else\r\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\r\n            } else {\r\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\r\n                if (refPoint.x < c.x)\r\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\r\n                else\r\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\r\n            }\r\n        }\r\n        if (!!refLine && !!outline)\r\n            return intersection(outline, refLine);\r\n        else\r\n            return c;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class ManhattanEllipticAnchor implements IAnchorComputer {\r\n\r\n    static KIND = ManhattanEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\r\n\r\n    get kind() {\r\n        return ManhattanEllipticAnchor.KIND;\r\n    }\r\n\r\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\r\n        const b = connectable.bounds;\r\n        if (b.width <= 0 || b.height <= 0) {\r\n            return b;\r\n        }\r\n        const bounds = {\r\n            x: b.x - offset,\r\n            y: b.y - offset,\r\n            width: b.width + 2 * offset,\r\n            height: b.height + 2 * offset\r\n        };\r\n        const c = Bounds.center(bounds);\r\n        const refRelative = Point.subtract(refPoint, c);\r\n        let x = c.x;\r\n        let y = c.y;\r\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\r\n            x += refRelative.x;\r\n            const dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));\r\n            if (refRelative.y < 0)\r\n                y -= dy;\r\n            else\r\n                y += dy;\r\n        } else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\r\n            y += refRelative.y;\r\n            const dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));\r\n            if (refRelative.x < 0)\r\n                x -= dx;\r\n            else\r\n                x += dx;\r\n        }\r\n        return { x, y };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\r\nimport { SRoutableElementImpl, getAbsoluteRouteBounds } from './model';\r\n\r\n@injectable()\r\nexport abstract class RoutableView implements IView {\r\n    /**\r\n     * Check whether the given model element is in the current viewport. Use this method\r\n     * in your `render` implementation to skip rendering in case the element is not visible.\r\n     * This can greatly enhance performance for large models.\r\n     */\r\n    isVisible(model: Readonly<SRoutableElementImpl>, route: Point[], context: RenderingContext): boolean {\r\n        if (context.targetKind === 'hidden') {\r\n            // Don't hide any element for hidden rendering\r\n            return true;\r\n        }\r\n        if (route.length === 0) {\r\n            // We should hide only if we know the element's route\r\n            return true;\r\n        }\r\n        const ab = getAbsoluteRouteBounds(model, route);\r\n        const canvasBounds = model.root.canvasBounds;\r\n        return ab.x <= canvasBounds.width\r\n            && ab.x + ab.width >= 0\r\n            && ab.y <= canvasBounds.height\r\n            && ab.y + ab.height >= 0;\r\n    }\r\n\r\n    abstract render(model: Readonly<SRoutableElementImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from \"inversify\";\r\nimport { ResponseAction } from \"sprotty-protocol/lib/actions\";\r\nimport { TYPES } from \"../types\";\r\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from \"./command\";\r\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\r\n\r\n/**\r\n * A command that does not modify the internal model, but retrieves information\r\n * from it by dispatching a response action.\r\n */\r\n@injectable()\r\nexport abstract class ModelRequestCommand extends SystemCommand {\r\n\r\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const result = this.retrieveResult(context);\r\n        this.actionDispatcher.dispatch(result);\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n\r\n    protected abstract retrieveResult(context: CommandExecutionContext): ResponseAction;\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return { model: context.root, modelChanged: false };\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject } from 'inversify';\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { Action, CenterAction, SetViewportAction } from 'sprotty-protocol/lib/actions';\r\nimport { almostEquals, Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { isViewport } from './model';\r\nimport { isMoveable } from '../move/model';\r\nimport { SRoutingHandleImpl } from '../routing/model';\r\nimport { getModelBounds } from '../projection/model';\r\nimport { hitsMouseEvent } from '../../utils/browser';\r\nimport { TYPES } from '../../base/types';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\n\r\nexport class ScrollMouseListener extends MouseListener {\r\n\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n\r\n    protected lastScrollPosition: Point |undefined;\r\n    protected scrollbar: HTMLElement | undefined;\r\n    protected scrollbarMouseDownTimeout: number | undefined;\r\n    protected scrollbarMouseDownDelay = 200;\r\n\r\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const moveable = findParentByFeature(target, isMoveable);\r\n        if (moveable === undefined && !(target instanceof SRoutingHandleImpl)) {\r\n            const viewport = findParentByFeature(target, isViewport);\r\n            if (viewport) {\r\n                this.lastScrollPosition = { x: event.pageX, y: event.pageY };\r\n                this.scrollbar = this.getScrollbar(event);\r\n                if (this.scrollbar) {\r\n                    window.clearTimeout(this.scrollbarMouseDownTimeout);\r\n                    return this.moveScrollBar(viewport, event, this.scrollbar, true)\r\n                        .map(action => new Promise(resolve => {\r\n                            this.scrollbarMouseDownTimeout = window.setTimeout(() => resolve(action), this.scrollbarMouseDownDelay);\r\n                        }));\r\n                }\r\n            } else {\r\n                this.lastScrollPosition = undefined;\r\n                this.scrollbar = undefined;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        if (event.buttons === 0) {\r\n            return this.mouseUp(target, event);\r\n        }\r\n        if (this.scrollbar) {\r\n            window.clearTimeout(this.scrollbarMouseDownTimeout);\r\n            const viewport = findParentByFeature(target, isViewport);\r\n            if (viewport) {\r\n                return this.moveScrollBar(viewport, event, this.scrollbar);\r\n            }\r\n        }\r\n        if (this.lastScrollPosition) {\r\n            const viewport = findParentByFeature(target, isViewport);\r\n            if (viewport) {\r\n                return this.dragCanvas(viewport, event, this.lastScrollPosition);\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    override mouseEnter(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        if (target instanceof SModelRootImpl && event.buttons === 0) {\r\n            this.mouseUp(target, event);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        this.lastScrollPosition = undefined;\r\n        this.scrollbar = undefined;\r\n        return [];\r\n    }\r\n\r\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        const viewport = findParentByFeature(target, isViewport);\r\n        if (viewport) {\r\n            const scrollbar = this.getScrollbar(event);\r\n            if (scrollbar) {\r\n                window.clearTimeout(this.scrollbarMouseDownTimeout);\r\n                const targetElement = this.findClickTarget(scrollbar, event);\r\n                let elementId: string | undefined;\r\n                if (targetElement && targetElement.id.startsWith('horizontal-projection:')) {\r\n                    elementId = targetElement.id.substring('horizontal-projection:'.length);\r\n                } else if (targetElement && targetElement.id.startsWith('vertical-projection:')) {\r\n                    elementId = targetElement.id.substring('vertical-projection:'.length);\r\n                }\r\n                if (elementId) {\r\n                    return [CenterAction.create([elementId], { animate: true, retainZoom: true })];\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    protected dragCanvas(model: SModelRootImpl & Viewport, event: MouseEvent, lastScrollPosition: Point): Action[] {\r\n        let dx = (event.pageX - lastScrollPosition.x) / model.zoom;\r\n        if (dx > 0 && almostEquals(model.scroll.x, this.viewerOptions.horizontalScrollLimits.min)\r\n            || dx < 0 && almostEquals(model.scroll.x, this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom)) {\r\n            dx = 0;\r\n        }\r\n        let dy = (event.pageY - lastScrollPosition.y) / model.zoom;\r\n        if (dy > 0 && almostEquals(model.scroll.y, this.viewerOptions.verticalScrollLimits.min)\r\n            || dy < 0 && almostEquals(model.scroll.y, this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom)) {\r\n            dy = 0;\r\n        }\r\n        if (dx === 0 && dy === 0) {\r\n            return [];\r\n        }\r\n        const newViewport: Viewport = {\r\n            scroll: {\r\n                x: model.scroll.x - dx,\r\n                y: model.scroll.y - dy,\r\n            },\r\n            zoom: model.zoom\r\n        };\r\n        this.lastScrollPosition = { x: event.pageX, y: event.pageY };\r\n        return [SetViewportAction.create(model.id, newViewport, { animate: false })];\r\n    }\r\n\r\n    protected moveScrollBar(model: SModelRootImpl & Viewport, event: MouseEvent, scrollbar: HTMLElement, animate: boolean = false): Action[] {\r\n        const modelBounds = getModelBounds(model);\r\n        if (!modelBounds || model.zoom <= 0) {\r\n            return [];\r\n        }\r\n        const scrollbarRect = scrollbar.getBoundingClientRect();\r\n        let newScroll: { x: number, y: number };\r\n        if (this.getScrollbarOrientation(scrollbar) === 'horizontal') {\r\n            if (scrollbarRect.width <= 0) {\r\n                return [];\r\n            }\r\n            const viewportSize = (model.canvasBounds.width / (model.zoom * modelBounds.width)) * scrollbarRect.width;\r\n            let position = event.clientX - scrollbarRect.x - viewportSize / 2;\r\n            if (position < 0) {\r\n                position = 0;\r\n            } else if (position > scrollbarRect.width - viewportSize) {\r\n                position = scrollbarRect.width - viewportSize;\r\n            }\r\n            newScroll = {\r\n                x: modelBounds.x + (position / scrollbarRect.width) * modelBounds.width,\r\n                y: model.scroll.y\r\n            };\r\n            if (newScroll.x < this.viewerOptions.horizontalScrollLimits.min) {\r\n                newScroll.x = this.viewerOptions.horizontalScrollLimits.min;\r\n            } else if (newScroll.x > this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom) {\r\n                newScroll.x = this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom;\r\n            }\r\n            if (almostEquals(newScroll.x, model.scroll.x)) {\r\n                return [];\r\n            }\r\n        } else {\r\n            if (scrollbarRect.height <= 0) {\r\n                return [];\r\n            }\r\n            const viewportSize = (model.canvasBounds.height / (model.zoom * modelBounds.height)) * scrollbarRect.height;\r\n            let position = event.clientY - scrollbarRect.y - viewportSize / 2;\r\n            if (position < 0) {\r\n                position = 0;\r\n            } else if (position > scrollbarRect.height - viewportSize) {\r\n                position = scrollbarRect.height - viewportSize;\r\n            }\r\n            newScroll = {\r\n                x: model.scroll.x,\r\n                y: modelBounds.y + (position / scrollbarRect.height) * modelBounds.height\r\n            };\r\n            if (newScroll.y < this.viewerOptions.verticalScrollLimits.min) {\r\n                newScroll.y = this.viewerOptions.verticalScrollLimits.min;\r\n            } else if (newScroll.y > this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom) {\r\n                newScroll.y = this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom;\r\n            }\r\n            if (almostEquals(newScroll.y, model.scroll.y)) {\r\n                return [];\r\n            }\r\n        }\r\n        return [SetViewportAction.create(model.id, { scroll: newScroll, zoom: model.zoom }, { animate })];\r\n    }\r\n\r\n    protected getScrollbar(event: MouseEvent): HTMLElement | undefined {\r\n        return findViewportScrollbar(event);\r\n    }\r\n\r\n    protected getScrollbarOrientation(scrollbar: HTMLElement): 'horizontal' | 'vertical' {\r\n        if (scrollbar.classList.contains('horizontal')) {\r\n            return 'horizontal';\r\n        } else {\r\n            return 'vertical';\r\n        }\r\n    }\r\n\r\n    protected findClickTarget(scrollbar: HTMLElement, event: MouseEvent): HTMLElement | undefined {\r\n        const matching = Array.from(scrollbar.children).filter(child =>\r\n            child.id && child.classList.contains('sprotty-projection') && hitsMouseEvent(child, event)\r\n        ) as HTMLElement[];\r\n        if (matching.length > 0) {\r\n            return matching[matching.length - 1];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n}\r\n\r\nexport function findViewportScrollbar(event: MouseEvent): HTMLElement | undefined {\r\n    let element = event.target as HTMLElement | null;\r\n    while (element) {\r\n        if (element.classList && element.classList.contains('sprotty-projection-bar')) {\r\n            return element;\r\n        }\r\n        element = element.parentElement;\r\n    }\r\n    return undefined;\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { Action, BringToFrontAction, GetSelectionAction, ResponseAction, SelectAction, SelectAllAction, SelectionResult } from 'sprotty-protocol/lib/actions';\r\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\r\nimport { ModelRequestCommand } from '../../base/commands/request-command';\r\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { findParentByFeature } from '../../base/model/smodel-utils';\r\nimport { TYPES } from '../../base/types';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { MouseListener } from '../../base/views/mouse-tool';\r\nimport { setClass } from '../../base/views/vnode-utils';\r\nimport { isCtrlOrCmd } from '../../utils/browser';\r\nimport { toArray } from '../../utils/iterable';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { ButtonHandlerRegistry } from '../button/button-handler';\r\nimport { SButtonImpl } from '../button/model';\r\nimport { SwitchEditModeAction } from '../edit/edit-routing';\r\nimport { SRoutingHandleImpl } from '../routing/model';\r\nimport { SRoutableElementImpl } from '../routing/model';\r\nimport { findViewportScrollbar } from '../viewport/scroll';\r\nimport { isSelectable, Selectable } from './model';\r\n\r\n@injectable()\r\nexport class SelectCommand extends Command {\r\n    static readonly KIND = SelectAction.KIND;\r\n\r\n    protected selected: (SChildElementImpl & Selectable)[] = [];\r\n    protected deselected: (SChildElementImpl & Selectable)[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) public action: SelectAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): SModelRootImpl {\r\n        const model = context.root;\r\n        this.action.selectedElementsIDs.forEach(id => {\r\n            const element = model.index.getById(id);\r\n            if (element instanceof SChildElementImpl && isSelectable(element)) {\r\n                this.selected.push(element);\r\n            }\r\n        });\r\n        this.action.deselectedElementsIDs.forEach(id => {\r\n            const element = model.index.getById(id);\r\n            if (element instanceof SChildElementImpl && isSelectable(element)) {\r\n                this.deselected.push(element);\r\n            }\r\n        });\r\n        return this.redo(context);\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): SModelRootImpl {\r\n        for (const element of this.selected) {\r\n            element.selected = false;\r\n        }\r\n        for (const element of this.deselected) {\r\n            element.selected = true;\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): SModelRootImpl {\r\n        for (const element of this.deselected) {\r\n            element.selected = false;\r\n        }\r\n        for (const element of this.selected) {\r\n            element.selected = true;\r\n        }\r\n        return context.root;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SelectAllCommand extends Command {\r\n    static readonly KIND = SelectAllAction.KIND;\r\n\r\n    protected previousSelection: Record<string, boolean> = {};\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SelectAllAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): SModelRootImpl {\r\n        this.selectAll(context.root, this.action.select);\r\n        return context.root;\r\n    }\r\n\r\n    protected selectAll(element: SParentElementImpl, newState: boolean): void {\r\n        if (isSelectable(element)) {\r\n            this.previousSelection[element.id] = element.selected;\r\n            element.selected = newState;\r\n        }\r\n        for (const child of element.children) {\r\n            this.selectAll(child, newState);\r\n        }\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): SModelRootImpl {\r\n        const index = context.root.index;\r\n        Object.keys(this.previousSelection).forEach(id => {\r\n            const element = index.getById(id);\r\n            if (element !== undefined && isSelectable(element))\r\n                element.selected = this.previousSelection[id];\r\n        });\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): SModelRootImpl {\r\n        this.selectAll(context.root, this.action.select);\r\n        return context.root;\r\n    }\r\n}\r\n\r\nexport class SelectMouseListener extends MouseListener {\r\n\r\n    @inject(ButtonHandlerRegistry) @optional() protected buttonHandlerRegistry: ButtonHandlerRegistry;\r\n\r\n    wasSelected = false;\r\n    hasDragged = false;\r\n\r\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        if (event.button !== 0) {\r\n            return [];\r\n        }\r\n        const buttonHandled = this.handleButton(target, event);\r\n        if (buttonHandled) {\r\n            return buttonHandled;\r\n        }\r\n        const selectableTarget = findParentByFeature(target, isSelectable);\r\n        if (selectableTarget !== undefined || target instanceof SModelRootImpl) {\r\n            this.hasDragged = false;\r\n        }\r\n        if (selectableTarget !== undefined) {\r\n            let deselectedElements: SModelElementImpl[] = [];\r\n            // multi-selection?\r\n            if (!isCtrlOrCmd(event)) {\r\n                deselectedElements = this.collectElementsToDeselect(target, selectableTarget);\r\n            }\r\n            if (selectableTarget !== undefined) {\r\n                if (!selectableTarget.selected) {\r\n                    this.wasSelected = false;\r\n                    return this.handleSelectTarget(selectableTarget, deselectedElements, event);\r\n                } else if (isCtrlOrCmd(event)) {\r\n                    this.wasSelected = false;\r\n                    return this.handleDeselectTarget(selectableTarget, event);\r\n                } else {\r\n                    this.wasSelected = true;\r\n                }\r\n            } else {\r\n                return this.handleDeselectAll(deselectedElements, event);\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    protected collectElementsToDeselect(target: SModelElementImpl, selectableTarget: (SModelElementImpl & Selectable) | undefined): SModelElementImpl[] {\r\n        return toArray(target.root.index.all()\r\n        .filter(element => isSelectable(element) && element.selected\r\n            && !(selectableTarget instanceof SRoutingHandleImpl && element === selectableTarget.parent as SModelElementImpl)));\r\n    }\r\n\r\n    protected handleButton(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] | undefined {\r\n        if (this.buttonHandlerRegistry !== undefined && target instanceof SButtonImpl && target.enabled) {\r\n            const buttonHandler = this.buttonHandlerRegistry.get(target.type);\r\n            if (buttonHandler !== undefined) {\r\n                return buttonHandler.buttonPressed(target);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected handleSelectTarget(selectableTarget: SModelElementImpl & Selectable, deselectedElements: SModelElementImpl[], event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: Action[] = [];\r\n        result.push(SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs: deselectedElements.map(e => e.id) }));\r\n        result.push(BringToFrontAction.create([selectableTarget.id]));\r\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElementImpl).map(e => e.id);\r\n        if (selectableTarget instanceof SRoutableElementImpl) {\r\n            result.push(SwitchEditModeAction.create({ elementsToActivate: [selectableTarget.id], elementsToDeactivate: routableDeselect }));\r\n        } else if (routableDeselect.length > 0) {\r\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected handleDeselectTarget(selectableTarget: SModelElementImpl & Selectable, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: Action[] = [];\r\n        result.push(SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: [selectableTarget.id] }));\r\n        if (selectableTarget instanceof SRoutableElementImpl) {\r\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected handleDeselectAll(deselectedElements: SModelElementImpl[], event: MouseEvent): (Action | Promise<Action>)[] {\r\n        const result: Action[] = [];\r\n        result.push(SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: deselectedElements.map(e => e.id) }));\r\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElementImpl).map(e => e.id);\r\n        if (routableDeselect.length > 0) {\r\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\r\n        this.hasDragged = true;\r\n        return [];\r\n    }\r\n\r\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\r\n        if (event.button === 0) {\r\n            if (!this.hasDragged) {\r\n                const selectableTarget = findParentByFeature(target, isSelectable);\r\n                if (selectableTarget !== undefined) {\r\n                    if (this.wasSelected) {\r\n                        return [SelectAction.create({selectedElementsIDs:[selectableTarget.id],deselectedElementsIDs:[]})];\r\n                    }\r\n                } else if (target instanceof SModelRootImpl && !findViewportScrollbar(event)) {\r\n                    // Mouse up on root but not over ViewPort's scroll bars > deselect all\r\n                    return this.handleDeselectAll(this.collectElementsToDeselect(target, undefined), event);\r\n                }\r\n            }\r\n        }\r\n        this.hasDragged = false;\r\n        return [];\r\n    }\r\n\r\n    override decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        const selectableTarget = findParentByFeature(element, isSelectable);\r\n        if (selectableTarget !== undefined) {\r\n            setClass(vnode, 'selected', selectableTarget.selected);\r\n        }\r\n        return vnode;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class GetSelectionCommand extends ModelRequestCommand {\r\n    static readonly KIND = GetSelectionAction.KIND;\r\n\r\n    protected previousSelection: Record<string, boolean> = {};\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: GetSelectionAction) {\r\n        super();\r\n    }\r\n\r\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\r\n        const selection = context.root.index.all()\r\n            .filter(e => isSelectable(e) && e.selected)\r\n            .map(e => e.id);\r\n        return SelectionResult.create(toArray(selection), this.action.requestId);\r\n    }\r\n\r\n}\r\n\r\nexport class SelectKeyboardListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'KeyA', 'ctrlCmd')) {\r\n            return [ SelectAllAction.create()];\r\n        }\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Action, UndoAction, RedoAction } from 'sprotty-protocol/lib/actions';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { SModelElementImpl } from '../../base/model/smodel';\r\nimport { isMac } from '../../utils/browser';\r\n\r\nexport class UndoRedoKeyListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd'))\r\n            return [UndoAction.create()];\r\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd', 'shift') || (!isMac() && matchesKeystroke(event, 'KeyY', 'ctrlCmd')))\r\n            return [RedoAction.create()];\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElement, SModelRoot } from 'sprotty-protocol/lib/model';\r\nimport { SModelRootImpl, SModelElementImpl, isParent, IModelIndex } from '../../base/model/smodel';\r\nimport { SModelIndex } from 'sprotty-protocol';\r\n\r\nexport interface Match {\r\n    left?: SModelElement\r\n    right?: SModelElement\r\n    leftParentId?: string\r\n    rightParentId?: string\r\n}\r\n\r\nexport interface MatchResult {\r\n    [id: string]: Match\r\n}\r\n\r\nexport function forEachMatch(matchResult: MatchResult, callback: (id: string, match: Match) => void): void {\r\n    Object.keys(matchResult).forEach(id => callback(id, matchResult[id]));\r\n}\r\n\r\nexport class ModelMatcher {\r\n    match(left: SModelRoot | SModelRootImpl, right: SModelRoot | SModelRootImpl): MatchResult {\r\n        const result: MatchResult = {};\r\n        this.matchLeft(left, result);\r\n        this.matchRight(right, result);\r\n        return result;\r\n    }\r\n\r\n    protected matchLeft(element: SModelElement | SModelElementImpl, result: MatchResult, parentId?: string): void {\r\n        let match = result[element.id];\r\n        if (match !== undefined) {\r\n            match.left = element;\r\n            match.leftParentId = parentId;\r\n        } else {\r\n            match = {\r\n                left: element,\r\n                leftParentId: parentId\r\n            };\r\n            result[element.id] = match;\r\n        }\r\n        if (isParent(element)) {\r\n            for (const child of element.children) {\r\n                this.matchLeft(child, result, element.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected matchRight(element: SModelElement | SModelElementImpl, result: MatchResult, parentId?: string) {\r\n        let match = result[element.id];\r\n        if (match !== undefined) {\r\n            match.right = element;\r\n            match.rightParentId = parentId;\r\n        } else {\r\n            match = {\r\n                right: element,\r\n                rightParentId: parentId\r\n            };\r\n            result[element.id] = match;\r\n        }\r\n        if (isParent(element)) {\r\n            for (const child of element.children) {\r\n                this.matchRight(child, result, element.id);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function applyMatches(root: SModelRoot, matches: Match[], index?: IModelIndex): void {\r\n    if (root instanceof SModelRootImpl) {\r\n        index = root.index;\r\n    } else if (index === undefined) {\r\n        index = new SModelIndex();\r\n        index.add(root);\r\n    }\r\n    for (const match of matches) {\r\n        let newElementInserted = false;\r\n        if (match.left !== undefined && match.leftParentId !== undefined) {\r\n            const parent = index.getById(match.leftParentId);\r\n            if (parent !== undefined && parent.children !== undefined) {\r\n                const i = parent.children.indexOf(match.left);\r\n                if (i >= 0) {\r\n                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {\r\n                        parent.children.splice(i, 1, match.right);\r\n                        newElementInserted = true;\r\n                    } else {\r\n                        parent.children.splice(i, 1);\r\n                    }\r\n                }\r\n                index.remove(match.left);\r\n            }\r\n        }\r\n        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {\r\n            const parent = index.getById(match.rightParentId);\r\n            if (parent !== undefined) {\r\n                if (parent.children === undefined)\r\n                    parent.children = [];\r\n                parent.children.push(match.right);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Dimension } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { Animation } from \"../../base/animations/animation\";\r\nimport { SModelRootImpl, SModelElementImpl } from \"../../base/model/smodel\";\r\nimport { CommandExecutionContext } from \"../../base/commands/command\";\r\nimport { BoundsAware } from './model';\r\n\r\nexport interface ResolvedElementResize {\r\n    element: SModelElementImpl & BoundsAware\r\n    fromDimension: Dimension\r\n    toDimension: Dimension\r\n}\r\n\r\nexport class ResizeAnimation extends Animation {\r\n    constructor(protected model: SModelRootImpl,\r\n        public elementResizes: Map<string, ResolvedElementResize>,\r\n        context: CommandExecutionContext,\r\n        protected reverse: boolean = false) {\r\n        super(context);\r\n    }\r\n\r\n    tween(t: number) {\r\n        this.elementResizes.forEach(\r\n            (elementResize) => {\r\n                const element = elementResize.element;\r\n                const newDimension: Dimension = (this.reverse) ? {\r\n                        width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,\r\n                        height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height\r\n                    } : {\r\n                        width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,\r\n                        height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height\r\n                    };\r\n                element.bounds = {\r\n                    x: element.bounds.x,\r\n                    y: element.bounds.y,\r\n                    width: newDimension.width,\r\n                    height: newDimension.height\r\n                };\r\n            }\r\n        );\r\n        return this.model;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2022 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject, optional } from 'inversify';\r\nimport { UpdateModelAction } from 'sprotty-protocol/lib/actions';\r\nimport { almostEquals, Dimension } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\r\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\r\nimport { FadeAnimation, ResolvedElementFade } from '../fade/fade';\r\nimport { SModelRootImpl, SChildElementImpl, SModelElementImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { MoveAnimation, ResolvedElementMove, MorphEdgesAnimation } from '../move/move';\r\nimport { Fadeable, isFadeable } from '../fade/model';\r\nimport { isLocateable } from '../move/model';\r\nimport { isSizeable } from '../bounds/model';\r\nimport { ViewportRootElementImpl } from '../viewport/viewport-root';\r\nimport { isSelectable } from '../select/model';\r\nimport { MatchResult, ModelMatcher, Match, forEachMatch } from './model-matching';\r\nimport { ResolvedElementResize, ResizeAnimation } from '../bounds/resize';\r\nimport { TYPES } from '../../base/types';\r\nimport { isViewport } from '../viewport/model';\r\nimport { EdgeRouterRegistry, EdgeSnapshot, EdgeMemento } from '../routing/routing';\r\nimport { SRoutableElementImpl } from '../routing/model';\r\nimport { containsSome } from '../../base/model/smodel-utils';\r\n\r\n\r\nexport interface UpdateAnimationData {\r\n    fades: ResolvedElementFade[]\r\n    moves?: ResolvedElementMove[]\r\n    resizes?: ResolvedElementResize[]\r\n    edgeMementi?: EdgeMemento[]\r\n}\r\n\r\n@injectable()\r\nexport class UpdateModelCommand extends Command {\r\n    static readonly KIND = UpdateModelAction.KIND;\r\n\r\n    oldRoot: SModelRootImpl;\r\n    newRoot: SModelRootImpl;\r\n\r\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: UpdateModelAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        let newRoot: SModelRootImpl;\r\n        if (this.action.newRoot !== undefined) {\r\n            newRoot = context.modelFactory.createRoot(this.action.newRoot);\r\n        } else {\r\n            newRoot = context.modelFactory.createRoot(context.root);\r\n            if (this.action.matches !== undefined)\r\n                this.applyMatches(newRoot, this.action.matches, context);\r\n        }\r\n        this.oldRoot = context.root;\r\n        this.newRoot = newRoot;\r\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\r\n    }\r\n\r\n    protected performUpdate(oldRoot: SModelRootImpl, newRoot: SModelRootImpl, context: CommandExecutionContext): CommandReturn {\r\n        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {\r\n            let matchResult: MatchResult;\r\n            if (this.action.matches === undefined) {\r\n                const matcher = new ModelMatcher();\r\n                matchResult = matcher.match(oldRoot, newRoot);\r\n            } else {\r\n                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);\r\n            }\r\n            const animationOrRoot = this.computeAnimation(newRoot, matchResult, context);\r\n            if (animationOrRoot instanceof Animation)\r\n                return animationOrRoot.start();\r\n            else\r\n                return animationOrRoot;\r\n        } else {\r\n            if (oldRoot.type === newRoot.type && Dimension.isValid(oldRoot.canvasBounds))\r\n                newRoot.canvasBounds = oldRoot.canvasBounds;\r\n            if (isViewport(oldRoot) && isViewport(newRoot)) {\r\n                newRoot.zoom = oldRoot.zoom;\r\n                newRoot.scroll = oldRoot.scroll;\r\n            }\r\n            return newRoot;\r\n        }\r\n    }\r\n\r\n    protected applyMatches(root: SModelRootImpl, matches: Match[], context: CommandExecutionContext): void {\r\n        const index = root.index;\r\n        for (const match of matches) {\r\n            if (match.left !== undefined) {\r\n                const element = index.getById(match.left.id);\r\n                if (element instanceof SChildElementImpl)\r\n                    element.parent.remove(element);\r\n            }\r\n        }\r\n        for (const match of matches) {\r\n            if (match.right !== undefined) {\r\n                const element = context.modelFactory.createElement(match.right);\r\n                let parent: SModelElementImpl | undefined;\r\n                if (match.rightParentId !== undefined)\r\n                    parent = index.getById(match.rightParentId);\r\n                if (parent instanceof SParentElementImpl)\r\n                    parent.add(element);\r\n                else\r\n                    root.add(element);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected convertToMatchResult(matches: Match[], leftRoot: SModelRootImpl, rightRoot: SModelRootImpl): MatchResult {\r\n        const result: MatchResult = {};\r\n        for (const match of matches) {\r\n            const converted: Match = {};\r\n            let id: string | undefined = undefined;\r\n            if (match.left !== undefined) {\r\n                id = match.left.id;\r\n                converted.left = leftRoot.index.getById(id);\r\n                converted.leftParentId = match.leftParentId;\r\n            }\r\n            if (match.right !== undefined) {\r\n                id = match.right.id;\r\n                converted.right = rightRoot.index.getById(id);\r\n                converted.rightParentId = match.rightParentId;\r\n            }\r\n            if (id !== undefined)\r\n                result[id] = converted;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected computeAnimation(newRoot: SModelRootImpl, matchResult: MatchResult, context: CommandExecutionContext): SModelRootImpl | Animation {\r\n        const animationData: UpdateAnimationData = {\r\n            fades: [] as ResolvedElementFade[]\r\n        };\r\n        forEachMatch(matchResult, (id, match) => {\r\n            if (match.left !== undefined && match.right !== undefined) {\r\n                // The element is still there, but may have been moved\r\n                this.updateElement(match.left as SModelElementImpl, match.right as SModelElementImpl, animationData);\r\n            } else if (match.right !== undefined) {\r\n                // An element has been added\r\n                const right = match.right as SModelElementImpl;\r\n                if (isFadeable(right)) {\r\n                    right.opacity = 0;\r\n                    animationData.fades.push({\r\n                        element: right,\r\n                        type: 'in'\r\n                    });\r\n                }\r\n            } else if (match.left instanceof SChildElementImpl) {\r\n                // An element has been removed\r\n                const left = match.left;\r\n                if (isFadeable(left) && match.leftParentId !== undefined) {\r\n                    if (!containsSome(newRoot, left)) {\r\n                        const parent = newRoot.index.getById(match.leftParentId);\r\n                        if (parent instanceof SParentElementImpl) {\r\n                            const leftCopy = context.modelFactory.createElement(left) as SChildElementImpl & Fadeable;\r\n                            parent.add(leftCopy);\r\n                            animationData.fades.push({\r\n                                element: leftCopy,\r\n                                type: 'out'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        const animations = this.createAnimations(animationData, newRoot, context);\r\n        if (animations.length >= 2) {\r\n            return new CompoundAnimation(newRoot, context, animations);\r\n        } else if (animations.length === 1) {\r\n            return animations[0];\r\n        } else {\r\n            return newRoot;\r\n        }\r\n    }\r\n\r\n    protected updateElement(left: SModelElementImpl, right: SModelElementImpl, animationData: UpdateAnimationData): void {\r\n        if (isLocateable(left) && isLocateable(right)) {\r\n            const leftPos = left.position;\r\n            const rightPos = right.position;\r\n            if (!almostEquals(leftPos.x, rightPos.x) || !almostEquals(leftPos.y, rightPos.y)) {\r\n                if (animationData.moves === undefined)\r\n                    animationData.moves = [];\r\n                animationData.moves.push({\r\n                    element: right,\r\n                    fromPosition: leftPos,\r\n                    toPosition: rightPos\r\n                });\r\n                right.position = leftPos;\r\n            }\r\n        }\r\n        if (isSizeable(left) && isSizeable(right)) {\r\n            if (!Dimension.isValid(right.bounds)) {\r\n                right.bounds = {\r\n                    x: right.bounds.x,\r\n                    y: right.bounds.y,\r\n                    width: left.bounds.width,\r\n                    height: left.bounds.height\r\n                };\r\n            } else if (!almostEquals(left.bounds.width, right.bounds.width)\r\n                || !almostEquals(left.bounds.height, right.bounds.height)) {\r\n                if (animationData.resizes === undefined)\r\n                    animationData.resizes = [];\r\n                animationData.resizes.push({\r\n                    element: right,\r\n                    fromDimension: {\r\n                        width: left.bounds.width,\r\n                        height: left.bounds.height,\r\n                    },\r\n                    toDimension: {\r\n                        width: right.bounds.width,\r\n                        height: right.bounds.height,\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (left instanceof SRoutableElementImpl && right instanceof SRoutableElementImpl && this.edgeRouterRegistry) {\r\n            if (animationData.edgeMementi === undefined)\r\n                animationData.edgeMementi = [];\r\n            animationData.edgeMementi.push({\r\n                edge: right,\r\n                before: this.takeSnapshot(left),\r\n                after: this.takeSnapshot(right),\r\n            });\r\n        }\r\n        if (isSelectable(left) && isSelectable(right)) {\r\n            right.selected = left.selected;\r\n        }\r\n        if (left instanceof SModelRootImpl && right instanceof SModelRootImpl) {\r\n            right.canvasBounds = left.canvasBounds;\r\n        }\r\n        if (left instanceof ViewportRootElementImpl && right instanceof ViewportRootElementImpl) {\r\n            right.scroll = left.scroll;\r\n            right.zoom = left.zoom;\r\n        }\r\n    }\r\n\r\n    protected takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot {\r\n        const router = this.edgeRouterRegistry!.get(edge.routerKind);\r\n        return router.takeSnapshot(edge);\r\n    }\r\n\r\n    protected createAnimations(data: UpdateAnimationData, root: SModelRootImpl, context: CommandExecutionContext): Animation[] {\r\n        const animations: Animation[] = [];\r\n        if (data.fades.length > 0) {\r\n            animations.push(new FadeAnimation(root, data.fades, context, true));\r\n        }\r\n        if (data.moves !== undefined && data.moves.length > 0) {\r\n            const movesMap: Map<string, ResolvedElementMove> = new Map;\r\n            for (const move of data.moves) {\r\n                movesMap.set(move.element.id, move);\r\n            }\r\n            animations.push(new MoveAnimation(root, movesMap, context, false));\r\n        }\r\n        if (data.resizes !== undefined && data.resizes.length > 0) {\r\n            const resizesMap: Map<string, ResolvedElementResize> = new Map;\r\n            for (const resize of data.resizes) {\r\n                resizesMap.set(resize.element.id, resize);\r\n            }\r\n            animations.push(new ResizeAnimation(root, resizesMap, context, false));\r\n        }\r\n        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {\r\n            animations.push(new MorphEdgesAnimation(root, data.edgeMementi, context, false));\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return this.performUpdate(this.newRoot, this.oldRoot, context);\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2023 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from 'inversify';\r\nimport { GetViewportAction, ResponseAction, SetViewportAction, ViewportResult } from 'sprotty-protocol/lib/actions';\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { MergeableCommand, ICommand, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { Animation } from '../../base/animations/animation';\r\nimport { isViewport, limitViewport } from './model';\r\nimport { TYPES } from '../../base/types';\r\nimport { ModelRequestCommand } from '../../base/commands/request-command';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\n\r\n@injectable()\r\nexport class SetViewportCommand extends MergeableCommand {\r\n    static readonly KIND = SetViewportAction.KIND;\r\n\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n    protected element: SModelElementImpl & Viewport;\r\n    protected oldViewport: Viewport;\r\n    protected newViewport: Viewport;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: SetViewportAction) {\r\n        super();\r\n        this.newViewport = action.newViewport;\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        const model = context.root;\r\n        const element = model.index.getById(this.action.elementId);\r\n        if (element && isViewport(element)) {\r\n            this.element = element;\r\n            this.oldViewport = {\r\n                scroll: this.element.scroll,\r\n                zoom: this.element.zoom,\r\n            };\r\n            const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;\r\n            this.newViewport = limitViewport(this.newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);\r\n            return this.setViewport(element, this.oldViewport, this.newViewport, context);\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    protected setViewport(element: SModelElementImpl, oldViewport: Viewport, newViewport: Viewport, context: CommandExecutionContext): CommandReturn {\r\n        if (element && isViewport(element)) {\r\n            if (this.action.animate) {\r\n                return new ViewportAnimation(element, oldViewport, newViewport, context).start();\r\n            } else {\r\n                element.scroll = newViewport.scroll;\r\n                element.zoom = newViewport.zoom;\r\n            }\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        return this.setViewport(this.element, this.newViewport, this.oldViewport, context);\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        return this.setViewport(this.element, this.oldViewport, this.newViewport, context);\r\n    }\r\n\r\n    override merge(command: ICommand, context: CommandExecutionContext): boolean {\r\n        if (!this.action.animate && command instanceof SetViewportCommand && this.element === command.element) {\r\n            this.newViewport = command.newViewport;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class GetViewportCommand extends ModelRequestCommand {\r\n    static readonly KIND = GetViewportAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: GetViewportAction) {\r\n        super();\r\n    }\r\n\r\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\r\n        const elem = context.root;\r\n        let viewport: Viewport;\r\n        if (isViewport(elem)) {\r\n            viewport = { scroll: elem.scroll, zoom: elem.zoom };\r\n        } else {\r\n            viewport = { scroll: Point.ORIGIN, zoom: 1 };\r\n        }\r\n        return ViewportResult.create(viewport, elem.canvasBounds, this.action.requestId);\r\n    }\r\n}\r\n\r\nexport class ViewportAnimation extends Animation {\r\n\r\n    protected zoomFactor: number;\r\n\r\n    constructor(protected element: SModelElementImpl & Viewport,\r\n                protected oldViewport: Viewport,\r\n                protected newViewport: Viewport,\r\n                protected override context: CommandExecutionContext) {\r\n        super(context);\r\n        this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);\r\n    }\r\n\r\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\r\n        this.element.scroll = {\r\n            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,\r\n            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y\r\n        };\r\n        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);\r\n        return context.root;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2023 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Action, CenterAction, FitToScreenAction } from 'sprotty-protocol/lib/actions';\r\nimport { Viewport } from 'sprotty-protocol/lib/model';\r\nimport { almostEquals, Bounds, Dimension } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { matchesKeystroke } from '../../utils/keyboard';\r\nimport { SChildElementImpl } from '../../base/model/smodel';\r\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\r\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\r\nimport { KeyListener } from '../../base/views/key-tool';\r\nimport { isBoundsAware } from '../bounds/model';\r\nimport { isSelectable } from '../select/model';\r\nimport { ViewportAnimation } from './viewport';\r\nimport { isViewport, limitViewport } from './model';\r\nimport { injectable, inject } from 'inversify';\r\nimport { TYPES } from '../../base/types';\r\nimport { ViewerOptions } from '../../base/views/viewer-options';\r\n\r\n@injectable()\r\nexport abstract class BoundsAwareViewportCommand extends Command {\r\n\r\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\r\n    oldViewport: Viewport;\r\n    newViewport?: Viewport;\r\n\r\n    constructor(protected readonly animate: boolean) {\r\n        super();\r\n    }\r\n\r\n    protected initialize(model: SModelRootImpl): void {\r\n        if (!isViewport(model)) {\r\n            return;\r\n        }\r\n        this.oldViewport = {\r\n            scroll: model.scroll,\r\n            zoom: model.zoom\r\n        };\r\n        const allBounds: Bounds[] = [];\r\n        this.getElementIds().forEach(id => {\r\n            const element = model.index.getById(id);\r\n            if (element && isBoundsAware(element)) {\r\n                allBounds.push(this.boundsInViewport(element, element.bounds, model));\r\n            }\r\n        });\r\n        if (allBounds.length === 0) {\r\n            model.index.all().forEach(element => {\r\n                if (isSelectable(element) && element.selected && isBoundsAware(element)) {\r\n                    allBounds.push(this.boundsInViewport(element, element.bounds, model));\r\n                }\r\n            });\r\n        }\r\n        if (allBounds.length === 0) {\r\n            model.index.all().forEach(element => {\r\n                if (isBoundsAware(element)) {\r\n                    allBounds.push(this.boundsInViewport(element, element.bounds, model));\r\n                }\r\n            });\r\n        }\r\n        if (allBounds.length !== 0) {\r\n            const bounds = allBounds.reduce((b0, b1) => Bounds.combine(b0, b1));\r\n            if (Dimension.isValid(bounds)) {\r\n                const newViewport = this.getNewViewport(bounds, model);\r\n                if (newViewport) {\r\n                    const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;\r\n                    this.newViewport = limitViewport(newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected boundsInViewport(element: SModelElementImpl, bounds: Bounds, viewport: SModelRootImpl & Viewport): Bounds {\r\n        if (element instanceof SChildElementImpl && element.parent !== viewport)\r\n            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds) as Bounds, viewport);\r\n        else\r\n            return bounds;\r\n    }\r\n\r\n    protected abstract getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined;\r\n\r\n    protected abstract getElementIds(): string[];\r\n\r\n    execute(context: CommandExecutionContext): CommandReturn {\r\n        this.initialize(context.root);\r\n        return this.redo(context);\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): CommandReturn {\r\n        const model = context.root;\r\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\r\n            if (this.animate)\r\n                return new ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();\r\n            else {\r\n                model.scroll = this.oldViewport.scroll;\r\n                model.zoom = this.oldViewport.zoom;\r\n            }\r\n        }\r\n        return model;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): CommandReturn {\r\n        const model = context.root;\r\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\r\n            if (this.animate) {\r\n               return new ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();\r\n            } else {\r\n                model.scroll = this.newViewport.scroll;\r\n                model.zoom = this.newViewport.zoom;\r\n            }\r\n        }\r\n        return model;\r\n    }\r\n\r\n    protected equal(vp1: Viewport, vp2: Viewport): boolean {\r\n        return almostEquals(vp1.zoom, vp2.zoom) && almostEquals(vp1.scroll.x, vp2.scroll.x) && almostEquals(vp1.scroll.y, vp2.scroll.y);\r\n    }\r\n}\r\n\r\nexport class CenterCommand extends BoundsAwareViewportCommand {\r\n    static readonly KIND = CenterAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected action: CenterAction) {\r\n        super(action.animate);\r\n    }\r\n\r\n    getElementIds() {\r\n        return this.action.elementIds;\r\n    }\r\n\r\n    getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined {\r\n        if (!Dimension.isValid(model.canvasBounds)) {\r\n            return undefined;\r\n        }\r\n        let zoom = 1;\r\n        if (this.action.retainZoom && isViewport(model)) {\r\n            zoom = model.zoom;\r\n        } else if (this.action.zoomScale) {\r\n            zoom = this.action.zoomScale;\r\n        }\r\n        const c = Bounds.center(bounds);\r\n        return {\r\n            scroll: {\r\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\r\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\r\n            },\r\n            zoom: zoom\r\n        };\r\n    }\r\n}\r\n\r\nexport class FitToScreenCommand extends BoundsAwareViewportCommand {\r\n    static readonly KIND = FitToScreenAction.KIND;\r\n\r\n    constructor(@inject(TYPES.Action) protected readonly action: FitToScreenAction) {\r\n        super(action.animate);\r\n    }\r\n\r\n    getElementIds() {\r\n        return this.action.elementIds;\r\n    }\r\n\r\n    getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined {\r\n        if (!Dimension.isValid(model.canvasBounds)) {\r\n            return undefined;\r\n        }\r\n        const c = Bounds.center(bounds);\r\n        const delta = this.action.padding === undefined\r\n            ? 0\r\n            : 2 *  this.action.padding;\r\n        let zoom = Math.min(\r\n            model.canvasBounds.width / (bounds.width + delta),\r\n            model.canvasBounds.height / (bounds.height + delta));\r\n        if (this.action.maxZoom !== undefined)\r\n           zoom = Math.min(zoom, this.action.maxZoom);\r\n        if (zoom === Infinity) {\r\n            zoom = 1;\r\n        }\r\n        return {\r\n            scroll: {\r\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\r\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\r\n            },\r\n            zoom: zoom\r\n        };\r\n    }\r\n}\r\n\r\nexport class CenterKeyboardListener extends KeyListener {\r\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\r\n        if (matchesKeystroke(event, 'KeyC', 'ctrlCmd', 'shift'))\r\n            return [CenterAction.create([])];\r\n        if (matchesKeystroke(event, 'KeyF', 'ctrlCmd', 'shift'))\r\n            return [FitToScreenAction.create([])];\r\n        return [];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from 'inversify';\r\nimport { BringToFrontAction } from 'sprotty-protocol/lib/actions';\r\nimport { TYPES } from '../../base/types';\r\nimport { SModelRootImpl, SChildElementImpl, SModelElementImpl, SParentElementImpl } from '../../base/model/smodel';\r\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\r\nimport { SRoutableElementImpl, SConnectableElementImpl } from '../routing/model';\r\n\r\nexport type ZOrderElement = {\r\n    element: SChildElementImpl\r\n    index: number\r\n};\r\n\r\n@injectable()\r\nexport class BringToFrontCommand extends Command {\r\n    static readonly KIND = BringToFrontAction.KIND;\r\n\r\n    protected selected: ZOrderElement[] = [];\r\n\r\n    constructor(@inject(TYPES.Action) public action: BringToFrontAction) {\r\n        super();\r\n    }\r\n\r\n    execute(context: CommandExecutionContext): SModelRootImpl {\r\n        const model = context.root;\r\n        this.action.elementIDs.forEach(id => {\r\n            const element = model.index.getById(id);\r\n            if (element instanceof SRoutableElementImpl) {\r\n                if (element.source)\r\n                    this.addToSelection(element.source);\r\n                if (element.target)\r\n                    this.addToSelection(element.target);\r\n            }\r\n            if (element instanceof SChildElementImpl) {\r\n                this.addToSelection(element);\r\n            }\r\n            this.includeConnectedEdges(element);\r\n        });\r\n        return this.redo(context);\r\n    }\r\n\r\n    protected includeConnectedEdges(element?: SModelElementImpl): void {\r\n        if (element instanceof SConnectableElementImpl) {\r\n            element.incomingEdges.forEach(edge => this.addToSelection(edge));\r\n            element.outgoingEdges.forEach(edge => this.addToSelection(edge));\r\n        }\r\n        if (element instanceof SParentElementImpl) {\r\n            for (const child of element.children) {\r\n                this.includeConnectedEdges(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected addToSelection(element: SChildElementImpl): void {\r\n        this.selected.push({\r\n            element: element,\r\n            index: element.parent.children.indexOf(element)\r\n        });\r\n    }\r\n\r\n    undo(context: CommandExecutionContext): SModelRootImpl {\r\n        for (let i = this.selected.length - 1; i >= 0; i--) {\r\n            const selection = this.selected[i];\r\n            const element = selection.element;\r\n            element.parent.move(element, selection.index);\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    redo(context: CommandExecutionContext): SModelRootImpl {\r\n        for (let i = 0; i < this.selected.length; i++) {\r\n            this.bringToFront(this.selected[i]);\r\n        }\r\n        return context.root;\r\n    }\r\n\r\n    protected bringToFront(selection: ZOrderElement) {\r\n        const element = selection.element;\r\n        const childrenLength = element.parent.children.length;\r\n        element.parent.move(element, childrenLength - 1);\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { SetBoundsCommand, RequestBoundsCommand } from \"./bounds-manipulation\";\r\nimport { HiddenBoundsUpdater } from './hidden-bounds-updater';\r\nimport { configureLayout, Layouter, LayoutRegistry } from \"./layout\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\nimport { HBoxLayouter } from \"./hbox-layout\";\r\nimport { VBoxLayouter } from \"./vbox-layout\";\r\nimport { StackLayouter} from \"./stack-layout\";\r\n\r\nconst boundsModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    configureCommand({ bind, isBound }, SetBoundsCommand);\r\n    configureCommand({ bind, isBound }, RequestBoundsCommand);\r\n    bind(HiddenBoundsUpdater).toSelf().inSingletonScope();\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(HiddenBoundsUpdater);\r\n    bind(TYPES.Layouter).to(Layouter).inSingletonScope();\r\n    bind(TYPES.LayoutRegistry).to(LayoutRegistry).inSingletonScope();\r\n\r\n    configureLayout({bind, isBound}, VBoxLayouter.KIND, VBoxLayouter);\r\n    configureLayout({bind, isBound}, HBoxLayouter.KIND, HBoxLayouter);\r\n    configureLayout({bind, isBound}, StackLayouter.KIND, StackLayouter);\r\n});\r\n\r\nexport default boundsModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { ButtonHandlerRegistry } from './button-handler';\r\n\r\nconst buttonModule = new ContainerModule(bind => {\r\n    bind(ButtonHandlerRegistry).toSelf().inSingletonScope();\r\n});\r\n\r\nexport default buttonModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\r\nimport { CommandPalette, CommandPaletteKeyListener } from \"./command-palette\";\r\n\r\nconst commandPaletteModule = new ContainerModule((bind) => {\r\n    bind(CommandPalette).toSelf().inSingletonScope();\r\n    bind(TYPES.IUIExtension).toService(CommandPalette);\r\n    bind(CommandPaletteKeyListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(CommandPaletteKeyListener);\r\n    bind(CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();\r\n    bind(TYPES.ICommandPaletteActionProviderRegistry).toService(CommandPaletteActionProviderRegistry);\r\n});\r\n\r\nexport default commandPaletteModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\nimport { ContainerModule } from \"inversify\";\r\n\r\nimport { IContextMenuService } from \"./context-menu-service\";\r\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\r\nimport { ContextMenuMouseListener } from \"./mouse-listener\";\r\nimport { TYPES } from \"../../base/types\";\r\n\r\nconst contextMenuModule = new ContainerModule(bind => {\r\n    bind(TYPES.IContextMenuServiceProvider).toProvider<IContextMenuService>(ctx => {\r\n        return () => {\r\n            return new Promise<IContextMenuService>((resolve, reject) => {\r\n                if (ctx.container.isBound(TYPES.IContextMenuService)) {\r\n                    resolve(ctx.container.get<IContextMenuService>(TYPES.IContextMenuService));\r\n                } else {\r\n                    reject();\r\n                }\r\n            });\r\n        };\r\n    });\r\n    bind(ContextMenuMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(ContextMenuMouseListener);\r\n    bind(TYPES.IContextMenuProviderRegistry).to(ContextMenuProviderRegistry);\r\n});\r\n\r\nexport default contextMenuModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { configureModelElement } from \"../../base/views/view\";\r\nimport { ContainerModule } from \"inversify\";\r\nimport { SIssueMarker } from \"./model\";\r\nimport { IssueMarkerView } from \"./views\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { DecorationPlacer } from \"./decoration-placer\";\r\n\r\nconst decorationModule = new ContainerModule((bind, _unbind, isBound)  => {\r\n    configureModelElement({ bind, isBound }, 'marker', SIssueMarker, IssueMarkerView);\r\n    bind(DecorationPlacer).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(DecorationPlacer);\r\n});\r\n\r\nexport default decorationModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2021 EclipseSource and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { IntersectionFinder } from \"../edge-intersection/intersection-finder\";\r\n\r\nconst edgeIntersectionModule = new ContainerModule(bind => {\r\n    bind(IntersectionFinder).toSelf().inSingletonScope();\r\n    bind(TYPES.IEdgeRoutePostprocessor).toService(IntersectionFinder);\r\n});\r\n\r\nexport default edgeIntersectionModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { configureButtonHandler } from \"../button/button-handler\";\r\nimport { ExpandButtonHandler } from \"./expand\";\r\n\r\nconst expandModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    configureButtonHandler({bind, isBound}, ExpandButtonHandler.TYPE, ExpandButtonHandler);\r\n});\r\n\r\nexport default expandModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from '../../base/types';\r\nimport { ExportSvgPostprocessor, ExportSvgKeyListener, ExportSvgCommand } from './export';\r\nimport { SvgExporter } from './svg-exporter';\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\n\r\nconst exportSvgModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(ExportSvgKeyListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(ExportSvgKeyListener);\r\n    bind(ExportSvgPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(ExportSvgPostprocessor);\r\n    configureCommand({ bind, isBound }, ExportSvgCommand);\r\n    bind(TYPES.SvgExporter).to(SvgExporter).inSingletonScope();\r\n});\r\n\r\nexport default exportSvgModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { ElementFader } from \"./fade\";\r\n\r\nconst fadeModule = new ContainerModule(bind => {\r\n    bind(ElementFader).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(ElementFader);\r\n});\r\n\r\nexport default fadeModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { inject, injectable } from \"inversify\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\r\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\r\nimport { SModelElementImpl } from \"../../base/model/smodel\";\r\n\r\n@injectable()\r\nexport class PopupPositionUpdater implements IVNodePostprocessor {\r\n\r\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\r\n\r\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\r\n        return vnode;\r\n    }\r\n\r\n    postUpdate(): void {\r\n        const popupDiv = document.getElementById(this.options.popupDiv);\r\n        if (popupDiv !== null && typeof window !== 'undefined') {\r\n            const boundingClientRect = popupDiv.getBoundingClientRect();\r\n            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {\r\n                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';\r\n            }\r\n\r\n            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {\r\n                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';\r\n            }\r\n\r\n            if (boundingClientRect.left < 0) {\r\n                popupDiv.style.left = '0px';\r\n            }\r\n\r\n            if (boundingClientRect.top < 0) {\r\n                popupDiv.style.top = '0px';\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport {\r\n    HoverMouseListener, PopupHoverMouseListener, HoverFeedbackCommand, SetPopupModelCommand,\r\n    HoverKeyListener, HoverState, ClosePopupActionHandler\r\n} from \"./hover\";\r\nimport { PopupPositionUpdater } from \"./popup-position-updater\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\r\nimport { FitToScreenCommand, CenterCommand } from \"../viewport/center-fit\";\r\nimport { SetViewportCommand } from \"../viewport/viewport\";\r\nimport { MoveCommand } from \"../move/move\";\r\n\r\nconst hoverModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(PopupPositionUpdater).toSelf().inSingletonScope();\r\n    bind(TYPES.PopupVNodePostprocessor).toService(PopupPositionUpdater);\r\n    bind(HoverMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(HoverMouseListener);\r\n    bind(PopupHoverMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.PopupMouseListener).toService(PopupHoverMouseListener);\r\n    bind(HoverKeyListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(HoverKeyListener);\r\n    bind<HoverState>(TYPES.HoverState).toConstantValue({\r\n        mouseOverTimer: undefined,\r\n        mouseOutTimer: undefined,\r\n        popupOpen: false,\r\n        previousPopupElement: undefined\r\n    });\r\n    bind(ClosePopupActionHandler).toSelf().inSingletonScope();\r\n\r\n    const context = { bind, isBound };\r\n    configureCommand(context, HoverFeedbackCommand);\r\n    configureCommand(context, SetPopupModelCommand);\r\n    configureActionHandler(context, SetPopupModelCommand.KIND, ClosePopupActionHandler);\r\n    configureActionHandler(context, FitToScreenCommand.KIND, ClosePopupActionHandler);\r\n    configureActionHandler(context, CenterCommand.KIND, ClosePopupActionHandler);\r\n    configureActionHandler(context, SetViewportCommand.KIND, ClosePopupActionHandler);\r\n    configureActionHandler(context, MoveCommand.KIND, ClosePopupActionHandler);\r\n});\r\n\r\nexport default hoverModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from '../../base/types';\r\nimport { MoveCommand, MoveMouseListener, LocationPostprocessor } from './move';\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\n\r\nconst moveModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(MoveMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(MoveMouseListener);\r\n    configureCommand({ bind, isBound }, MoveCommand);\r\n    bind(LocationPostprocessor).toSelf().inSingletonScope();\r\n    bind(TYPES.IVNodePostprocessor).toService(LocationPostprocessor);\r\n    bind(TYPES.HiddenVNodePostprocessor).toService(LocationPostprocessor);\r\n});\r\n\r\nexport default moveModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { OpenMouseListener } from \"./open\";\r\n\r\nconst openModule = new ContainerModule(bind => {\r\n    bind(OpenMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(OpenMouseListener);\r\n});\r\n\r\nexport default openModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\r\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\r\nimport { ManhattanRectangularAnchor, ManhattanEllipticAnchor, ManhattanDiamondAnchor } from \"./manhattan-anchors\";\r\nimport { RectangleAnchor, EllipseAnchor, DiamondAnchor } from \"./polyline-anchors\";\r\nimport { AnchorComputerRegistry } from \"./anchor\";\r\nimport { EdgeRouterRegistry } from \"./routing\";\r\nimport { AddRemoveBezierSegmentCommand, BezierEdgeRouter } from './bezier-edge-router';\r\nimport { BezierDiamondAnchor, BezierEllipseAnchor, BezierRectangleAnchor } from './bezier-anchors';\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\n\r\nconst routingModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(EdgeRouterRegistry).toSelf().inSingletonScope();\r\n\r\n    bind(AnchorComputerRegistry).toSelf().inSingletonScope();\r\n\r\n    bind(ManhattanEdgeRouter).toSelf().inSingletonScope();\r\n    bind(TYPES.IEdgeRouter).toService(ManhattanEdgeRouter);\r\n    bind(ManhattanEllipticAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(ManhattanEllipticAnchor);\r\n    bind(ManhattanRectangularAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(ManhattanRectangularAnchor);\r\n    bind(ManhattanDiamondAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(ManhattanDiamondAnchor);\r\n\r\n    bind(PolylineEdgeRouter).toSelf().inSingletonScope();\r\n    bind(TYPES.IEdgeRouter).toService(PolylineEdgeRouter);\r\n    bind(EllipseAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(EllipseAnchor);\r\n    bind(RectangleAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(RectangleAnchor);\r\n    bind(DiamondAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(DiamondAnchor);\r\n\r\n    bind(BezierEdgeRouter).toSelf().inSingletonScope();\r\n    bind(TYPES.IEdgeRouter).toService(BezierEdgeRouter);\r\n    bind(BezierEllipseAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(BezierEllipseAnchor);\r\n    bind(BezierRectangleAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(BezierRectangleAnchor);\r\n    bind(BezierDiamondAnchor).toSelf().inSingletonScope();\r\n    bind(TYPES.IAnchorComputer).toService(BezierDiamondAnchor);\r\n\r\n    configureCommand({ bind, isBound }, AddRemoveBezierSegmentCommand);\r\n});\r\n\r\nexport default routingModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { SelectCommand, SelectAllCommand, SelectKeyboardListener, SelectMouseListener, GetSelectionCommand } from \"./select\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\n\r\nconst selectModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    configureCommand({ bind, isBound }, SelectCommand);\r\n    configureCommand({ bind, isBound }, SelectAllCommand);\r\n    configureCommand({ bind, isBound }, GetSelectionCommand);\r\n    bind(SelectKeyboardListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(SelectKeyboardListener);\r\n    bind(SelectMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(SelectMouseListener);\r\n});\r\n\r\nexport default selectModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { UndoRedoKeyListener } from \"./undo-redo\";\r\n\r\nconst undoRedoModule = new ContainerModule(bind => {\r\n    bind(UndoRedoKeyListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(UndoRedoKeyListener);\r\n});\r\n\r\nexport default undoRedoModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\nimport { UpdateModelCommand } from \"./update-model\";\r\n\r\nconst updateModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    configureCommand({ bind, isBound }, UpdateModelCommand);\r\n});\r\n\r\nexport default updateModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { TYPES } from \"../../base/types\";\r\nimport { CenterCommand, CenterKeyboardListener, FitToScreenCommand } from \"./center-fit\";\r\nimport { SetViewportCommand, GetViewportCommand } from \"./viewport\";\r\nimport { ScrollMouseListener } from \"./scroll\";\r\nimport { ZoomMouseListener } from \"./zoom\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\n\r\nconst viewportModule = new ContainerModule((bind , _unbind, isBound) => {\r\n    configureCommand({ bind, isBound }, CenterCommand);\r\n    configureCommand({ bind, isBound }, FitToScreenCommand);\r\n    configureCommand({ bind, isBound }, SetViewportCommand);\r\n    configureCommand({ bind, isBound }, GetViewportCommand);\r\n    bind(CenterKeyboardListener).toSelf().inSingletonScope();\r\n    bind(TYPES.KeyListener).toService(CenterKeyboardListener);\r\n    bind(ScrollMouseListener).toSelf().inSingletonScope();\r\n    bind(ZoomMouseListener).toSelf().inSingletonScope();\r\n    bind(TYPES.MouseListener).toService(ScrollMouseListener);\r\n    bind(TYPES.MouseListener).toService(ZoomMouseListener);\r\n});\r\n\r\nexport default viewportModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { configureCommand } from \"../../base/commands/command-registration\";\r\nimport { BringToFrontCommand } from './zorder';\r\n\r\nconst zorderModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    configureCommand({ bind, isBound }, BringToFrontCommand);\r\n});\r\n\r\nexport default zorderModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2022 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx svg */\r\nimport { inject, injectable } from 'inversify';\r\nimport { VNode } from \"snabbdom\";\r\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\r\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\r\nimport { setAttr } from '../base/views/vnode-utils';\r\nimport { ShapeView } from '../features/bounds/views';\r\nimport {\r\n    BY_DESCENDING_X_THEN_DESCENDING_Y,\r\n    BY_DESCENDING_X_THEN_Y,\r\n    BY_X_THEN_DESCENDING_Y,\r\n    BY_X_THEN_Y,\r\n    IntersectingRoutedPoint,\r\n    Intersection,\r\n    isIntersectingRoutedPoint\r\n} from '../features/edge-intersection/intersection-finder';\r\nimport { isEdgeLayoutable } from '../features/edge-layout/model';\r\nimport { SRoutableElementImpl, SRoutingHandleImpl } from '../features/routing/model';\r\nimport { EdgeRouterRegistry, RoutedPoint } from '../features/routing/routing';\r\nimport { RoutableView } from '../features/routing/views';\r\nimport { svg } from '../lib/jsx';\r\nimport { PointToPointLine } from '../utils/geometry';\r\nimport { SCompartmentImpl, SEdgeImpl, SGraphImpl, SLabelImpl } from \"./sgraph\";\r\n\r\n/**\r\n * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.\r\n */\r\n@injectable()\r\nexport class SGraphView implements IView {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    render(model: Readonly<SGraphImpl>, context: RenderingContext): VNode {\r\n        const edgeRouting = this.edgeRouterRegistry.routeAllChildren(model);\r\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\r\n        return <svg class-sprotty-graph={true}>\r\n            <g transform={transform}>\r\n                {context.renderChildren(model, { edgeRouting })}\r\n            </g>\r\n        </svg>;\r\n    }\r\n\r\n}\r\n\r\n@injectable()\r\nexport class PolylineEdgeView extends RoutableView {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    render(edge: Readonly<SEdgeImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        const route = this.edgeRouterRegistry.route(edge, args);\r\n        if (route.length === 0) {\r\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\r\n        }\r\n        if (!this.isVisible(edge, route, context)) {\r\n            if (edge.children.length === 0) {\r\n                return undefined;\r\n            }\r\n            // The children of an edge are not necessarily inside the bounding box of the route,\r\n            // so we need to render a group to ensure the children have a chance to be rendered.\r\n            return <g>{context.renderChildren(edge, { route })}</g>;\r\n        }\r\n\r\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\r\n            {this.renderLine(edge, route, context, args)}\r\n            {this.renderAdditionals(edge, route, context)}\r\n            {context.renderChildren(edge, { route })}\r\n        </g>;\r\n    }\r\n\r\n    protected renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\r\n        const firstPoint = segments[0];\r\n        let path = `M ${firstPoint.x},${firstPoint.y}`;\r\n        for (let i = 1; i < segments.length; i++) {\r\n            const p = segments[i];\r\n            path += ` L ${p.x},${p.y}`;\r\n        }\r\n        return <path d={path} />;\r\n    }\r\n\r\n    protected renderAdditionals(edge: SEdgeImpl, segments: Point[], context: RenderingContext): VNode[] {\r\n        // here we need to render the control points?\r\n        return [];\r\n    }\r\n\r\n    protected renderDanglingEdge(message: string, edge: SEdgeImpl, context: RenderingContext): VNode {\r\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\r\n    }\r\n}\r\n\r\n/**\r\n * A `PolylineEdgeView` that renders jumps over intersections.\r\n *\r\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\r\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\r\n *\r\n * This view only draws correct line jumps for intersections among straight line segments and doesn't work with bezier curves.\r\n *\r\n * @see IntersectionFinder\r\n * @see IntersectingRoutedPoint\r\n * @see EdgeRouterRegistry\r\n */\r\n@injectable()\r\nexport class JumpingPolylineEdgeView extends PolylineEdgeView {\r\n\r\n    protected jumpOffsetBefore = 5;\r\n    protected jumpOffsetAfter = 5;\r\n    protected skipOffsetBefore = 3;\r\n    protected skipOffsetAfter = 2;\r\n\r\n    protected override renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\r\n        let path = '';\r\n        for (let i = 0; i < segments.length; i++) {\r\n            const p = segments[i];\r\n            if (i === 0) {\r\n                path = `M ${p.x},${p.y}`;\r\n            }\r\n            if (isIntersectingRoutedPoint(p)) {\r\n                path += this.intersectionPath(edge, segments, p, args);\r\n            }\r\n            if (i !== 0) {\r\n                path += ` L ${p.x},${p.y}`;\r\n            }\r\n        }\r\n        return <path d={path} />;\r\n    }\r\n\r\n    /**\r\n     * Returns a path that takes the intersections into account by drawing a line jump or a gap for intersections on that path.\r\n     */\r\n    protected intersectionPath(edge: SEdgeImpl, segments: Point[], intersectingPoint: IntersectingRoutedPoint, args?: IViewArgs): string {\r\n        if (intersectingPoint.intersections.length < 1) {\r\n            return '';\r\n        }\r\n\r\n        const segment = this.getLineSegment(edge, intersectingPoint.intersections[0], args, segments);\r\n        const intersections = this.getIntersectionsSortedBySegmentDirection(segment, intersectingPoint);\r\n\r\n        let path = '';\r\n        for (const intersection of intersections) {\r\n            const otherLineSegment = this.getOtherLineSegment(edge, intersection, args);\r\n            if (otherLineSegment === undefined) {\r\n                continue;\r\n            }\r\n            const currentLineSegment = this.getLineSegment(edge, intersection, args, segments);\r\n            const intersectionPoint = intersection.intersectionPoint;\r\n            if (this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment)) {\r\n                path += this.createJumpPath(intersectionPoint, currentLineSegment);\r\n            } else if (this.shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment)) {\r\n                path += this.createGapPath(intersectionPoint, currentLineSegment);\r\n            }\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * Returns the intersections sorted by the direction of the `lineSegment`.\r\n     *\r\n     * The coordinate system goes from left to right and top to bottom.\r\n     * Thus, x increases to the right and y increases downwards.\r\n     *\r\n     * We need to draw the intersections in the order of the direction of the line segment.\r\n     * To draw a line pointing north, we need to order intersections by Y in a descending order.\r\n     * To draw a line pointing south, we need to order intersections by Y in an ascending order.\r\n     */\r\n    protected getIntersectionsSortedBySegmentDirection(lineSegment: PointToPointLine, intersectingPoint: IntersectingRoutedPoint) {\r\n        switch (lineSegment.direction) {\r\n            case 'north':\r\n            case 'north-east':\r\n                return intersectingPoint.intersections.sort(BY_X_THEN_DESCENDING_Y);\r\n\r\n            case 'south':\r\n            case 'south-east':\r\n            case 'east':\r\n                return intersectingPoint.intersections.sort(BY_X_THEN_Y);\r\n\r\n            case 'south-west':\r\n            case 'west':\r\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_Y);\r\n\r\n            case 'north-west':\r\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_DESCENDING_Y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether or not to draw a line jump on an intersection for the `currentLineSegment`.\r\n     * This should usually be inverse of `shouldDrawLineGapOnIntersection()`.\r\n     */\r\n    protected shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\r\n        return Math.abs(currentLineSegment.slopeOrMax) < Math.abs(otherLineSegment.slopeOrMax);\r\n    }\r\n\r\n    /**\r\n     * Whether or not to draw a line gap on an intersection for the `currentLineSegment`.\r\n     * This should usually be inverse of `shouldDrawLineJumpOnIntersection()`.\r\n     */\r\n    protected shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\r\n        return !this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment);\r\n    }\r\n\r\n    protected getLineSegment(edge: SRoutableElementImpl, intersection: Intersection, args?: IViewArgs, segments?: Point[]): PointToPointLine {\r\n        const route = segments ? segments : this.edgeRouterRegistry.route(edge, args);\r\n        const index = intersection.routable1 === edge.id ? intersection.segmentIndex1 : intersection.segmentIndex2;\r\n        return new PointToPointLine(route[index], route[index + 1]);\r\n    }\r\n\r\n    protected getOtherLineSegment(currentEdge: SEdgeImpl, intersection: Intersection, args?: IViewArgs): PointToPointLine | undefined {\r\n        const otherEdgeId = intersection.routable1 === currentEdge.id ? intersection.routable2 : intersection.routable1;\r\n        const otherEdge = currentEdge.index.getById(otherEdgeId);\r\n        if (!(otherEdge instanceof SRoutableElementImpl)) {\r\n            return undefined;\r\n        }\r\n        return this.getLineSegment(otherEdge, intersection, args);\r\n    }\r\n\r\n    protected createJumpPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\r\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.jumpOffsetBefore);\r\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.jumpOffsetAfter);\r\n        const rotation = lineSegment.p1.x < lineSegment.p2.x ? 1 : 0;\r\n        return ` L ${anchorBefore.x},${anchorBefore.y} A 1,1 0,0 ${rotation} ${anchorAfter.x},${anchorAfter.y}`;\r\n    }\r\n\r\n    protected createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\r\n        let offsetBefore;\r\n        let offsetAfter;\r\n        if (intersectionPoint.y < lineSegment.p1.y) {\r\n            offsetBefore = -this.skipOffsetBefore;\r\n            offsetAfter = this.jumpOffsetAfter + this.skipOffsetAfter;\r\n        } else {\r\n            offsetBefore = this.jumpOffsetBefore + this.skipOffsetAfter;\r\n            offsetAfter = -this.skipOffsetBefore;\r\n        }\r\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, offsetBefore);\r\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, offsetAfter);\r\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A `PolylineEdgeView` that renders gaps on intersections.\r\n *\r\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\r\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\r\n *\r\n * This view only draws correct gaps for intersections among straight line segments and doesn't work with bezier curves.\r\n *\r\n * @see IntersectionFinder\r\n * @see IntersectingRoutedPoint\r\n * @see EdgeRouterRegistry\r\n */\r\n@injectable()\r\nexport class PolylineEdgeViewWithGapsOnIntersections extends JumpingPolylineEdgeView {\r\n\r\n    protected override skipOffsetBefore = 3;\r\n    protected override skipOffsetAfter = 3;\r\n\r\n    protected override shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\r\n        return false;\r\n    }\r\n\r\n    protected override shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\r\n        return Math.abs(currentLineSegment.slopeOrMax) >= Math.abs(otherLineSegment.slopeOrMax);\r\n    }\r\n\r\n    protected override createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\r\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.skipOffsetBefore);\r\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.skipOffsetAfter);\r\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\r\n    }\r\n\r\n}\r\n\r\n@injectable()\r\nexport class BezierCurveEdgeView extends RoutableView {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    render(edge: Readonly<SEdgeImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        const route = this.edgeRouterRegistry.route(edge, args);\r\n        if (route.length === 0) {\r\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\r\n        }\r\n        if (!this.isVisible(edge, route, context)) {\r\n            if (edge.children.length === 0) {\r\n                return undefined;\r\n            }\r\n            // The children of an edge are not necessarily inside the bounding box of the route,\r\n            // so we need to render a group to ensure the children have a chance to be rendered.\r\n            return <g>{context.renderChildren(edge, { route })}</g>;\r\n        }\r\n\r\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\r\n            {this.renderLine(edge, route, context, args)}\r\n            {this.renderAdditionals(edge, route, context)}\r\n            {context.renderChildren(edge, { route })}\r\n        </g>;\r\n    }\r\n\r\n    protected renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\r\n        /**\r\n         * Example for two splines:\r\n         * SVG:\r\n         * <path d=\"M0,300 C0,150 300,150 300,300 S600,450 600,300\" />\r\n         *\r\n         * Segments input layout:\r\n         * routingPoints[0] = source;\r\n         * routingPoints[1] = controlForSource;\r\n         * routingPoints[2] = controlForSegment1;\r\n         * routingPoints[3] = segment;\r\n         * routingPoints[4] = controlForSegment2;\r\n         * routingPoints[5] = controlForTarget;\r\n         * routingPoints[6] = target;\r\n         */\r\n        let path = '';\r\n        if (segments.length >= 4) {\r\n            path += this.buildMainSegment(segments);\r\n            const pointsLeft = segments.length - 4;\r\n            if (pointsLeft > 0 && pointsLeft % 3 === 0) {\r\n                for (let i = 4; i < segments.length; i += 3) {\r\n                    path += this.addSpline(segments, i);\r\n                }\r\n            }\r\n        }\r\n        return <path d={path} />;\r\n    }\r\n\r\n    private buildMainSegment(segments: Point[]) {\r\n        const s = segments[0];\r\n        const h1 = segments[1];\r\n        const h2 = segments[2];\r\n        const t = segments[3];\r\n        return `M${s.x},${s.y} C${h1.x},${h1.y} ${h2.x},${h2.y} ${t.x},${t.y}`;\r\n    }\r\n\r\n    private addSpline(segments: Point[], index: number) {\r\n        // We have two controls for each junction, but SVG does not therefore index is jumped over\r\n        const c = segments[index + 1];\r\n        const p = segments[index + 2];\r\n        return ` S${c.x},${c.y} ${p.x},${p.y}`;\r\n    }\r\n\r\n    protected renderAdditionals(edge: SEdgeImpl, segments: Point[], context: RenderingContext): VNode[] {\r\n        return [];\r\n    }\r\n\r\n    protected renderDanglingEdge(message: string, edge: SEdgeImpl, context: RenderingContext): VNode {\r\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SRoutingHandleView implements IView {\r\n\r\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\r\n\r\n    minimalPointDistance: number = 10;\r\n\r\n    render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\r\n        if (args && args.route) {\r\n            if (handle.parent instanceof SRoutableElementImpl) {\r\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\r\n                const theRoute = args.route === undefined ? this.edgeRouterRegistry.route(handle.parent, args) : args.route;\r\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\r\n                if (position !== undefined) {\r\n                    const node = <circle class-sprotty-routing-handle={true}\r\n                        class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\r\n                        cx={position.x} cy={position.y} r={this.getRadius()} />;\r\n                    setAttr(node, 'data-kind', handle.kind);\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        // Fallback: Create an empty group\r\n        return <g />;\r\n    }\r\n\r\n    getRadius(): number {\r\n        return 7;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SLabelView extends ShapeView {\r\n    render(label: Readonly<SLabelImpl>, context: RenderingContext): VNode | undefined {\r\n        if (!isEdgeLayoutable(label) && !this.isVisible(label, context)) {\r\n            return undefined;\r\n        }\r\n        const vnode = <text class-sprotty-label={true}>{label.text}</text>;\r\n        const subType = getSubType(label);\r\n        if (subType) {\r\n            setAttr(vnode, 'class', subType);\r\n        }\r\n        return vnode;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SCompartmentView implements IView {\r\n    render(compartment: Readonly<SCompartmentImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\r\n        const translate = `translate(${compartment.bounds.x}, ${compartment.bounds.y})`;\r\n        const vnode = <g transform={translate} class-sprotty-comp=\"{true}\">\r\n            {context.renderChildren(compartment)}\r\n        </g>;\r\n        const subType = getSubType(compartment);\r\n        if (subType)\r\n            setAttr(vnode, 'class', subType);\r\n        return vnode;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SBezierCreateHandleView extends SRoutingHandleView {\r\n\r\n    override render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\r\n        if (args) {\r\n            const theRoute = args.route;\r\n            if (theRoute && handle.parent instanceof SRoutableElementImpl) {\r\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\r\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\r\n                if (position !== undefined) {\r\n\r\n                    const translation = \"translate(\" + position.x + \", \" + position.y + \")\";\r\n                    const textOffsetX = -5.5;\r\n                    const textOffsetY = 5.5;\r\n                    const text = (handle.kind === \"bezier-add\") ? \"+\" : \"-\";\r\n                    const node =\r\n                        <g transform={translation} class-sprotty-routing-handle={true}\r\n                            class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\r\n                            <circle r={this.getRadius()} />\r\n                            <text x={textOffsetX} y={textOffsetY} attrs-text-align=\"middle\"\r\n                                style-font-family=\"monospace\" style-pointer-events=\"none\" style-fill=\"white\">{text}</text>\r\n                        </g>;\r\n                    setAttr(node, 'data-kind', handle.kind);\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        // Fallback: Create an empty group\r\n        return <g />;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SBezierControlHandleView extends SRoutingHandleView {\r\n\r\n    override render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\r\n        if (args) {\r\n            const theRoute = args.route;\r\n            if (theRoute && handle.parent instanceof SRoutableElementImpl) {\r\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\r\n                const position = router.getHandlePosition(handle.parent, theRoute, handle) as any;\r\n                if (position !== undefined) {\r\n\r\n                    let pathEndPos: Point | undefined;\r\n                    for (let i = 0; i < theRoute.length; i++) {\r\n                        const elem = theRoute[i];\r\n                        if (elem.kind === position.kind && elem.pointIndex === position.pointIndex) {\r\n                            if (handle.kind === 'bezier-control-before') {\r\n                                pathEndPos = theRoute[i + 1];\r\n                            } else {\r\n                                pathEndPos = theRoute[i - 1];\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    let node;\r\n                    if (pathEndPos) {\r\n                        const coords = `M ${position.x}, ${position.y} L ${pathEndPos.x}, ${pathEndPos.y}`;\r\n                        node =\r\n                            <g class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\r\n                                <path d={coords} stroke=\"grey\" style-stroke-width=\"2px\"></path>\r\n                                <circle cx={position.x} cy={position.y} r={this.getRadius()} />\r\n                            </g>;\r\n                    } else {\r\n                        node = <circle class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\r\n                            cx={position.x} cy={position.y} r={this.getRadius()} />;\r\n                    }\r\n\r\n                    setAttr(node, 'data-kind', handle.kind);\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        // Fallback: Create an empty group\r\n        return <g />;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { ContainerModule } from \"inversify\";\r\nimport { configureCommand } from \"../base/commands/command-registration\";\r\nimport { TYPES } from \"../base/types\";\r\nimport { CommitModelCommand } from \"./commit-model\";\r\nimport { ComputedBoundsApplicator, ModelSource } from \"./model-source\";\r\n\r\n/**\r\n * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be\r\n * done according to the needs of the application. You can choose between a local (LocalModelSource)\r\n * and a remote (e.g. WebSocketDiagramServer) implementation.\r\n */\r\nconst modelSourceModule = new ContainerModule((bind, _unbind, isBound) => {\r\n    bind(TYPES.ModelSourceProvider).toProvider<ModelSource>((context) => {\r\n        return () => {\r\n            return new Promise<ModelSource>((resolve) => {\r\n                resolve(context.container.get<ModelSource>(TYPES.ModelSource));\r\n            });\r\n        };\r\n    });\r\n    configureCommand({bind, isBound}, CommitModelCommand);\r\n    bind(TYPES.IActionHandlerInitializer).toService(TYPES.ModelSource);\r\n    bind(ComputedBoundsApplicator).toSelf().inSingletonScope();\r\n});\r\n\r\nexport default modelSourceModule;\r\n", "/********************************************************************************\r\n * Copyright (c) 2019 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { Container, ContainerModule } from 'inversify';\r\nimport defaultModule from '../base/di.config';\r\nimport modelSourceModule from '../model-source/di.config';\r\nimport boundsModule from '../features/bounds/di.config';\r\nimport buttonModule from '../features/button/di.config';\r\nimport commandPaletteModule from '../features/command-palette/di.config';\r\nimport contextMenuModule from '../features/context-menu/di.config';\r\nimport decorationModule from '../features/decoration/di.config';\r\nimport edgeLayoutModule from '../features/edge-layout/di.config';\r\nimport { edgeEditModule, labelEditModule, labelEditUiModule } from '../features/edit/di.config';\r\nimport expandModule from '../features/expand/di.config';\r\nimport exportModule from '../features/export/di.config';\r\nimport fadeModule from '../features/fade/di.config';\r\nimport hoverModule from '../features/hover/di.config';\r\nimport moveModule from '../features/move/di.config';\r\nimport openModule from '../features/open/di.config';\r\nimport routingModule from '../features/routing/di.config';\r\nimport selectModule from '../features/select/di.config';\r\nimport undoRedoModule from '../features/undo-redo/di.config';\r\nimport updateModule from '../features/update/di.config';\r\nimport viewportModule from '../features/viewport/di.config';\r\nimport zorderModule from '../features/zorder/di.config';\r\n\r\nexport interface LoadModuleOptions {\r\n    exclude?: ContainerModule[]\r\n}\r\n\r\n/**\r\n * Load the default set of container modules provided by Sprotty.\r\n */\r\nexport function loadDefaultModules(container: Container, options?: LoadModuleOptions) {\r\n    const modules = [\r\n        defaultModule, modelSourceModule, boundsModule, buttonModule,\r\n        commandPaletteModule, contextMenuModule, decorationModule, edgeEditModule,\r\n        edgeLayoutModule, expandModule, exportModule, fadeModule,\r\n        hoverModule, labelEditModule, labelEditUiModule, moveModule,\r\n        openModule, routingModule, selectModule, undoRedoModule,\r\n        updateModule, viewportModule, zorderModule\r\n    ];\r\n    if (options && options.exclude) {\r\n        for (const mod of options.exclude) {\r\n            const index = modules.indexOf(mod);\r\n            if (index >= 0)\r\n                modules.splice(index, 1);\r\n        }\r\n    }\r\n    container.load(...modules);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { h, vnode, VNode, VNodeData } from 'snabbdom';\r\n\r\nfunction buildVNodeData(attrs: { [key: string]: string }) {\r\n    const data: VNodeData = {};\r\n    const addData = (memo: Record<string, string> | null, name: string) => {\r\n        if (name !== 'style' && name !== 'class') {\r\n            const val = unescapeEntities(attrs[name]);\r\n            memo ? memo[name] = val : memo = { [name]: val };\r\n        }\r\n        return memo;\r\n    };\r\n    const _attrs = Object.keys(attrs).reduce(addData, null);\r\n\r\n    if (_attrs) {\r\n        data.attrs = _attrs;\r\n    }\r\n\r\n    const style = parseStyle(attrs);\r\n    if (style) {\r\n        data.style = style;\r\n    }\r\n\r\n    const classes = parseClass(attrs);\r\n    if (classes) {\r\n        data.class = classes;\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction parseStyle(attrs: { [key: string]: string }) {\r\n    const addStyle = (memo: Record<string, string> | null, styleProp: string) => {\r\n        const res = styleProp.split(':');\r\n        const name = transformName(res[0].trim());\r\n        if (name) {\r\n            const val = res[1].replace('!important', '').trim();\r\n            memo ? memo[name] = val : memo = { [name]: val };\r\n        }\r\n        return memo;\r\n    };\r\n    try {\r\n        return attrs.style.split(';').reduce(addStyle, null);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction parseClass(attrs: { [key: string]: string }) {\r\n    const addClass = (memo: Record<string, boolean> | null, className: string) => {\r\n        className = className.trim();\r\n        if (className) {\r\n            memo ? memo[className] = true : memo = { [className]: true };\r\n        }\r\n        return memo;\r\n    };\r\n    try {\r\n        return attrs.class.split(' ').reduce(addClass, null);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction transformName(name: string) {\r\n    // Replace -a with A to help camel case style property names.\r\n    name = name.replace(/-(\\w)/g, function _replace($1, $2) {\r\n        return $2.toUpperCase();\r\n    });\r\n    // Handle properties that start with a -.\r\n    const firstChar = name.charAt(0).toLowerCase();\r\n    return `${firstChar}${name.substring(1)}`;\r\n}\r\n\r\n// Regex for matching HTML entities.\r\nconst entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');\r\n// Element for setting innerHTML for transforming entities.\r\nlet el: HTMLDivElement | null = null;\r\n\r\nfunction unescapeEntities(text: string) {\r\n    // Create the element using the context if it doesn't exist.\r\n    if (!el) {\r\n        el = document.createElement('div');\r\n    }\r\n    return text.replace(entityRegex, (entity) => {\r\n        if (el === null) return '';\r\n        el.innerHTML = entity;\r\n        return el.textContent === null ? '' : el.textContent;\r\n    });\r\n}\r\n\r\nfunction recurse(doc: Node, func: (node: Node, parent: Node | null) => void) {\r\n    let node: Node | null = doc;\r\n    let parent: Node | null = null;\r\n    const stack: Node[] = [];\r\n\r\n    const setChild = (n: Node) => {\r\n        const child = n.firstChild;\r\n        if (child !== null) {\r\n            parent = n;\r\n        }\r\n        node = child;\r\n    };\r\n    func(node, parent);\r\n    setChild(node);\r\n\r\n    while (true) {\r\n        while (node) {\r\n            stack.push(node);\r\n            func(node, parent);\r\n            setChild(node);\r\n        }\r\n        const _node = stack.pop();\r\n        node = _node ? _node : null;\r\n        if (!stack.length) break;\r\n        parent = stack[stack.length - 1];\r\n        if (node) {\r\n            const sibling = node.nextSibling;\r\n            if (sibling == null) {\r\n                parent = stack[stack.length - 1];\r\n            }\r\n            node = sibling;\r\n        }\r\n    }\r\n}\r\n\r\nlet vdom: VNode | null = null;\r\nconst vnodeMap = new Map<Node, VNode>();\r\nlet delimited = false;\r\n\r\nfunction toVNode(node: Node, parent: Node | null) {\r\n\r\n    let current: VNode | undefined;\r\n    if (parent !== null) {\r\n        current = vnodeMap.get(parent);\r\n    }\r\n\r\n    switch (node?.nodeType) {\r\n        // element\r\n        case 1: {\r\n            if (current === undefined) return;\r\n            current.children = current.children ? current.children : [];\r\n            const children = current.children;\r\n            const attributes = (node as Element).attributes;\r\n            const attrs: { [key: string]: string } = {};\r\n            for (let i = 0; i < attributes.length; i++) {\r\n                const attr = attributes.item(i);\r\n                if (attr) {\r\n                    attrs[attr.name] = attr.value;\r\n                }\r\n            }\r\n            const vn = h(node.nodeName, buildVNodeData(attrs));\r\n            children.push(vn);\r\n            vnodeMap.set(node, vn);\r\n            break;\r\n        }\r\n        // text\r\n        case 3: {\r\n            const text = node.textContent;\r\n            if (text !== null && current !== undefined) {\r\n                current.children = current.children ? current.children : [];\r\n                const children = current.children;\r\n                const lastData = children.length > 0 ? children[children.length - 1] : null;\r\n                if (!delimited && typeof lastData !== 'string' && lastData !== null && lastData.sel === undefined) {\r\n                    lastData.text = lastData.text + text;\r\n                } else {\r\n                    children.push(vnode(undefined, undefined, undefined, text, undefined));\r\n                }\r\n                delimited = false;\r\n            }\r\n            break;\r\n        }\r\n        case 8: {\r\n            delimited = true;\r\n            break;\r\n        }\r\n        // document\r\n        case 9: {\r\n            vdom = vnode(undefined, undefined, [], undefined, undefined);\r\n            vnodeMap.set(node, vdom);\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction stripVNode(vnodes: VNode | null) {\r\n    const children = vnodes?.children;\r\n    if (typeof children === 'undefined') return null;\r\n    if (children.length === 1 && typeof children[0] !== 'string') return children[0];\r\n    return null;\r\n}\r\n\r\nexport default function virtualizeString(html?: string) {\r\n\r\n    const parser = new window.DOMParser();\r\n    if (parser === undefined || html === undefined || html === '') return null;\r\n\r\n    const doc = parser.parseFromString(html, \"application/xml\");\r\n\r\n    if (doc?.firstChild?.nodeName === 'parsererror') {\r\n        const error = `${doc?.firstChild?.textContent}`;\r\n        return h('parsererror', [error]);\r\n    }\r\n\r\n    delimited = false;\r\n    vdom = null;\r\n    recurse(doc, toVNode);\r\n\r\n    if (vdom === null) return null;\r\n    return stripVNode(vdom);\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\r\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\r\nimport { SModelRootImpl, SChildElementImpl } from \"../base/model/smodel\";\r\nimport { BoundsAware, boundsFeature, Alignable, alignFeature, isBoundsAware } from \"../features/bounds/model\";\r\nimport { Locateable, moveFeature } from \"../features/move/model\";\r\nimport { Selectable, selectFeature } from \"../features/select/model\";\r\nimport { SNodeImpl, SPortImpl } from '../graph/sgraph';\r\nimport { RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"../features/routing/anchor\";\r\n\r\n/**\r\n * A node that is represented by a circle.\r\n */\r\nexport class CircularNode extends SNodeImpl {\r\n    override get anchorKind() {\r\n        return ELLIPTIC_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n/**\r\n * A node that is represented by a rectangle.\r\n */\r\nexport class RectangularNode extends SNodeImpl {\r\n    override get anchorKind() {\r\n        return RECTANGULAR_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n/**\r\n * A node that is represented by a diamond.\r\n */\r\nexport class DiamondNode extends SNodeImpl {\r\n    override get anchorKind() {\r\n        return DIAMOND_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n/**\r\n * A port that is represented by a circle.\r\n */\r\nexport class CircularPort extends SPortImpl {\r\n    override get anchorKind() {\r\n        return ELLIPTIC_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n/**\r\n * A port that is represented by a rectangle.\r\n */\r\nexport class RectangularPort extends SPortImpl {\r\n    override get anchorKind() {\r\n        return RECTANGULAR_ANCHOR_KIND;\r\n    }\r\n}\r\n\r\n/**\r\n * Serializable schema for HtmlRoot.\r\n *\r\n * @deprecated Use `HtmlRoot` from `sprotty-protocol` instead.\r\n */\r\nexport interface HtmlRootSchema extends SModelRootSchema {\r\n    classes?: string[]\r\n}\r\n\r\n/**\r\n * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.\r\n */\r\nexport class HtmlRootImpl extends SModelRootImpl {\r\n    classes: string[] = [];\r\n}\r\n\r\n/** @deprecated Use `HtmlRootImpl` instead. */\r\nexport const HtmlRoot = HtmlRootImpl;\r\n\r\n/**\r\n * Serializable schema for PreRenderedElement.\r\n *\r\n * @deprecated Use `PreRenderedElement` from `sprotty-protocol` instead.\r\n */\r\nexport interface PreRenderedElementSchema extends SModelElementSchema {\r\n    code: string\r\n}\r\n\r\n/**\r\n * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to\r\n * render complex figures or to compute the view on the server instead of the client code.\r\n */\r\nexport class PreRenderedElementImpl extends SChildElementImpl {\r\n    code: string;\r\n}\r\n\r\n/** @deprecated Use `PreRenderedElementImpl` instead. */\r\nexport const PreRenderedElement = PreRenderedElementImpl;\r\n\r\n/**\r\n * Serializable schema for ShapedPreRenderedElement.\r\n *\r\n * @deprecated Use `ShapedPreRenderedElement` from `sprotty-protocol` instead.\r\n */\r\nexport interface ShapedPreRenderedElementSchema extends PreRenderedElementSchema {\r\n    position?: Point\r\n    size?: Dimension\r\n}\r\n\r\n/**\r\n * Same as PreRenderedElement, but with a position and a size.\r\n */\r\nexport class ShapedPreRenderedElementImpl extends PreRenderedElementImpl implements BoundsAware, Locateable, Selectable, Alignable {\r\n    static readonly DEFAULT_FEATURES = [moveFeature, boundsFeature, selectFeature, alignFeature];\r\n\r\n    position: Point = Point.ORIGIN;\r\n    size: Dimension = Dimension.EMPTY;\r\n    selected: boolean = false;\r\n    alignment: Point = Point.ORIGIN;\r\n\r\n    get bounds(): Bounds {\r\n        return {\r\n            x: this.position.x,\r\n            y: this.position.y,\r\n            width: this.size.width,\r\n            height: this.size.height\r\n        };\r\n    }\r\n\r\n    set bounds(newBounds: Bounds) {\r\n        this.position = {\r\n            x: newBounds.x,\r\n            y: newBounds.y\r\n        };\r\n        this.size = {\r\n            width: newBounds.width,\r\n            height: newBounds.height\r\n        };\r\n    }\r\n\r\n}\r\n\r\n/** @deprecated Use `ShapedPreRenderedElementImpl` instead. */\r\nexport const ShapedPreRenderedElement = ShapedPreRenderedElementImpl;\r\n\r\n/**\r\n * A `foreignObject` element to be transferred to the DOM within the SVG.\r\n *\r\n * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of\r\n * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not\r\n * support rendering the `foreignObject` content.\r\n *\r\n * If no dimensions are specified in the schema element, this element will obtain the dimension of\r\n * its parent to fill the entire available room. Thus, this element requires specified bounds itself\r\n * or bounds to be available for its parent.\r\n */\r\nexport class ForeignObjectElementImpl extends ShapedPreRenderedElementImpl {\r\n    namespace: string;\r\n    override get bounds(): Bounds {\r\n        if (Dimension.isValid(this.size)) {\r\n            return {\r\n                x: this.position.x,\r\n                y: this.position.y,\r\n                width: this.size.width,\r\n                height: this.size.height\r\n            };\r\n        } else if (isBoundsAware(this.parent)) {\r\n            return {\r\n                x: this.position.x,\r\n                y: this.position.y,\r\n                width: this.parent.bounds.width,\r\n                height: this.parent.bounds.height\r\n            };\r\n        }\r\n        return Bounds.EMPTY;\r\n    }\r\n}\r\n\r\n/** @deprecated Use `ForeignObjectElementImpl` instead. */\r\nexport const ForeignObjectElement = ForeignObjectElementImpl;\r\n\r\n/**\r\n * Serializable schema for ForeignObjectElement.\r\n *\r\n * @deprecated Use `ForeignObjectElement` from `sprotty-protocol` instead.\r\n */\r\nexport interface ForeignObjectElementSchema extends ShapedPreRenderedElementSchema {\r\n    /** The namespace to be assigned to the elements inside of the `foreignObject`. */\r\n    namespace: string\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2020 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n/** @jsx svg */\r\nimport { svg } from './jsx';\r\nimport { injectable } from \"inversify\";\r\nimport virtualize from \"./virtualize\";\r\nimport { VNode } from \"snabbdom\";\r\nimport { IView, RenderingContext } from \"../base/views/view\";\r\nimport { setNamespace, setAttr } from \"../base/views/vnode-utils\";\r\nimport { ShapeView } from \"../features/bounds/views\";\r\nimport { ForeignObjectElementImpl, PreRenderedElementImpl, ShapedPreRenderedElementImpl } from \"./model\";\r\n\r\n@injectable()\r\nexport class PreRenderedView extends ShapeView {\r\n    render(model: Readonly<PreRenderedElementImpl>, context: RenderingContext): VNode | undefined {\r\n        if (model instanceof ShapedPreRenderedElementImpl && !this.isVisible(model, context)) {\r\n            return undefined;\r\n        }\r\n        const node = virtualize(model.code);\r\n        if (node === null) return undefined;\r\n        this.correctNamespace(node);\r\n        return node;\r\n    }\r\n\r\n    protected correctNamespace(node: VNode) {\r\n        if (node.sel === 'svg' || node.sel === 'g')\r\n            setNamespace(node, 'http://www.w3.org/2000/svg');\r\n    }\r\n}\r\n\r\n/**\r\n * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.\r\n * Note that `foreignObject` may not be supported by all browsers or SVG viewers.\r\n */\r\n@injectable()\r\nexport class ForeignObjectView implements IView {\r\n    render(model: ForeignObjectElementImpl, context: RenderingContext): VNode | undefined{\r\n        const foreignObjectContents = virtualize(model.code);\r\n        if (foreignObjectContents === null) return undefined;\r\n        const node = <g>\r\n            <foreignObject requiredFeatures='http://www.w3.org/TR/SVG11/feature#Extensibility'\r\n                height={model.bounds.height} width={model.bounds.width} x={0} y={0}>\r\n                {foreignObjectContents}\r\n            </foreignObject>\r\n            {context.renderChildren(model)}\r\n        </g>;\r\n        setAttr(node, 'class', model.type);\r\n        setNamespace(foreignObjectContents, model.namespace);\r\n        return node;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n /** @jsx html */\r\nimport { html } from './jsx';\r\n\r\nimport { injectable } from 'inversify';\r\nimport { VNode } from 'snabbdom';\r\nimport { IView, RenderingContext } from '../base/views/view';\r\nimport { setClass } from '../base/views/vnode-utils';\r\nimport { HtmlRootImpl } from './model';\r\n\r\n/**\r\n * View for `HtmlRoot` elements. Typically this is used in hover popup boxes.\r\n */\r\n@injectable()\r\nexport class HtmlRootView implements IView {\r\n    render(model: HtmlRootImpl, context: RenderingContext): VNode {\r\n        const root = <div>\r\n            { context.renderChildren(model) }\r\n        </div>;\r\n        for (const c of model.classes) {\r\n            setClass(root, c, true);\r\n        }\r\n        return root;\r\n    }\r\n}\r\n", "/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n", "/********************************************************************************\r\n * Copyright (c) 2017-2021 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { saveAs } from 'file-saver';\r\nimport { inject, injectable } from 'inversify';\r\nimport {\r\n    Action, OpenAction, ActionMessage, isActionMessage, CollapseExpandAction, CollapseExpandAllAction,\r\n    ComputedBoundsAction, RequestModelAction, RequestPopupModelAction, SetModelAction, UpdateModelAction\r\n} from 'sprotty-protocol/lib/actions';\r\nimport { SModelRoot } from 'sprotty-protocol/lib/model';\r\nimport { ActionHandlerRegistry } from '../base/actions/action-handler';\r\nimport { ICommand } from '../base/commands/command';\r\nimport { SetModelCommand } from '../base/features/set-model';\r\nimport { TYPES } from '../base/types';\r\nimport { RequestBoundsCommand } from '../features/bounds/bounds-manipulation';\r\nimport { ExportSvgAction } from '../features/export/svg-exporter';\r\nimport { UpdateModelCommand } from '../features/update/update-model';\r\nimport { ILogger } from '../utils/logging';\r\nimport { ComputedBoundsApplicator, ModelSource } from './model-source';\r\n\r\n/**\r\n * Sent by the external server when to signal a state change.\r\n */\r\nexport class ServerStatusAction {\r\n    static KIND = 'serverStatus';\r\n    kind = ServerStatusAction.KIND;\r\n    severity: string;\r\n    message: string;\r\n}\r\n\r\nconst receivedFromServerProperty = '__receivedFromServer';\r\n\r\n/**\r\n * A ModelSource that communicates with an external model provider, e.g.\r\n * a model editor.\r\n *\r\n * This class defines which actions are sent to and received from the\r\n * external model source.\r\n */\r\n@injectable()\r\nexport abstract class DiagramServerProxy extends ModelSource {\r\n\r\n    @inject(TYPES.ILogger) protected logger: ILogger;\r\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\r\n\r\n    clientId: string;\r\n\r\n    protected currentRoot: SModelRoot = {\r\n        type: 'NONE',\r\n        id: 'ROOT'\r\n    };\r\n\r\n    protected lastSubmittedModelType: string;\r\n\r\n    override get model(): SModelRoot {\r\n        return this.currentRoot;\r\n    }\r\n\r\n    override initialize(registry: ActionHandlerRegistry): void {\r\n        super.initialize(registry);\r\n\r\n        // Register actions to be sent to the remote server\r\n        registry.register(ComputedBoundsAction.KIND, this);\r\n        registry.register(RequestBoundsCommand.KIND, this);\r\n        registry.register(RequestPopupModelAction.KIND, this);\r\n        registry.register(CollapseExpandAction.KIND, this);\r\n        registry.register(CollapseExpandAllAction.KIND, this);\r\n        registry.register(OpenAction.KIND, this);\r\n        registry.register(ServerStatusAction.KIND, this);\r\n\r\n        if (!this.clientId) {\r\n            this.clientId = this.viewerOptions.baseDiv;\r\n        }\r\n    }\r\n\r\n    handle(action: Action): void | ICommand | Action {\r\n        const forwardToServer = this.handleLocally(action);\r\n        if (forwardToServer) {\r\n            this.forwardToServer(action);\r\n        }\r\n    }\r\n\r\n    protected forwardToServer(action: Action): void {\r\n        const message: ActionMessage = {\r\n            clientId: this.clientId,\r\n            action: action\r\n        };\r\n        this.logger.log(this, 'sending', message);\r\n        this.sendMessage(message);\r\n    }\r\n\r\n    /**\r\n     * Send a message to the remote diagram server.\r\n     */\r\n    protected abstract sendMessage(message: ActionMessage): void;\r\n\r\n    /**\r\n     * Called when a message is received from the remote diagram server.\r\n     */\r\n    protected messageReceived(data: any): void {\r\n        const object = typeof(data) === 'string' ? JSON.parse(data) : data;\r\n        if (isActionMessage(object) && object.action) {\r\n            if (!object.clientId || object.clientId === this.clientId) {\r\n                (object.action as any)[receivedFromServerProperty] = true;\r\n                this.logger.log(this, 'receiving', object);\r\n                this.actionDispatcher.dispatch(object.action).then(() => {\r\n                    this.storeNewModel(object.action);\r\n                });\r\n            }\r\n        } else {\r\n            this.logger.error(this, 'received data is not an action message', object);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check whether the given action should be handled locally. Returns true if the action should\r\n     * still be sent to the server, and false if it's only handled locally.\r\n     */\r\n    protected handleLocally(action: Action): boolean {\r\n        this.storeNewModel(action);\r\n        switch (action.kind) {\r\n            case ComputedBoundsAction.KIND:\r\n                return this.handleComputedBounds(action as ComputedBoundsAction);\r\n            case RequestModelAction.KIND:\r\n                return this.handleRequestModel(action as RequestModelAction);\r\n            case RequestBoundsCommand.KIND:\r\n                return false;\r\n            case ExportSvgAction.KIND:\r\n                return this.handleExportSvgAction(action as ExportSvgAction);\r\n            case ServerStatusAction.KIND:\r\n                return this.handleServerStateAction(action as ServerStatusAction);\r\n        }\r\n        return !(action as any)[receivedFromServerProperty];\r\n    }\r\n\r\n    /**\r\n     * Put the new model contained in the given action into the model storage, if there is any.\r\n     */\r\n    protected storeNewModel(action: Action): void {\r\n        if (action.kind === SetModelCommand.KIND\r\n            || action.kind === UpdateModelCommand.KIND\r\n            || action.kind === RequestBoundsCommand.KIND) {\r\n            const newRoot = (action as any).newRoot;\r\n            if (newRoot) {\r\n                this.currentRoot = newRoot as SModelRoot;\r\n                if (action.kind === SetModelCommand.KIND || action.kind === UpdateModelCommand.KIND) {\r\n                    this.lastSubmittedModelType = newRoot.type;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleRequestModel(action: RequestModelAction): boolean {\r\n        const newOptions = {\r\n            needsClientLayout: this.viewerOptions.needsClientLayout,\r\n            needsServerLayout: this.viewerOptions.needsServerLayout,\r\n            ...action.options\r\n        };\r\n        const newAction = {\r\n            ...action,\r\n            options: newOptions\r\n        };\r\n        this.forwardToServer(newAction);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they\r\n     * are applied to the current model locally and a model update is triggered.\r\n     */\r\n    protected handleComputedBounds(action: ComputedBoundsAction): boolean {\r\n        if (this.viewerOptions.needsServerLayout) {\r\n            return true;\r\n        } else {\r\n            const root = this.currentRoot;\r\n            this.computedBoundsApplicator.apply(root, action);\r\n            if (root.type === this.lastSubmittedModelType) {\r\n                this.actionDispatcher.dispatch(UpdateModelAction.create(root));\r\n            } else {\r\n                this.actionDispatcher.dispatch(SetModelAction.create(root));\r\n            }\r\n            this.lastSubmittedModelType = root.type;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected handleExportSvgAction(action: ExportSvgAction): boolean {\r\n        const blob = new Blob([action.svg], { type: 'text/plain;charset=utf-8' });\r\n        saveAs(blob, 'diagram.svg');\r\n        return false;\r\n    }\r\n\r\n    protected handleServerStateAction(action: ServerStatusAction): boolean {\r\n        return false;\r\n    }\r\n\r\n    commitModel(newRoot: SModelRoot): Promise<SModelRoot> | SModelRoot {\r\n        const previousRoot = this.currentRoot;\r\n        this.currentRoot = newRoot;\r\n        return previousRoot;\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { saveAs } from 'file-saver';\r\nimport { inject, injectable, optional } from 'inversify';\r\nimport {\r\n    Action, ComputedBoundsAction, RequestBoundsAction, RequestModelAction, RequestPopupModelAction,\r\n    SetModelAction, SetPopupModelAction, UpdateModelAction\r\n} from 'sprotty-protocol/lib/actions';\r\nimport { SModelElement, SModelRoot, Viewport} from 'sprotty-protocol/lib/model';\r\nimport { IModelLayoutEngine, GetViewportAction, ViewportResult, GetSelectionAction, SelectionResult } from 'sprotty-protocol';\r\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\r\nimport { SModelIndex, findElement } from 'sprotty-protocol/lib/utils/model-utils';\r\nimport { ILogger } from '../utils/logging';\r\nimport { FluentIterable } from '../utils/iterable';\r\nimport { TYPES } from '../base/types';\r\nimport { ActionHandlerRegistry } from '../base/actions/action-handler';\r\nimport { EMPTY_ROOT } from '../base/model/smodel-factory';\r\nimport { ExportSvgAction } from '../features/export/svg-exporter';\r\nimport { applyMatches, Match } from '../features/update/model-matching';\r\nimport { ModelSource, ComputedBoundsApplicator } from './model-source';\r\n\r\nexport interface IPopupModelProvider {\r\n    getPopupModel(request: RequestPopupModelAction, element?: SModelElement): SModelRoot | undefined;\r\n}\r\n\r\n/**\r\n * A model source that allows to set and modify the model through function calls.\r\n * This class can be used as a facade over the action-based API of sprotty. It handles\r\n * actions for bounds calculation and model updates.\r\n */\r\n@injectable()\r\nexport class LocalModelSource extends ModelSource {\r\n\r\n    @inject(TYPES.ILogger) protected readonly logger: ILogger;\r\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\r\n    @inject(TYPES.IPopupModelProvider)@optional() protected popupModelProvider?: IPopupModelProvider;\r\n    @inject(TYPES.IModelLayoutEngine)@optional() protected layoutEngine?: IModelLayoutEngine;\r\n\r\n    protected currentRoot: SModelRoot = EMPTY_ROOT;\r\n\r\n    /**\r\n     * The `type` property of the model root is used to determine whether a model update\r\n     * is a change of the previous model or a totally new one.\r\n     */\r\n    protected lastSubmittedModelType: string;\r\n\r\n    override get model(): SModelRoot {\r\n        return this.currentRoot;\r\n    }\r\n\r\n    set model(root: SModelRoot) {\r\n        this.setModel(root);\r\n    }\r\n\r\n    override initialize(registry: ActionHandlerRegistry): void {\r\n        super.initialize(registry);\r\n\r\n        // Register actions to be handled by the `handle` method\r\n        registry.register(ComputedBoundsAction.KIND, this);\r\n        registry.register(RequestPopupModelAction.KIND, this);\r\n    }\r\n\r\n    /**\r\n     * Set the model without incremental update.\r\n     */\r\n    setModel(newRoot: SModelRoot): Promise<void> {\r\n        this.currentRoot = newRoot;\r\n        return this.submitModel(newRoot, false);\r\n    }\r\n\r\n    commitModel(newRoot: SModelRoot): Promise<SModelRoot> | SModelRoot {\r\n        const previousRoot = this.currentRoot;\r\n        this.currentRoot = newRoot;\r\n        return previousRoot;\r\n    }\r\n\r\n    /**\r\n     * Apply an incremental update to the model with an animation showing the transition to\r\n     * the new state. If `newRoot` is undefined, the current root is submitted; in that case\r\n     * it is assumed that it has been modified before.\r\n     */\r\n    updateModel(newRoot?: SModelRoot): Promise<void> {\r\n        if (newRoot === undefined) {\r\n            return this.submitModel(this.currentRoot, true);\r\n        } else {\r\n            this.currentRoot = newRoot;\r\n            return this.submitModel(newRoot, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current selection from the model.\r\n     */\r\n    async getSelection(): Promise<FluentIterable<SModelElement>> {\r\n        const res = await this.actionDispatcher.request<SelectionResult>(GetSelectionAction.create());\r\n        const result: SModelElement[] = [];\r\n        this.gatherSelectedElements(this.currentRoot, new Set(res.selectedElementsIDs), result);\r\n        return result;\r\n    }\r\n\r\n    private gatherSelectedElements(element: SModelElement, selected: Set<string>, result: SModelElement[]): void {\r\n        if (selected.has(element.id)) {\r\n            result.push(element);\r\n        }\r\n        if (element.children) {\r\n            for (const child of element.children) {\r\n                this.gatherSelectedElements(child, selected, result);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current viewport from the model.\r\n     */\r\n    async getViewport(): Promise<Viewport & { canvasBounds: Bounds }> {\r\n        const res = await this.actionDispatcher.request<ViewportResult>(GetViewportAction.create());\r\n        return {\r\n            scroll: res.viewport.scroll,\r\n            zoom: res.viewport.zoom,\r\n            canvasBounds: res.canvasBounds\r\n        };\r\n    }\r\n\r\n    /**\r\n     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting\r\n     * `ComputedBoundsAction`, otherwise call `doSubmitModel(…)` directly.\r\n     */\r\n    protected async submitModel(newRoot: SModelRoot, update: boolean | Match[], cause?: Action): Promise<void> {\r\n        if (this.viewerOptions.needsClientLayout) {\r\n            const computedBounds = await this.actionDispatcher.request<ComputedBoundsAction>(RequestBoundsAction.create(newRoot));\r\n            const index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);\r\n            await this.doSubmitModel(newRoot, true, cause, index);\r\n        } else {\r\n            await this.doSubmitModel(newRoot, update, cause);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the\r\n     * `update` argument. If available, the model layout engine is invoked first.\r\n     */\r\n    protected async doSubmitModel(newRoot: SModelRoot, update: boolean | Match[],\r\n            cause?: Action, index?: SModelIndex): Promise<void> {\r\n        if (this.layoutEngine !== undefined) {\r\n            try {\r\n                const layoutResult = this.layoutEngine.layout(newRoot, index);\r\n                if (layoutResult instanceof Promise)\r\n                    newRoot = await layoutResult;\r\n                else if (layoutResult !== undefined)\r\n                    newRoot = layoutResult;\r\n            } catch (error) {\r\n                this.logger.error(this, error.toString(), error.stack);\r\n            }\r\n        }\r\n\r\n        const lastSubmittedModelType = this.lastSubmittedModelType;\r\n        this.lastSubmittedModelType = newRoot.type;\r\n        if (cause && cause.kind === RequestModelAction.KIND && (cause as RequestModelAction).requestId) {\r\n            const request = cause as RequestModelAction;\r\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot, request.requestId));\r\n        } else if (update && newRoot.type === lastSubmittedModelType) {\r\n            const input = Array.isArray(update) ? update : newRoot;\r\n            await this.actionDispatcher.dispatch(UpdateModelAction.create(input, { animate: true, cause }));\r\n        } else {\r\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Modify the current model with an array of matches.\r\n     */\r\n    applyMatches(matches: Match[]): Promise<void> {\r\n        const root = this.currentRoot;\r\n        applyMatches(root, matches);\r\n        return this.submitModel(root, matches);\r\n    }\r\n\r\n    /**\r\n     * Modify the current model by adding new elements.\r\n     */\r\n    addElements(elements: (SModelElement | { element: SModelElement, parentId: string })[]): Promise<void> {\r\n        const matches: Match[] = [];\r\n        for (const e of elements) {\r\n            const anye: any = e;\r\n            if (typeof anye.element === 'object' && typeof anye.parentId === 'string') {\r\n                matches.push({\r\n                    right: anye.element,\r\n                    rightParentId: anye.parentId\r\n                });\r\n            } else if (typeof anye.id === 'string') {\r\n                matches.push({\r\n                    right: anye,\r\n                    rightParentId: this.currentRoot.id\r\n                });\r\n            }\r\n        }\r\n        return this.applyMatches(matches);\r\n    }\r\n\r\n    /**\r\n     * Modify the current model by removing elements.\r\n     */\r\n    removeElements(elements: (string | { elementId: string, parentId: string })[]): Promise<void> {\r\n        const matches: Match[] = [];\r\n        const index = new SModelIndex();\r\n        index.add(this.currentRoot);\r\n        for (const e of elements) {\r\n            const anye: any = e;\r\n            if (anye.elementId !== undefined && anye.parentId !== undefined) {\r\n                const element = index.getById(anye.elementId);\r\n                if (element !== undefined) {\r\n                    matches.push({\r\n                        left: element,\r\n                        leftParentId: anye.parentId\r\n                    });\r\n                }\r\n            } else {\r\n                const element = index.getById(anye);\r\n                if (element !== undefined) {\r\n                    matches.push({\r\n                        left: element,\r\n                        leftParentId: this.currentRoot.id\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return this.applyMatches(matches);\r\n    }\r\n\r\n\r\n    // ----- Methods for handling incoming actions ----------------------------\r\n\r\n    handle(action: Action): void {\r\n        switch (action.kind) {\r\n            case RequestModelAction.KIND:\r\n                this.handleRequestModel(action as RequestModelAction);\r\n                break;\r\n            case ComputedBoundsAction.KIND:\r\n                this.computedBoundsApplicator.apply(this.currentRoot, action as ComputedBoundsAction);\r\n                break;\r\n            case RequestPopupModelAction.KIND:\r\n                this.handleRequestPopupModel(action as RequestPopupModelAction);\r\n                break;\r\n            case ExportSvgAction.KIND:\r\n                this.handleExportSvgAction(action as ExportSvgAction);\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected handleRequestModel(action: RequestModelAction): void {\r\n        this.submitModel(this.currentRoot, false, action);\r\n    }\r\n\r\n    protected handleRequestPopupModel(action: RequestPopupModelAction): void {\r\n        if (this.popupModelProvider !== undefined) {\r\n            const element = findElement(this.currentRoot, action.elementId);\r\n            const popupRoot = this.popupModelProvider.getPopupModel(action, element);\r\n            if (popupRoot !== undefined) {\r\n                popupRoot.canvasBounds = action.bounds;\r\n                this.actionDispatcher.dispatch(SetPopupModelAction.create(popupRoot, action.requestId));\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleExportSvgAction(action: ExportSvgAction): void {\r\n        const blob = new Blob([action.svg], { type: 'text/plain;charset=utf-8' });\r\n        saveAs(blob, 'diagram.svg');\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable, inject } from 'inversify';\r\nimport { LoggingAction } from 'sprotty-protocol/lib/actions';\r\nimport { ILogger, LogLevel } from '../utils/logging';\r\nimport { TYPES } from '../base/types';\r\nimport { ModelSource } from './model-source';\r\n\r\n/**\r\n * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.\r\n */\r\n@injectable()\r\nexport class ForwardingLogger implements ILogger {\r\n\r\n    @inject(TYPES.ModelSourceProvider) protected modelSourceProvider: () => Promise<ModelSource>;\r\n    @inject(TYPES.LogLevel) public logLevel: LogLevel;\r\n\r\n    error(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.error)\r\n            this.forward(thisArg, message, LogLevel.error, params);\r\n    }\r\n\r\n    warn(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.warn)\r\n            this.forward(thisArg, message, LogLevel.warn, params);\r\n    }\r\n\r\n    info(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.info)\r\n            this.forward(thisArg, message, LogLevel.info, params);\r\n    }\r\n\r\n    log(thisArg: any, message: string, ...params: any[]): void {\r\n        if (this.logLevel >= LogLevel.log) {\r\n            // We cannot forward 'log' level messages since that would lead to endless loops\r\n            try {\r\n                const caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);\r\n                console.log.apply(thisArg, [caller + ': ' + message, ...params]);\r\n            } catch (error) {}\r\n        }\r\n    }\r\n\r\n    protected forward(thisArg: any, message: string, logLevel: LogLevel, params: any[]) {\r\n        const date = new Date();\r\n        const action = LoggingAction.create({\r\n            message,\r\n            severity: LogLevel[logLevel],\r\n            time: date.toLocaleTimeString(),\r\n            caller: typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg),\r\n            params: params.map(p => JSON.stringify(p))\r\n        });\r\n        this.modelSourceProvider().then(modelSource => {\r\n            try {\r\n                modelSource.handle(action);\r\n            } catch (error) {\r\n                try {\r\n                    console.log.apply(thisArg, [message, action, error]);\r\n                } catch (e) {}\r\n            }\r\n        });\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport { injectable } from 'inversify';\r\nimport { ActionMessage } from 'sprotty-protocol/lib/actions';\r\nimport { DiagramServerProxy } from './diagram-server';\r\n\r\n/**\r\n * An external ModelSource that connects to the model provider using a websocket.\r\n */\r\n@injectable()\r\nexport class WebSocketDiagramServerProxy extends DiagramServerProxy {\r\n\r\n    protected webSocket?: WebSocket;\r\n\r\n    listen(webSocket: WebSocket): void {\r\n        webSocket.addEventListener('message', event => {\r\n            this.messageReceived(event.data);\r\n        });\r\n        webSocket.addEventListener('error', event => {\r\n            this.logger.error(this, 'error event received', event);\r\n        });\r\n        this.webSocket = webSocket;\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n    }\r\n\r\n    protected sendMessage(message: ActionMessage): void {\r\n        if (this.webSocket) {\r\n            this.webSocket.send(JSON.stringify(message));\r\n        } else {\r\n            throw new Error('WebSocket is not connected');\r\n        }\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nexport interface RGBColor {\r\n    red: number\r\n    green: number\r\n    blue: number\r\n}\r\n\r\nexport function rgb(red: number, green: number, blue: number): RGBColor {\r\n    return {\r\n        red: red,\r\n        green: green,\r\n        blue: blue\r\n    };\r\n}\r\n\r\nexport function toSVG(c: RGBColor): string {\r\n    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';\r\n}\r\n\r\nexport class ColorMap {\r\n\r\n    constructor(protected stops: RGBColor[]) {\r\n    }\r\n\r\n    getColor(t: number): RGBColor {\r\n        t = Math.max(0, Math.min(0.99999999, t));\r\n        const i = Math.floor(t * this.stops.length);\r\n        return this.stops[i];\r\n    }\r\n}\r\n", "/********************************************************************************\r\n * Copyright (c) 2017-2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\n// ------------------ Base ------------------\r\n\r\nexport * from './base/actions/action';\r\nexport * from './base/actions/action-dispatcher';\r\nexport * from './base/actions/action-handler';\r\nexport * from './base/actions/diagram-locker';\r\n\r\nexport * from './base/animations/animation-frame-syncer';\r\nexport * from './base/animations/animation';\r\nexport * from './base/animations/easing';\r\n\r\nexport * from './base/commands/command';\r\nexport * from './base/commands/command-registration';\r\nexport * from './base/commands/command-stack-options';\r\nexport * from './base/commands/command-stack';\r\n\r\nexport * from './base/features/initialize-canvas';\r\nexport * from './base/features/set-model';\r\n\r\nexport * from './base/model/smodel-factory';\r\nexport * from './base/model/smodel-utils';\r\nexport * from './base/model/smodel';\r\n\r\nexport * from './base/ui-extensions/ui-extension-registry';\r\nexport * from './base/ui-extensions/ui-extension';\r\n\r\nexport * from './base/views/key-tool';\r\nexport * from './base/views/mouse-tool';\r\nexport * from './base/views/thunk-view';\r\nexport * from './base/views/view';\r\nexport * from './base/views/viewer-cache';\r\nexport * from './base/views/viewer-options';\r\nexport * from './base/views/viewer';\r\nexport * from './base/views/vnode-postprocessor';\r\nexport * from './base/views/vnode-utils';\r\n\r\nexport * from './base/types';\r\n\r\nimport defaultModule from './base/di.config';\r\nexport { defaultModule };\r\n\r\n\r\n// ------------------ Features ------------------\r\n\r\nexport * from './features/bounds/bounds-manipulation';\r\nexport * from './features/bounds/hidden-bounds-updater';\r\nexport * from './features/bounds/layout';\r\nexport * from './features/bounds/model';\r\nexport * from './features/bounds/vbox-layout';\r\nexport * from './features/bounds/hbox-layout';\r\nexport * from './features/bounds/stack-layout';\r\nexport * from './features/bounds/views';\r\n\r\nexport * from './features/button/button-handler';\r\nexport * from './features/button/model';\r\n\r\nexport * from './features/command-palette/action-providers';\r\nexport * from './features/command-palette/command-palette';\r\n\r\nexport * from './features/context-menu/context-menu-service';\r\nexport * from './features/context-menu/menu-providers';\r\nexport * from './features/context-menu/mouse-listener';\r\n\r\nexport * from './features/edge-layout/di.config';\r\nexport * from './features/edge-layout/edge-layout';\r\nexport * from './features/edge-layout/model';\r\n\r\nexport * from './features/edit/create';\r\nexport * from './features/edit/create-on-drag';\r\nexport * from './features/edit/di.config';\r\nexport * from './features/edit/delete';\r\nexport * from './features/edit/edit-label';\r\nexport * from './features/edit/edit-label-ui';\r\nexport * from './features/edit/edit-routing';\r\nexport * from './features/edit/model';\r\nexport * from './features/edit/reconnect';\r\n\r\nexport * from './features/expand/expand';\r\nexport * from './features/expand/model';\r\nexport * from './features/expand/views';\r\n\r\nexport * from './features/export/export';\r\nexport * from './features/export/model';\r\nexport * from './features/export/svg-exporter';\r\n\r\nexport * from './features/fade/fade';\r\nexport * from './features/fade/model';\r\n\r\nexport * from './features/hover/hover';\r\nexport * from './features/hover/model';\r\n\r\nexport * from './features/decoration/model';\r\nexport * from './features/decoration/views';\r\nexport * from './features/decoration/decoration-placer';\r\n\r\nexport * from './features/edge-intersection/intersection-finder';\r\nexport * from './features/edge-intersection/sweepline';\r\n\r\nexport * from './features/move/model';\r\nexport * from './features/move/move';\r\nexport * from './features/move/snap';\r\n\r\nexport * from './features/nameable/model';\r\n\r\nexport * from './features/open/open';\r\nexport * from './features/open/model';\r\n\r\nexport * from './features/projection/model';\r\nexport * from './features/projection/views';\r\n\r\nexport * from './features/routing/anchor';\r\nexport * from './features/routing/abstract-edge-router';\r\nexport * from './features/routing/bezier-anchors';\r\nexport * from './features/routing/bezier-edge-router';\r\nexport * from './features/routing/manhattan-anchors';\r\nexport * from './features/routing/manhattan-edge-router';\r\nexport * from './features/routing/model';\r\nexport * from './features/routing/polyline-anchors';\r\nexport * from './features/routing/polyline-edge-router';\r\nexport * from './features/routing/routing';\r\nexport * from './features/routing/views';\r\n\r\nexport * from './features/select/model';\r\nexport * from './features/select/select';\r\n\r\nexport * from './features/undo-redo/undo-redo';\r\n\r\nexport * from './features/update/model-matching';\r\nexport * from './features/update/update-model';\r\n\r\nexport * from './features/viewport/center-fit';\r\nexport * from './features/viewport/model';\r\nexport * from './features/viewport/scroll';\r\nexport * from './features/viewport/viewport-root';\r\nexport * from './features/viewport/viewport';\r\nexport * from './features/viewport/zoom';\r\n\r\nexport * from './features/zorder/zorder';\r\n\r\nimport boundsModule from './features/bounds/di.config';\r\nimport buttonModule from './features/button/di.config';\r\nimport commandPaletteModule from './features/command-palette/di.config';\r\nimport contextMenuModule from './features/context-menu/di.config';\r\nimport decorationModule from './features/decoration/di.config';\r\nimport edgeIntersectionModule from './features/edge-intersection/di.config';\r\nimport edgeLayoutModule from './features/edge-layout/di.config';\r\nimport expandModule from './features/expand/di.config';\r\nimport exportModule from './features/export/di.config';\r\nimport fadeModule from './features/fade/di.config';\r\nimport hoverModule from './features/hover/di.config';\r\nimport moveModule from './features/move/di.config';\r\nimport openModule from './features/open/di.config';\r\nimport routingModule from './features/routing/di.config';\r\nimport selectModule from './features/select/di.config';\r\nimport undoRedoModule from './features/undo-redo/di.config';\r\nimport updateModule from './features/update/di.config';\r\nimport viewportModule from './features/viewport/di.config';\r\nimport zorderModule from './features/zorder/di.config';\r\n\r\nexport {\r\n    boundsModule, buttonModule, commandPaletteModule, contextMenuModule, decorationModule,\r\n    edgeIntersectionModule, edgeLayoutModule, expandModule, exportModule, fadeModule, hoverModule, moveModule,\r\n    openModule, routingModule, selectModule, undoRedoModule, updateModule, viewportModule, zorderModule\r\n};\r\n\r\n// ------------------ Graph ------------------\r\n\r\nexport * from './graph/sgraph';\r\nexport * from './graph/views';\r\n\r\n\r\n// ------------------ Library ------------------\r\n\r\nexport * from './lib/modules';\r\nexport * from './lib/generic-views';\r\nexport * from './lib/html-views';\r\nexport * from './lib/jsx';\r\nexport * from './lib/model';\r\nexport * from './lib/svg-views';\r\n\r\n\r\n// ------------------ Model Source ------------------\r\n\r\nexport * from './model-source/commit-model';\r\nexport * from './model-source/diagram-server';\r\nexport * from './model-source/local-model-source';\r\nexport * from './model-source/logging';\r\nexport * from './model-source/model-source';\r\nexport * from './model-source/websocket';\r\n\r\nimport modelSourceModule from './model-source/di.config';\r\nexport { modelSourceModule };\r\n\r\n\r\n// ------------------ Utilities ------------------\r\n\r\nexport * from './utils/browser';\r\nexport * from './utils/codicon';\r\nexport * from './utils/color';\r\nexport * from './utils/geometry';\r\nexport * from './utils/inversify';\r\nexport * from './utils/logging';\r\nexport * from './utils/registry';\r\n"],
  "mappings": "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",
  "names": ["array", "vnode", "InitializeCanvasBoundsAction", "create", "SetUIExtensionVisibilityAction", "create", "vnode", "vnode", "vnode", "tagName", "parentNode", "fragment", "isElement", "vnode", "isDocumentFragment", "init", "vnode", "thunk", "init", "vnode", "vnode", "vnode", "vnode", "vnode", "vnode", "vnode", "jsx", "vnode", "thunk", "vnode", "vnode", "LogLevel", "vnode", "vnode", "vnode", "fragment", "destroy", "fragment", "Side", "vnode", "EditLabelAction", "create", "ExportSvgAction", "create", "CommitModelAction", "create", "SwitchEditModeAction", "create", "RequestExportSvgAction", "create", "vnode", "vnode", "vnode", "vnode", "AddRemoveBezierSegmentAction", "create", "vnode", "vnode", "vnode", "toVNode", "a", "b", "c", "d", "g", "h", "f", "e"]
}
