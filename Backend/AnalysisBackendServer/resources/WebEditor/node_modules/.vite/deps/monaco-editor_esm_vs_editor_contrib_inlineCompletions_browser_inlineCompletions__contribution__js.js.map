{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/fixBrackets.js", "../../monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetParser.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js", "../../monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js", "../../monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js", "../../monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetSession.js", "../../monaco-editor/esm/vs/base/common/labels.js", "../../monaco-editor/esm/vs/base/common/uuid.js", "../../monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetVariables.js", "../../monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestMemory.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/wordContextKey.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestAlternatives.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestCommitCharacters.js", "../../monaco-editor/esm/vs/editor/contrib/smartSelect/browser/bracketSelections.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/completionModel.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestModel.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestOvertypingCapturer.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidget.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetStatus.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetDetails.js", "../../monaco-editor/esm/vs/platform/files/common/files.js", "../../monaco-editor/esm/vs/editor/common/services/getIconClasses.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetRenderer.js", "../../monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hoverParticipant.js", "../../monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { autorun } from '../../../../base/common/observable.js';\r\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\r\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\r\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../../nls.js';\r\nexport class InlineCompletionContextKeys extends Disposable {\r\n    constructor(contextKeyService, model) {\r\n        super();\r\n        this.contextKeyService = contextKeyService;\r\n        this.model = model;\r\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\r\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\r\n        this._register(autorun(reader => {\r\n            /** @description update context key: inlineCompletionVisible, suppressSuggestions */\r\n            const model = this.model.read(reader);\r\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\r\n            const isInlineCompletionVisible = !!(state === null || state === void 0 ? void 0 : state.inlineCompletion) && (state === null || state === void 0 ? void 0 : state.ghostText) !== undefined && !(state === null || state === void 0 ? void 0 : state.ghostText.isEmpty());\r\n            this.inlineCompletionVisible.set(isInlineCompletionVisible);\r\n            if ((state === null || state === void 0 ? void 0 : state.ghostText) && (state === null || state === void 0 ? void 0 : state.inlineCompletion)) {\r\n                this.suppressSuggestions.set(state.inlineCompletion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\r\n            }\r\n        }));\r\n        this._register(autorun(reader => {\r\n            /** @description update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize */\r\n            const model = this.model.read(reader);\r\n            let startsWithIndentation = false;\r\n            let startsWithIndentationLessThanTabSize = true;\r\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\r\n            if (!!(model === null || model === void 0 ? void 0 : model.selectedSuggestItem) && ghostText && ghostText.parts.length > 0) {\r\n                const { column, lines } = ghostText.parts[0];\r\n                const firstLine = lines[0];\r\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\r\n                const inIndentation = column <= indentationEndColumn;\r\n                if (inIndentation) {\r\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\r\n                    if (firstNonWsIdx === -1) {\r\n                        firstNonWsIdx = firstLine.length - 1;\r\n                    }\r\n                    startsWithIndentation = firstNonWsIdx > 0;\r\n                    const tabSize = model.textModel.getOptions().tabSize;\r\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\r\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\r\n                }\r\n            }\r\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\r\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\r\n        }));\r\n    }\r\n}\r\nInlineCompletionContextKeys.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\r\nInlineCompletionContextKeys.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\r\nInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\r\nInlineCompletionContextKeys.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\r\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport './ghostText.css';\r\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\r\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\r\nimport { ILanguageService } from '../../../common/languages/language.js';\r\nimport { InjectedTextCursorStops } from '../../../common/model.js';\r\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\r\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\r\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\r\nimport { GhostTextReplacement } from './ghostText.js';\r\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\r\nexport const GHOST_TEXT_DESCRIPTION = 'ghost-text';\r\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\r\n    constructor(editor, model, languageService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.model = model;\r\n        this.languageService = languageService;\r\n        this.isDisposed = observableValue(this, false);\r\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => /** @description editor.model */ this.editor.getModel());\r\n        this.uiState = derived(this, reader => {\r\n            if (this.isDisposed.read(reader)) {\r\n                return undefined;\r\n            }\r\n            const textModel = this.currentTextModel.read(reader);\r\n            if (textModel !== this.model.targetTextModel.read(reader)) {\r\n                return undefined;\r\n            }\r\n            const ghostText = this.model.ghostText.read(reader);\r\n            if (!ghostText) {\r\n                return undefined;\r\n            }\r\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\r\n            const inlineTexts = [];\r\n            const additionalLines = [];\r\n            function addToAdditionalLines(lines, className) {\r\n                if (additionalLines.length > 0) {\r\n                    const lastLine = additionalLines[additionalLines.length - 1];\r\n                    if (className) {\r\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\r\n                    }\r\n                    lastLine.content += lines[0];\r\n                    lines = lines.slice(1);\r\n                }\r\n                for (const line of lines) {\r\n                    additionalLines.push({\r\n                        content: line,\r\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\r\n                    });\r\n                }\r\n            }\r\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\r\n            let hiddenTextStartColumn = undefined;\r\n            let lastIdx = 0;\r\n            for (const part of ghostText.parts) {\r\n                let lines = part.lines;\r\n                if (hiddenTextStartColumn === undefined) {\r\n                    inlineTexts.push({\r\n                        column: part.column,\r\n                        text: lines[0],\r\n                        preview: part.preview,\r\n                    });\r\n                    lines = lines.slice(1);\r\n                }\r\n                else {\r\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\r\n                }\r\n                if (lines.length > 0) {\r\n                    addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\r\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\r\n                        hiddenTextStartColumn = part.column;\r\n                    }\r\n                }\r\n                lastIdx = part.column - 1;\r\n            }\r\n            if (hiddenTextStartColumn !== undefined) {\r\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\r\n            }\r\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\r\n            return {\r\n                replacedRange,\r\n                inlineTexts,\r\n                additionalLines,\r\n                hiddenRange,\r\n                lineNumber: ghostText.lineNumber,\r\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\r\n                targetTextModel: textModel,\r\n            };\r\n        });\r\n        this.decorations = derived(this, reader => {\r\n            const uiState = this.uiState.read(reader);\r\n            if (!uiState) {\r\n                return [];\r\n            }\r\n            const decorations = [];\r\n            if (uiState.replacedRange) {\r\n                decorations.push({\r\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\r\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\r\n                });\r\n            }\r\n            if (uiState.hiddenRange) {\r\n                decorations.push({\r\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\r\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\r\n                });\r\n            }\r\n            for (const p of uiState.inlineTexts) {\r\n                decorations.push({\r\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\r\n                    options: {\r\n                        description: GHOST_TEXT_DESCRIPTION,\r\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\r\n                        showIfCollapsed: true,\r\n                    }\r\n                });\r\n            }\r\n            return decorations;\r\n        });\r\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\r\n            /** @description lines */\r\n            const uiState = this.uiState.read(reader);\r\n            return uiState ? {\r\n                lineNumber: uiState.lineNumber,\r\n                additionalLines: uiState.additionalLines,\r\n                minReservedLineCount: uiState.additionalReservedLineCount,\r\n                targetTextModel: uiState.targetTextModel,\r\n            } : undefined;\r\n        })));\r\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\r\n        this._register(applyObservableDecorations(this.editor, this.decorations));\r\n    }\r\n    ownsViewZone(viewZoneId) {\r\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\r\n    }\r\n};\r\nGhostTextWidget = __decorate([\r\n    __param(2, ILanguageService)\r\n], GhostTextWidget);\r\nexport { GhostTextWidget };\r\nclass AdditionalLinesWidget extends Disposable {\r\n    get viewZoneId() { return this._viewZoneId; }\r\n    constructor(editor, languageIdCodec, lines) {\r\n        super();\r\n        this.editor = editor;\r\n        this.languageIdCodec = languageIdCodec;\r\n        this.lines = lines;\r\n        this._viewZoneId = undefined;\r\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */)\r\n            || e.hasChanged(116 /* EditorOption.stopRenderingLineAfter */)\r\n            || e.hasChanged(98 /* EditorOption.renderWhitespace */)\r\n            || e.hasChanged(93 /* EditorOption.renderControlCharacters */)\r\n            || e.hasChanged(51 /* EditorOption.fontLigatures */)\r\n            || e.hasChanged(50 /* EditorOption.fontInfo */)\r\n            || e.hasChanged(66 /* EditorOption.lineHeight */)));\r\n        this._register(autorun(reader => {\r\n            /** @description update view zone */\r\n            const lines = this.lines.read(reader);\r\n            this.editorOptionsChanged.read(reader);\r\n            if (lines) {\r\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\r\n            }\r\n            else {\r\n                this.clear();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n        });\r\n    }\r\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\r\n            if (heightInLines > 0) {\r\n                const domNode = document.createElement('div');\r\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\r\n                this._viewZoneId = changeAccessor.addZone({\r\n                    afterLineNumber: lineNumber,\r\n                    heightInLines: heightInLines,\r\n                    domNode,\r\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\r\n    const disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\r\n    const stopRenderingLineAfter = opts.get(116 /* EditorOption.stopRenderingLineAfter */);\r\n    // To avoid visual confusion, we don't want to render visible whitespace\r\n    const renderWhitespace = 'none';\r\n    const renderControlCharacters = opts.get(93 /* EditorOption.renderControlCharacters */);\r\n    const fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\r\n    const fontInfo = opts.get(50 /* EditorOption.fontInfo */);\r\n    const lineHeight = opts.get(66 /* EditorOption.lineHeight */);\r\n    const sb = new StringBuilder(10000);\r\n    sb.appendString('<div class=\"suggest-preview-text\">');\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        const lineData = lines[i];\r\n        const line = lineData.content;\r\n        sb.appendString('<div class=\"view-line');\r\n        sb.appendString('\" style=\"top:');\r\n        sb.appendString(String(i * lineHeight));\r\n        sb.appendString('px;width:1000000px;\">');\r\n        const isBasicASCII = strings.isBasicASCII(line);\r\n        const containsRTL = strings.containsRTL(line);\r\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\r\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\r\n        sb.appendString('</div>');\r\n    }\r\n    sb.appendString('</div>');\r\n    applyFontInfo(domNode, fontInfo);\r\n    const html = sb.build();\r\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n    domNode.innerHTML = trustedhtml;\r\n}\r\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { autorunOpts } from '../../../../base/common/observable.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nexport function applyEdits(text, edits) {\r\n    const transformer = new PositionOffsetTransformer(text);\r\n    const offsetEdits = edits.map(e => {\r\n        const range = Range.lift(e.range);\r\n        return ({\r\n            startOffset: transformer.getOffset(range.getStartPosition()),\r\n            endOffset: transformer.getOffset(range.getEndPosition()),\r\n            text: e.text\r\n        });\r\n    });\r\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\r\n    for (const edit of offsetEdits) {\r\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\r\n    }\r\n    return text;\r\n}\r\nclass PositionOffsetTransformer {\r\n    constructor(text) {\r\n        this.lineStartOffsetByLineIdx = [];\r\n        this.lineStartOffsetByLineIdx.push(0);\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text.charAt(i) === '\\n') {\r\n                this.lineStartOffsetByLineIdx.push(i + 1);\r\n            }\r\n        }\r\n    }\r\n    getOffset(position) {\r\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\r\n    }\r\n}\r\nconst array = [];\r\nexport function getReadonlyEmptyArray() {\r\n    return array;\r\n}\r\nexport class ColumnRange {\r\n    constructor(startColumn, endColumnExclusive) {\r\n        this.startColumn = startColumn;\r\n        this.endColumnExclusive = endColumnExclusive;\r\n        if (startColumn > endColumnExclusive) {\r\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\r\n        }\r\n    }\r\n    toRange(lineNumber) {\r\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\r\n    }\r\n    equals(other) {\r\n        return this.startColumn === other.startColumn\r\n            && this.endColumnExclusive === other.endColumnExclusive;\r\n    }\r\n}\r\nexport function applyObservableDecorations(editor, decorations) {\r\n    const d = new DisposableStore();\r\n    const decorationsCollection = editor.createDecorationsCollection();\r\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\r\n        const d = decorations.read(reader);\r\n        decorationsCollection.set(d);\r\n    }));\r\n    d.add({\r\n        dispose: () => {\r\n            decorationsCollection.clear();\r\n        }\r\n    });\r\n    return d;\r\n}\r\nexport function addPositions(pos1, pos2) {\r\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\r\n}\r\nexport function lengthOfText(text) {\r\n    let line = 1;\r\n    let column = 1;\r\n    for (const c of text) {\r\n        if (c === '\\n') {\r\n            line++;\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n    }\r\n    return new Position(line, column);\r\n}\r\n", "import { applyEdits } from './utils.js';\r\nexport class GhostText {\r\n    constructor(lineNumber, parts) {\r\n        this.lineNumber = lineNumber;\r\n        this.parts = parts;\r\n    }\r\n    equals(other) {\r\n        return this.lineNumber === other.lineNumber &&\r\n            this.parts.length === other.parts.length &&\r\n            this.parts.every((part, index) => part.equals(other.parts[index]));\r\n    }\r\n    renderForScreenReader(lineText) {\r\n        if (this.parts.length === 0) {\r\n            return '';\r\n        }\r\n        const lastPart = this.parts[this.parts.length - 1];\r\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\r\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\r\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\r\n            text: p.lines.join('\\n')\r\n        })));\r\n        return text.substring(this.parts[0].column - 1);\r\n    }\r\n    isEmpty() {\r\n        return this.parts.every(p => p.lines.length === 0);\r\n    }\r\n    get lineCount() {\r\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\r\n    }\r\n}\r\nexport class GhostTextPart {\r\n    constructor(column, lines, \r\n    /**\r\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\r\n    */\r\n    preview) {\r\n        this.column = column;\r\n        this.lines = lines;\r\n        this.preview = preview;\r\n    }\r\n    equals(other) {\r\n        return this.column === other.column &&\r\n            this.lines.length === other.lines.length &&\r\n            this.lines.every((line, index) => line === other.lines[index]);\r\n    }\r\n}\r\nexport class GhostTextReplacement {\r\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\r\n        this.lineNumber = lineNumber;\r\n        this.columnRange = columnRange;\r\n        this.newLines = newLines;\r\n        this.additionalReservedLineCount = additionalReservedLineCount;\r\n        this.parts = [\r\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\r\n        ];\r\n    }\r\n    renderForScreenReader(_lineText) {\r\n        return this.newLines.join('\\n');\r\n    }\r\n    get lineCount() {\r\n        return this.newLines.length;\r\n    }\r\n    isEmpty() {\r\n        return this.parts.every(p => p.lines.length === 0);\r\n    }\r\n    equals(other) {\r\n        return this.lineNumber === other.lineNumber &&\r\n            this.columnRange.equals(other.columnRange) &&\r\n            this.newLines.length === other.newLines.length &&\r\n            this.newLines.every((line, index) => line === other.newLines[index]) &&\r\n            this.additionalReservedLineCount === other.additionalReservedLineCount;\r\n    }\r\n}\r\nexport function ghostTextOrReplacementEquals(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (!a || !b) {\r\n        return false;\r\n    }\r\n    if (a instanceof GhostText && b instanceof GhostText) {\r\n        return a.equals(b);\r\n    }\r\n    if (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\r\n        return a.equals(b);\r\n    }\r\n    return false;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LanguageAgnosticBracketTokens } from './bracketPairsTree/brackets.js';\r\nimport { lengthAdd, lengthGetColumnCountIfZeroLineCount, lengthZero } from './bracketPairsTree/length.js';\r\nimport { parseDocument } from './bracketPairsTree/parser.js';\r\nimport { DenseKeyProvider } from './bracketPairsTree/smallImmutableSet.js';\r\nimport { TextBufferTokenizer } from './bracketPairsTree/tokenizer.js';\r\nexport function fixBracketsInLine(tokens, languageConfigurationService) {\r\n    const denseKeyProvider = new DenseKeyProvider();\r\n    const bracketTokens = new LanguageAgnosticBracketTokens(denseKeyProvider, (languageId) => languageConfigurationService.getLanguageConfiguration(languageId));\r\n    const tokenizer = new TextBufferTokenizer(new StaticTokenizerSource([tokens]), bracketTokens);\r\n    const node = parseDocument(tokenizer, [], undefined, true);\r\n    let str = '';\r\n    const line = tokens.getLineContent();\r\n    function processNode(node, offset) {\r\n        if (node.kind === 2 /* AstNodeKind.Pair */) {\r\n            processNode(node.openingBracket, offset);\r\n            offset = lengthAdd(offset, node.openingBracket.length);\r\n            if (node.child) {\r\n                processNode(node.child, offset);\r\n                offset = lengthAdd(offset, node.child.length);\r\n            }\r\n            if (node.closingBracket) {\r\n                processNode(node.closingBracket, offset);\r\n                offset = lengthAdd(offset, node.closingBracket.length);\r\n            }\r\n            else {\r\n                const singleLangBracketTokens = bracketTokens.getSingleLanguageBracketTokens(node.openingBracket.languageId);\r\n                const closingTokenText = singleLangBracketTokens.findClosingTokenText(node.openingBracket.bracketIds);\r\n                str += closingTokenText;\r\n            }\r\n        }\r\n        else if (node.kind === 3 /* AstNodeKind.UnexpectedClosingBracket */) {\r\n            // remove the bracket\r\n        }\r\n        else if (node.kind === 0 /* AstNodeKind.Text */ || node.kind === 1 /* AstNodeKind.Bracket */) {\r\n            str += line.substring(lengthGetColumnCountIfZeroLineCount(offset), lengthGetColumnCountIfZeroLineCount(lengthAdd(offset, node.length)));\r\n        }\r\n        else if (node.kind === 4 /* AstNodeKind.List */) {\r\n            for (const child of node.children) {\r\n                processNode(child, offset);\r\n                offset = lengthAdd(offset, child.length);\r\n            }\r\n        }\r\n    }\r\n    processNode(node, lengthZero);\r\n    return str;\r\n}\r\nclass StaticTokenizerSource {\r\n    constructor(lines) {\r\n        this.lines = lines;\r\n        this.tokenization = {\r\n            getLineTokens: (lineNumber) => {\r\n                return this.lines[lineNumber - 1];\r\n            }\r\n        };\r\n    }\r\n    getLineCount() {\r\n        return this.lines.length;\r\n    }\r\n    getLineLength(lineNumber) {\r\n        return this.lines[lineNumber - 1].getLineContent().length;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Scanner {\r\n    constructor() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    static isDigitCharacter(ch) {\r\n        return ch >= 48 /* CharCode.Digit0 */ && ch <= 57 /* CharCode.Digit9 */;\r\n    }\r\n    static isVariableCharacter(ch) {\r\n        return ch === 95 /* CharCode.Underline */\r\n            || (ch >= 97 /* CharCode.a */ && ch <= 122 /* CharCode.z */)\r\n            || (ch >= 65 /* CharCode.A */ && ch <= 90 /* CharCode.Z */);\r\n    }\r\n    text(value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    }\r\n    tokenText(token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    }\r\n    next() {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* TokenType.EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        const pos = this.pos;\r\n        let len = 0;\r\n        let ch = this.value.charCodeAt(pos);\r\n        let type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type, pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* TokenType.Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* TokenType.VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // format\r\n        type = 10 /* TokenType.Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type, pos, len };\r\n    }\r\n}\r\nScanner._table = {\r\n    [36 /* CharCode.DollarSign */]: 0 /* TokenType.Dollar */,\r\n    [58 /* CharCode.Colon */]: 1 /* TokenType.Colon */,\r\n    [44 /* CharCode.Comma */]: 2 /* TokenType.Comma */,\r\n    [123 /* CharCode.OpenCurlyBrace */]: 3 /* TokenType.CurlyOpen */,\r\n    [125 /* CharCode.CloseCurlyBrace */]: 4 /* TokenType.CurlyClose */,\r\n    [92 /* CharCode.Backslash */]: 5 /* TokenType.Backslash */,\r\n    [47 /* CharCode.Slash */]: 6 /* TokenType.Forwardslash */,\r\n    [124 /* CharCode.Pipe */]: 7 /* TokenType.Pipe */,\r\n    [43 /* CharCode.Plus */]: 11 /* TokenType.Plus */,\r\n    [45 /* CharCode.Dash */]: 12 /* TokenType.Dash */,\r\n    [63 /* CharCode.QuestionMark */]: 13 /* TokenType.QuestionMark */,\r\n};\r\nexport class Marker {\r\n    constructor() {\r\n        this._children = [];\r\n    }\r\n    appendChild(child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    }\r\n    replace(child, others) {\r\n        const { parent } = child;\r\n        const idx = parent.children.indexOf(child);\r\n        const newChildren = parent.children.slice(0);\r\n        newChildren.splice(idx, 1, ...others);\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (const child of children) {\r\n                child.parent = parent;\r\n                _fixParent(child.children, child);\r\n            }\r\n        })(others, parent);\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get rightMostDescendant() {\r\n        if (this._children.length > 0) {\r\n            return this._children[this._children.length - 1].rightMostDescendant;\r\n        }\r\n        return this;\r\n    }\r\n    get snippet() {\r\n        let candidate = this;\r\n        while (true) {\r\n            if (!candidate) {\r\n                return undefined;\r\n            }\r\n            if (candidate instanceof TextmateSnippet) {\r\n                return candidate;\r\n            }\r\n            candidate = candidate.parent;\r\n        }\r\n    }\r\n    toString() {\r\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\r\n    }\r\n    len() {\r\n        return 0;\r\n    }\r\n}\r\nexport class Text extends Marker {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    len() {\r\n        return this.value.length;\r\n    }\r\n    clone() {\r\n        return new Text(this.value);\r\n    }\r\n}\r\nexport class TransformableMarker extends Marker {\r\n}\r\nexport class Placeholder extends TransformableMarker {\r\n    static compareByIndex(a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    constructor(index) {\r\n        super();\r\n        this.index = index;\r\n    }\r\n    get isFinalTabstop() {\r\n        return this.index === 0;\r\n    }\r\n    get choice() {\r\n        return this._children.length === 1 && this._children[0] instanceof Choice\r\n            ? this._children[0]\r\n            : undefined;\r\n    }\r\n    clone() {\r\n        const ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class Choice extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.options = [];\r\n    }\r\n    appendChild(marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    }\r\n    toString() {\r\n        return this.options[0].value;\r\n    }\r\n    len() {\r\n        return this.options[0].len();\r\n    }\r\n    clone() {\r\n        const ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    }\r\n}\r\nexport class Transform extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.regexp = new RegExp('');\r\n    }\r\n    resolve(value) {\r\n        const _this = this;\r\n        let didMatch = false;\r\n        let ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    }\r\n    _replace(groups) {\r\n        let ret = '';\r\n        for (const marker of this._children) {\r\n            if (marker instanceof FormatString) {\r\n                let value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    toString() {\r\n        return '';\r\n    }\r\n    clone() {\r\n        const ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class FormatString extends Marker {\r\n    constructor(index, shorthandName, ifValue, elseValue) {\r\n        super();\r\n        this.index = index;\r\n        this.shorthandName = shorthandName;\r\n        this.ifValue = ifValue;\r\n        this.elseValue = elseValue;\r\n    }\r\n    resolve(value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (this.shorthandName === 'camelcase') {\r\n            return !value ? '' : this._toCamelCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    }\r\n    _toPascalCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(word => {\r\n            return word.charAt(0).toUpperCase() + word.substr(1);\r\n        })\r\n            .join('');\r\n    }\r\n    _toCamelCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map((word, index) => {\r\n            if (index === 0) {\r\n                return word.charAt(0).toLowerCase() + word.substr(1);\r\n            }\r\n            return word.charAt(0).toUpperCase() + word.substr(1);\r\n        })\r\n            .join('');\r\n    }\r\n    clone() {\r\n        const ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    }\r\n}\r\nexport class Variable extends TransformableMarker {\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n    resolve(resolver) {\r\n        let value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clone() {\r\n        const ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nfunction walk(marker, visitor) {\r\n    const stack = [...marker];\r\n    while (stack.length > 0) {\r\n        const marker = stack.shift();\r\n        const recurse = visitor(marker);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift(...marker.children);\r\n    }\r\n}\r\nexport class TextmateSnippet extends Marker {\r\n    get placeholderInfo() {\r\n        if (!this._placeholders) {\r\n            // fill in placeholders\r\n            const all = [];\r\n            let last;\r\n            this.walk(function (candidate) {\r\n                if (candidate instanceof Placeholder) {\r\n                    all.push(candidate);\r\n                    last = !last || last.index < candidate.index ? candidate : last;\r\n                }\r\n                return true;\r\n            });\r\n            this._placeholders = { all, last };\r\n        }\r\n        return this._placeholders;\r\n    }\r\n    get placeholders() {\r\n        const { all } = this.placeholderInfo;\r\n        return all;\r\n    }\r\n    offset(marker) {\r\n        let pos = 0;\r\n        let found = false;\r\n        this.walk(candidate => {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    }\r\n    fullLen(marker) {\r\n        let ret = 0;\r\n        walk([marker], marker => {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    }\r\n    enclosingPlaceholders(placeholder) {\r\n        const ret = [];\r\n        let { parent } = placeholder;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    }\r\n    resolveVariables(resolver) {\r\n        this.walk(candidate => {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    this._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    }\r\n    appendChild(child) {\r\n        this._placeholders = undefined;\r\n        return super.appendChild(child);\r\n    }\r\n    replace(child, others) {\r\n        this._placeholders = undefined;\r\n        return super.replace(child, others);\r\n    }\r\n    clone() {\r\n        const ret = new TextmateSnippet();\r\n        this._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n    walk(visitor) {\r\n        walk(this.children, visitor);\r\n    }\r\n}\r\nexport class SnippetParser {\r\n    constructor() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* TokenType.EOF */, pos: 0, len: 0 };\r\n    }\r\n    static escape(value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    }\r\n    static guessNeedsClipboard(template) {\r\n        return /\\${?CLIPBOARD/.test(template);\r\n    }\r\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\r\n        const snippet = new TextmateSnippet();\r\n        this.parseFragment(value, snippet);\r\n        this.ensureFinalTabstop(snippet, enforceFinalTabstop !== null && enforceFinalTabstop !== void 0 ? enforceFinalTabstop : false, insertFinalTabstop !== null && insertFinalTabstop !== void 0 ? insertFinalTabstop : false);\r\n        return snippet;\r\n    }\r\n    parseFragment(value, snippet) {\r\n        const offset = snippet.children.length;\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        const placeholderDefaultValues = new Map();\r\n        const incompletePlaceholders = [];\r\n        snippet.walk(marker => {\r\n            if (marker instanceof Placeholder) {\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        const fillInIncompletePlaceholder = (placeholder, stack) => {\r\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (!defaultValues) {\r\n                return;\r\n            }\r\n            const clone = new Placeholder(placeholder.index);\r\n            clone.transform = placeholder.transform;\r\n            for (const child of defaultValues) {\r\n                const newChild = child.clone();\r\n                clone.appendChild(newChild);\r\n                // \"recurse\" on children that are again placeholders\r\n                if (newChild instanceof Placeholder && placeholderDefaultValues.has(newChild.index) && !stack.has(newChild.index)) {\r\n                    stack.add(newChild.index);\r\n                    fillInIncompletePlaceholder(newChild, stack);\r\n                    stack.delete(newChild.index);\r\n                }\r\n            }\r\n            snippet.replace(placeholder, [clone]);\r\n        };\r\n        const stack = new Set();\r\n        for (const placeholder of incompletePlaceholders) {\r\n            fillInIncompletePlaceholder(placeholder, stack);\r\n        }\r\n        return snippet.children.slice(offset);\r\n    }\r\n    ensureFinalTabstop(snippet, enforceFinalTabstop, insertFinalTabstop) {\r\n        if (enforceFinalTabstop || insertFinalTabstop && snippet.placeholders.length > 0) {\r\n            const finalTabstop = snippet.placeholders.find(p => p.index === 0);\r\n            if (!finalTabstop) {\r\n                // the snippet uses placeholders but has no\r\n                // final tabstop defined -> insert at the end\r\n                snippet.appendChild(new Placeholder(0));\r\n            }\r\n        }\r\n    }\r\n    _accept(type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            const ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    }\r\n    _backTo(token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    }\r\n    _until(type) {\r\n        const start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* TokenType.EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* TokenType.Backslash */) {\r\n                const nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* TokenType.Dollar */\r\n                    && nextToken.type !== 4 /* TokenType.CurlyClose */\r\n                    && nextToken.type !== 5 /* TokenType.Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    }\r\n    _parse(marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    }\r\n    // \\$, \\\\, \\} -> just text\r\n    _parseEscaped(marker) {\r\n        let value;\r\n        if (value = this._accept(5 /* TokenType.Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* TokenType.Dollar */, true)\r\n                || this._accept(4 /* TokenType.CurlyClose */, true)\r\n                || this._accept(5 /* TokenType.Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // $foo -> variable, $1 -> tabstop\r\n    _parseTabstopOrVariableName(parent) {\r\n        let value;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* TokenType.Dollar */)\r\n            && (value = this._accept(9 /* TokenType.VariableName */, true) || this._accept(8 /* TokenType.Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    }\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    _parseComplexPlaceholder(parent) {\r\n        let index;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* TokenType.Dollar */)\r\n            && this._accept(3 /* TokenType.CurlyOpen */)\r\n            && (index = this._accept(8 /* TokenType.Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* TokenType.Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* TokenType.Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            const choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* TokenType.Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* TokenType.Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseChoiceElement(parent) {\r\n        const token = this._token;\r\n        const values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* TokenType.Comma */ || this._token.type === 7 /* TokenType.Pipe */) {\r\n                break;\r\n            }\r\n            let value;\r\n            if (value = this._accept(5 /* TokenType.Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* TokenType.Comma */, true)\r\n                    || this._accept(7 /* TokenType.Pipe */, true)\r\n                    || this._accept(5 /* TokenType.Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    }\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    _parseComplexVariable(parent) {\r\n        let name;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* TokenType.Dollar */)\r\n            && this._accept(3 /* TokenType.CurlyOpen */)\r\n            && (name = this._accept(9 /* TokenType.VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const variable = new Variable(name);\r\n        if (this._accept(1 /* TokenType.Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseTransform(parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        const transform = new Transform();\r\n        let regexValue = '';\r\n        let regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\r\n                escaped = this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* TokenType.EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\r\n                escaped = this._accept(5 /* TokenType.Backslash */, true) || this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* TokenType.EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    }\r\n    _parseFormatString(parent) {\r\n        const token = this._token;\r\n        if (!this._accept(0 /* TokenType.Dollar */)) {\r\n            return false;\r\n        }\r\n        let complex = false;\r\n        if (this._accept(3 /* TokenType.CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        const index = this._accept(8 /* TokenType.Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* TokenType.Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* TokenType.Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            const shorthand = this._accept(9 /* TokenType.VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* TokenType.CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* TokenType.Plus */)) {\r\n            // ${1:+<if>}\r\n            const ifValue = this._until(4 /* TokenType.CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* TokenType.Dash */)) {\r\n            // ${2:-<else>}\r\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* TokenType.QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            const ifValue = this._until(1 /* TokenType.Colon */);\r\n            if (ifValue) {\r\n                const elseValue = this._until(4 /* TokenType.CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    }\r\n    _parseAnything(marker) {\r\n        if (this._token.type !== 14 /* TokenType.EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { assertNever } from '../../../../base/common/assert.js';\r\nimport { DeferredPromise } from '../../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\r\nimport { SetMap } from '../../../../base/common/map.js';\r\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\r\nimport { getReadonlyEmptyArray } from './utils.js';\r\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\r\nexport async function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\r\n    // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\r\n    const defaultReplaceRange = getDefaultRange(position, model);\r\n    const providers = registry.all(model);\r\n    const multiMap = new SetMap();\r\n    for (const provider of providers) {\r\n        if (provider.groupId) {\r\n            multiMap.add(provider.groupId, provider);\r\n        }\r\n    }\r\n    function getPreferredProviders(provider) {\r\n        if (!provider.yieldsToGroupIds) {\r\n            return [];\r\n        }\r\n        const result = [];\r\n        for (const groupId of provider.yieldsToGroupIds || []) {\r\n            const providers = multiMap.get(groupId);\r\n            for (const p of providers) {\r\n                result.push(p);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    const states = new Map();\r\n    const seen = new Set();\r\n    function findPreferredProviderCircle(provider, stack) {\r\n        stack = [...stack, provider];\r\n        if (seen.has(provider)) {\r\n            return stack;\r\n        }\r\n        seen.add(provider);\r\n        try {\r\n            const preferred = getPreferredProviders(provider);\r\n            for (const p of preferred) {\r\n                const c = findPreferredProviderCircle(p, stack);\r\n                if (c) {\r\n                    return c;\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            seen.delete(provider);\r\n        }\r\n        return undefined;\r\n    }\r\n    function processProvider(provider) {\r\n        const state = states.get(provider);\r\n        if (state) {\r\n            return state;\r\n        }\r\n        const circle = findPreferredProviderCircle(provider, []);\r\n        if (circle) {\r\n            onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\r\n        }\r\n        const deferredPromise = new DeferredPromise();\r\n        states.set(provider, deferredPromise.p);\r\n        (async () => {\r\n            if (!circle) {\r\n                const preferred = getPreferredProviders(provider);\r\n                for (const p of preferred) {\r\n                    const result = await processProvider(p);\r\n                    if (result && result.items.length > 0) {\r\n                        // Skip provider\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            try {\r\n                const completions = await provider.provideInlineCompletions(model, position, context, token);\r\n                return completions;\r\n            }\r\n            catch (e) {\r\n                onUnexpectedExternalError(e);\r\n                return undefined;\r\n            }\r\n        })().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\r\n        return deferredPromise.p;\r\n    }\r\n    const providerResults = await Promise.all(providers.map(async (provider) => ({ provider, completions: await processProvider(provider) })));\r\n    const itemsByHash = new Map();\r\n    const lists = [];\r\n    for (const result of providerResults) {\r\n        const completions = result.completions;\r\n        if (!completions) {\r\n            continue;\r\n        }\r\n        const list = new InlineCompletionList(completions, result.provider);\r\n        lists.push(list);\r\n        for (const item of completions.items) {\r\n            const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\r\n            itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\r\n        }\r\n    }\r\n    return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\r\n}\r\nexport class InlineCompletionProviderResult {\r\n    constructor(\r\n    /**\r\n     * Free of duplicates.\r\n     */\r\n    completions, hashs, providerResults) {\r\n        this.completions = completions;\r\n        this.hashs = hashs;\r\n        this.providerResults = providerResults;\r\n    }\r\n    has(item) {\r\n        return this.hashs.has(item.hash());\r\n    }\r\n    dispose() {\r\n        for (const result of this.providerResults) {\r\n            result.removeRef();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\r\n * computed them.\r\n */\r\nexport class InlineCompletionList {\r\n    constructor(inlineCompletions, provider) {\r\n        this.inlineCompletions = inlineCompletions;\r\n        this.provider = provider;\r\n        this.refCount = 1;\r\n    }\r\n    addRef() {\r\n        this.refCount++;\r\n    }\r\n    removeRef() {\r\n        this.refCount--;\r\n        if (this.refCount === 0) {\r\n            this.provider.freeInlineCompletions(this.inlineCompletions);\r\n        }\r\n    }\r\n}\r\nexport class InlineCompletionItem {\r\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\r\n        let insertText;\r\n        let snippetInfo;\r\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\r\n        if (typeof inlineCompletion.insertText === 'string') {\r\n            insertText = inlineCompletion.insertText;\r\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\r\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\r\n                // Modify range depending on if brackets are added or removed\r\n                const diff = insertText.length - inlineCompletion.insertText.length;\r\n                if (diff !== 0) {\r\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\r\n                }\r\n            }\r\n            snippetInfo = undefined;\r\n        }\r\n        else if ('snippet' in inlineCompletion.insertText) {\r\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\r\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\r\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\r\n                // Modify range depending on if brackets are added or removed\r\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\r\n                if (diff !== 0) {\r\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\r\n                }\r\n            }\r\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\r\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\r\n                insertText = snippet.children[0].value;\r\n                snippetInfo = undefined;\r\n            }\r\n            else {\r\n                insertText = snippet.toString();\r\n                snippetInfo = {\r\n                    snippet: inlineCompletion.insertText.snippet,\r\n                    range: range\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            assertNever(inlineCompletion.insertText);\r\n        }\r\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\r\n    }\r\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \r\n    /**\r\n     * A reference to the original inline completion this inline completion has been constructed from.\r\n     * Used for event data to ensure referential equality.\r\n    */\r\n    sourceInlineCompletion, \r\n    /**\r\n     * A reference to the original inline completion list this inline completion has been constructed from.\r\n     * Used for event data to ensure referential equality.\r\n    */\r\n    source) {\r\n        this.filterText = filterText;\r\n        this.command = command;\r\n        this.range = range;\r\n        this.insertText = insertText;\r\n        this.snippetInfo = snippetInfo;\r\n        this.additionalTextEdits = additionalTextEdits;\r\n        this.sourceInlineCompletion = sourceInlineCompletion;\r\n        this.source = source;\r\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\r\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\r\n    }\r\n    withRange(updatedRange) {\r\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\r\n    }\r\n    hash() {\r\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\r\n    }\r\n}\r\nfunction getDefaultRange(position, model) {\r\n    const word = model.getWordAtPosition(position);\r\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\r\n    // By default, always replace up until the end of the current line.\r\n    // This default might be subject to change!\r\n    return word\r\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\r\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\r\n}\r\nfunction closeBrackets(text, position, model, languageConfigurationService) {\r\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\r\n    const newLine = lineStart + text;\r\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\r\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\r\n    if (!slicedTokens) {\r\n        return text;\r\n    }\r\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\r\n    return newText;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\r\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { GhostText, GhostTextPart } from './ghostText.js';\r\nimport { addPositions, lengthOfText } from './utils.js';\r\nexport class SingleTextEdit {\r\n    constructor(range, text) {\r\n        this.range = range;\r\n        this.text = text;\r\n    }\r\n    removeCommonPrefix(model, validModelRange) {\r\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\r\n        if (!modelRange) {\r\n            return this;\r\n        }\r\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\r\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\r\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\r\n        const text = this.text.substring(commonPrefixLen);\r\n        const range = Range.fromPositions(start, this.range.getEndPosition());\r\n        return new SingleTextEdit(range, text);\r\n    }\r\n    augments(base) {\r\n        // The augmented completion must replace the base range, but can replace even more\r\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\r\n    }\r\n    /**\r\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\r\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\r\n    */\r\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\r\n        let edit = this.removeCommonPrefix(model);\r\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\r\n            // This edit might span multiple lines, but the first lines must be a common prefix.\r\n            return undefined;\r\n        }\r\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\r\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\r\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\r\n        if (suggestionTouchesIndentation) {\r\n            // source:      ··········[······abc]\r\n            //                         ^^^^^^^^^ inlineCompletion.range\r\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\r\n            //                         ^^^^^^ replacedIndentation.length\r\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\r\n            // inlineCompletion.text: '··foo'\r\n            //                         ^^ suggestionAddedIndentationLength\r\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\r\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\r\n            const [startPosition, endPosition] = [edit.range.getStartPosition(), edit.range.getEndPosition()];\r\n            const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\r\n                ? startPosition.delta(0, replacedIndentation.length)\r\n                : endPosition;\r\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\r\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\r\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\r\n                ? edit.text.substring(replacedIndentation.length)\r\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\r\n                : edit.text.substring(suggestionAddedIndentationLength);\r\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\r\n        }\r\n        // This is a single line string\r\n        const valueToBeReplaced = model.getValueInRange(edit.range);\r\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\r\n        if (!changes) {\r\n            // No ghost text in case the diff would be too slow to compute\r\n            return undefined;\r\n        }\r\n        const lineNumber = edit.range.startLineNumber;\r\n        const parts = new Array();\r\n        if (mode === 'prefix') {\r\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\r\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\r\n                // Prefixes only have a single change.\r\n                return undefined;\r\n            }\r\n        }\r\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\r\n        for (const c of changes) {\r\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\r\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\r\n                // No ghost text before cursor\r\n                return undefined;\r\n            }\r\n            if (c.originalLength > 0) {\r\n                return undefined;\r\n            }\r\n            if (c.modifiedLength === 0) {\r\n                continue;\r\n            }\r\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\r\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\r\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\r\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\r\n            if (nonPreviewText.length > 0) {\r\n                const lines = splitLines(nonPreviewText);\r\n                parts.push(new GhostTextPart(insertColumn, lines, false));\r\n            }\r\n            if (italicText.length > 0) {\r\n                const lines = splitLines(italicText);\r\n                parts.push(new GhostTextPart(insertColumn, lines, true));\r\n            }\r\n        }\r\n        return new GhostText(lineNumber, parts);\r\n    }\r\n}\r\nfunction rangeExtends(extendingRange, rangeToExtend) {\r\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\r\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\r\n}\r\nlet lastRequest = undefined;\r\nfunction cachingDiff(originalValue, newValue) {\r\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\r\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\r\n    }\r\n    else {\r\n        let changes = smartDiff(originalValue, newValue, true);\r\n        if (changes) {\r\n            const deletedChars = deletedCharacters(changes);\r\n            if (deletedChars > 0) {\r\n                // For performance reasons, don't compute diff if there is nothing to improve\r\n                const newChanges = smartDiff(originalValue, newValue, false);\r\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\r\n                    // Disabling smartness seems to be better here\r\n                    changes = newChanges;\r\n                }\r\n            }\r\n        }\r\n        lastRequest = {\r\n            originalValue,\r\n            newValue,\r\n            changes\r\n        };\r\n        return changes;\r\n    }\r\n}\r\nfunction deletedCharacters(changes) {\r\n    let sum = 0;\r\n    for (const c of changes) {\r\n        sum += c.originalLength;\r\n    }\r\n    return sum;\r\n}\r\n/**\r\n * When matching `if ()` with `if (f() = 1) { g(); }`,\r\n * align it like this:        `if (       )`\r\n * Not like this:\t\t\t  `if (  )`\r\n * Also not like this:\t\t  `if (             )`.\r\n *\r\n * The parenthesis are preprocessed to ensure that they match correctly.\r\n */\r\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\r\n    if (originalValue.length > 5000 || newValue.length > 5000) {\r\n        // We don't want to work on strings that are too big\r\n        return undefined;\r\n    }\r\n    function getMaxCharCode(val) {\r\n        let maxCharCode = 0;\r\n        for (let i = 0, len = val.length; i < len; i++) {\r\n            const charCode = val.charCodeAt(i);\r\n            if (charCode > maxCharCode) {\r\n                maxCharCode = charCode;\r\n            }\r\n        }\r\n        return maxCharCode;\r\n    }\r\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\r\n    function getUniqueCharCode(id) {\r\n        if (id < 0) {\r\n            throw new Error('unexpected');\r\n        }\r\n        return maxCharCode + id + 1;\r\n    }\r\n    function getElements(source) {\r\n        let level = 0;\r\n        let group = 0;\r\n        const characters = new Int32Array(source.length);\r\n        for (let i = 0, len = source.length; i < len; i++) {\r\n            // TODO support more brackets\r\n            if (smartBracketMatching && source[i] === '(') {\r\n                const id = group * 100 + level;\r\n                characters[i] = getUniqueCharCode(2 * id);\r\n                level++;\r\n            }\r\n            else if (smartBracketMatching && source[i] === ')') {\r\n                level = Math.max(level - 1, 0);\r\n                const id = group * 100 + level;\r\n                characters[i] = getUniqueCharCode(2 * id + 1);\r\n                if (level === 0) {\r\n                    group++;\r\n                }\r\n            }\r\n            else {\r\n                characters[i] = source.charCodeAt(i);\r\n            }\r\n        }\r\n        return characters;\r\n    }\r\n    const elements1 = getElements(originalValue);\r\n    const elements2 = getElements(newValue);\r\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\r\nimport { matchesSubString } from '../../../../base/common/filters.js';\r\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\r\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\r\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\r\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\r\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\r\nimport { SingleTextEdit } from './singleTextEdit.js';\r\n/* hot-reload:patch-prototype-methods */\r\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\r\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\r\n        super();\r\n        this.textModel = textModel;\r\n        this.versionId = versionId;\r\n        this._debounceValue = _debounceValue;\r\n        this.languageFeaturesService = languageFeaturesService;\r\n        this.languageConfigurationService = languageConfigurationService;\r\n        this._updateOperation = this._register(new MutableDisposable());\r\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\r\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\r\n        this._register(this.textModel.onDidChangeContent(() => {\r\n            this._updateOperation.clear();\r\n        }));\r\n    }\r\n    fetch(position, context, activeInlineCompletion) {\r\n        var _a, _b;\r\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\r\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\r\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\r\n            return this._updateOperation.value.promise;\r\n        }\r\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\r\n            return Promise.resolve(true);\r\n        }\r\n        const updateOngoing = !!this._updateOperation.value;\r\n        this._updateOperation.clear();\r\n        const source = new CancellationTokenSource();\r\n        const promise = (async () => {\r\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\r\n            if (shouldDebounce) {\r\n                // This debounces the operation\r\n                await wait(this._debounceValue.get(this.textModel));\r\n            }\r\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\r\n                return false;\r\n            }\r\n            const startTime = new Date();\r\n            const updatedCompletions = await provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\r\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\r\n                return false;\r\n            }\r\n            const endTime = new Date();\r\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\r\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\r\n            if (activeInlineCompletion) {\r\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\r\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\r\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\r\n                }\r\n            }\r\n            this._updateOperation.clear();\r\n            transaction(tx => {\r\n                /** @description Update completions with provider result */\r\n                target.set(completions, tx);\r\n            });\r\n            return true;\r\n        })();\r\n        const updateOperation = new UpdateOperation(request, source, promise);\r\n        this._updateOperation.value = updateOperation;\r\n        return promise;\r\n    }\r\n    clear(tx) {\r\n        this._updateOperation.clear();\r\n        this.inlineCompletions.set(undefined, tx);\r\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\r\n    }\r\n    clearSuggestWidgetInlineCompletions(tx) {\r\n        var _a;\r\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\r\n            this._updateOperation.clear();\r\n        }\r\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\r\n    }\r\n    cancelUpdate() {\r\n        this._updateOperation.clear();\r\n    }\r\n};\r\nInlineCompletionsSource = __decorate([\r\n    __param(3, ILanguageFeaturesService),\r\n    __param(4, ILanguageConfigurationService)\r\n], InlineCompletionsSource);\r\nexport { InlineCompletionsSource };\r\nfunction wait(ms, cancellationToken) {\r\n    return new Promise(resolve => {\r\n        let d = undefined;\r\n        const handle = setTimeout(() => {\r\n            if (d) {\r\n                d.dispose();\r\n            }\r\n            resolve();\r\n        }, ms);\r\n        if (cancellationToken) {\r\n            d = cancellationToken.onCancellationRequested(() => {\r\n                clearTimeout(handle);\r\n                if (d) {\r\n                    d.dispose();\r\n                }\r\n                resolve();\r\n            });\r\n        }\r\n    });\r\n}\r\nclass UpdateRequest {\r\n    constructor(position, context, versionId) {\r\n        this.position = position;\r\n        this.context = context;\r\n        this.versionId = versionId;\r\n    }\r\n    satisfies(other) {\r\n        return this.position.equals(other.position)\r\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\r\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\r\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\r\n            && this.versionId === other.versionId;\r\n    }\r\n}\r\nfunction equals(v1, v2, equals) {\r\n    if (!v1 || !v2) {\r\n        return v1 === v2;\r\n    }\r\n    return equals(v1, v2);\r\n}\r\nclass UpdateOperation {\r\n    constructor(request, cancellationTokenSource, promise) {\r\n        this.request = request;\r\n        this.cancellationTokenSource = cancellationTokenSource;\r\n        this.promise = promise;\r\n    }\r\n    dispose() {\r\n        this.cancellationTokenSource.cancel();\r\n    }\r\n}\r\nexport class UpToDateInlineCompletions {\r\n    get inlineCompletions() { return this._inlineCompletions; }\r\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\r\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\r\n        this.request = request;\r\n        this.textModel = textModel;\r\n        this.versionId = versionId;\r\n        this._refCount = 1;\r\n        this._prependedInlineCompletionItems = [];\r\n        this._rangeVersionIdValue = 0;\r\n        this._rangeVersionId = derived(this, reader => {\r\n            this.versionId.read(reader);\r\n            let changed = false;\r\n            for (const i of this._inlineCompletions) {\r\n                changed = changed || i._updateRange(this.textModel);\r\n            }\r\n            if (changed) {\r\n                this._rangeVersionIdValue++;\r\n            }\r\n            return this._rangeVersionIdValue;\r\n        });\r\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\r\n            range: i.range,\r\n            options: {\r\n                description: 'inline-completion-tracking-range'\r\n            },\r\n        })));\r\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\r\n    }\r\n    clone() {\r\n        this._refCount++;\r\n        return this;\r\n    }\r\n    dispose() {\r\n        this._refCount--;\r\n        if (this._refCount === 0) {\r\n            setTimeout(() => {\r\n                // To fix https://github.com/microsoft/vscode/issues/188348\r\n                if (!this.textModel.isDisposed()) {\r\n                    // This is just cleanup. It's ok if it happens with a delay.\r\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\r\n                }\r\n            }, 0);\r\n            this.inlineCompletionProviderResult.dispose();\r\n            for (const i of this._prependedInlineCompletionItems) {\r\n                i.source.removeRef();\r\n            }\r\n        }\r\n    }\r\n    prepend(inlineCompletion, range, addRefToSource) {\r\n        if (addRefToSource) {\r\n            inlineCompletion.source.addRef();\r\n        }\r\n        const id = this.textModel.deltaDecorations([], [{\r\n                range,\r\n                options: {\r\n                    description: 'inline-completion-tracking-range'\r\n                },\r\n            }])[0];\r\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\r\n        this._prependedInlineCompletionItems.push(inlineCompletion);\r\n    }\r\n}\r\nexport class InlineCompletionWithUpdatedRange {\r\n    get forwardStable() {\r\n        var _a;\r\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\r\n    }\r\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\r\n        this.inlineCompletion = inlineCompletion;\r\n        this.decorationId = decorationId;\r\n        this.rangeVersion = rangeVersion;\r\n        this.semanticId = JSON.stringify([\r\n            this.inlineCompletion.filterText,\r\n            this.inlineCompletion.insertText,\r\n            this.inlineCompletion.range.getStartPosition().toString()\r\n        ]);\r\n        this._isValid = true;\r\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\r\n    }\r\n    toInlineCompletion(reader) {\r\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\r\n    }\r\n    toSingleTextEdit(reader) {\r\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\r\n    }\r\n    isVisible(model, cursorPosition, reader) {\r\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\r\n        if (!this._isValid\r\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\r\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\r\n            return false;\r\n        }\r\n        // We might consider comparing by .toLowerText, but this requires GhostTextReplacement\r\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */);\r\n        const filterText = minimizedReplacement.text;\r\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\r\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\r\n        let filterTextAfter = filterText.substring(cursorPosIndex);\r\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\r\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\r\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\r\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\r\n            // Remove indentation\r\n            originalValueBefore = originalValueBefore.trimStart();\r\n            if (originalValueBefore.length === 0) {\r\n                originalValueAfter = originalValueAfter.trimStart();\r\n            }\r\n            filterTextBefore = filterTextBefore.trimStart();\r\n            if (filterTextBefore.length === 0) {\r\n                filterTextAfter = filterTextAfter.trimStart();\r\n            }\r\n        }\r\n        return filterTextBefore.startsWith(originalValueBefore)\r\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\r\n    }\r\n    canBeReused(model, position) {\r\n        const result = this._isValid\r\n            && this._getUpdatedRange(undefined).containsPosition(position)\r\n            && this.isVisible(model, position, undefined)\r\n            && !this._isSmallerThanOriginal(undefined);\r\n        return result;\r\n    }\r\n    _toFilterTextReplacement(reader) {\r\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\r\n    }\r\n    _isSmallerThanOriginal(reader) {\r\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\r\n    }\r\n    _getUpdatedRange(reader) {\r\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\r\n        return this._updatedRange;\r\n    }\r\n    _updateRange(textModel) {\r\n        const range = textModel.getDecorationRange(this.decorationId);\r\n        if (!range) {\r\n            // A setValue call might flush all decorations.\r\n            this._isValid = false;\r\n            return true;\r\n        }\r\n        if (!this._updatedRange.equalsRange(range)) {\r\n            this._updatedRange = range;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction length(range) {\r\n    if (range.startLineNumber === range.endLineNumber) {\r\n        return new Position(1, 1 + range.endColumn - range.startColumn);\r\n    }\r\n    else {\r\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../dom.js';\r\nimport { Toggle } from '../toggle/toggle.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseToggle', \"Preserve Case\");\r\nclass PreserveCaseToggle extends Toggle {\r\n    constructor(opts) {\r\n        super({\r\n            // TODO: does this need its own icon?\r\n            icon: Codicon.preserveCase,\r\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class ReplaceInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.cachedOptionsWidth = 0;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\r\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            ariaLabel: this.label || '',\r\n            placeholder: this.placeholder || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            history,\r\n            showHistoryHint: options.showHistoryHint,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight,\r\n            inputBoxStyles: options.inputBoxStyles\r\n        }));\r\n        this.preserveCase = this._register(new PreserveCaseToggle({\r\n            appendTitle: appendPreserveCaseLabel,\r\n            isChecked: false,\r\n            ...options.toggleStyles\r\n        }));\r\n        this._register(this.preserveCase.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.preserveCase.onKeyDown(e => {\r\n            this._onPreserveCaseKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.cachedOptionsWidth = this.preserveCase.width();\r\n        }\r\n        else {\r\n            this.cachedOptionsWidth = 0;\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        const indexes = [this.preserveCase.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* KeyCode.LeftArrow */) || event.equals(17 /* KeyCode.RightArrow */) || event.equals(9 /* KeyCode.Escape */)) {\r\n                const index = indexes.indexOf(this.domNode.ownerDocument.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* KeyCode.RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* KeyCode.LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* KeyCode.Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        const controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.preserveCase.domNode);\r\n        this.domNode.appendChild(controls);\r\n        parent === null || parent === void 0 ? void 0 : parent.appendChild(this.domNode);\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.preserveCase.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.preserveCase.disable();\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getPreserveCase() {\r\n        return this.preserveCase.checked;\r\n    }\r\n    setPreserveCase(value) {\r\n        this.preserveCase.checked = value;\r\n    }\r\n    focusOnPreserve() {\r\n        this.preserveCase.focus();\r\n    }\r\n    validate() {\r\n        var _a;\r\n        (_a = this.inputBox) === null || _a === void 0 ? void 0 : _a.validate();\r\n    }\r\n    set width(newWidth) {\r\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\r\n        this.domNode.style.width = newWidth + 'px';\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\r\nimport { ReplaceInput } from '../../../base/browser/ui/findinput/replaceInput.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\r\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isActiveElement } from '../../../base/browser/dom.js';\r\nexport const historyNavigationVisible = new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\"));\r\nconst HistoryNavigationWidgetFocusContext = 'historyNavigationWidgetFocus';\r\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\r\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\r\nlet lastFocusedWidget = undefined;\r\nconst widgets = [];\r\nexport function registerAndCreateHistoryNavigationContext(scopedContextKeyService, widget) {\r\n    if (widgets.includes(widget)) {\r\n        throw new Error('Cannot register the same widget multiple times');\r\n    }\r\n    widgets.push(widget);\r\n    const disposableStore = new DisposableStore();\r\n    const historyNavigationWidgetFocus = new RawContextKey(HistoryNavigationWidgetFocusContext, false).bindTo(scopedContextKeyService);\r\n    const historyNavigationForwardsEnablement = new RawContextKey(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    const historyNavigationBackwardsEnablement = new RawContextKey(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\r\n    const onDidFocus = () => {\r\n        historyNavigationWidgetFocus.set(true);\r\n        lastFocusedWidget = widget;\r\n    };\r\n    const onDidBlur = () => {\r\n        historyNavigationWidgetFocus.set(false);\r\n        if (lastFocusedWidget === widget) {\r\n            lastFocusedWidget = undefined;\r\n        }\r\n    };\r\n    // Check for currently being focused\r\n    if (isActiveElement(widget.element)) {\r\n        onDidFocus();\r\n    }\r\n    disposableStore.add(widget.onDidFocus(() => onDidFocus()));\r\n    disposableStore.add(widget.onDidBlur(() => onDidBlur()));\r\n    disposableStore.add(toDisposable(() => {\r\n        widgets.splice(widgets.indexOf(widget), 1);\r\n        onDidBlur();\r\n    }));\r\n    return {\r\n        historyNavigationForwardsEnablement,\r\n        historyNavigationBackwardsEnablement,\r\n        dispose() {\r\n            disposableStore.dispose();\r\n        }\r\n    };\r\n}\r\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService) {\r\n        super(container, contextViewProvider, options);\r\n        const scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\r\n        this._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\r\n    }\r\n};\r\nContextScopedFindInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedFindInput);\r\nexport { ContextScopedFindInput };\r\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\r\n        super(container, contextViewProvider, showReplaceOptions, options);\r\n        const scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\r\n        this._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\r\n    }\r\n};\r\nContextScopedReplaceInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedReplaceInput);\r\nexport { ContextScopedReplaceInput };\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showPrevious',\r\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true), ContextKeyExpr.not('isComposing'), historyNavigationVisible.isEqualTo(false)),\r\n    primary: 16 /* KeyCode.UpArrow */,\r\n    secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\r\n    handler: (accessor) => {\r\n        lastFocusedWidget === null || lastFocusedWidget === void 0 ? void 0 : lastFocusedWidget.showPreviousValue();\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showNext',\r\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true), ContextKeyExpr.not('isComposing'), historyNavigationVisible.isEqualTo(false)),\r\n    primary: 18 /* KeyCode.DownArrow */,\r\n    secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\r\n    handler: (accessor) => {\r\n        lastFocusedWidget === null || lastFocusedWidget === void 0 ? void 0 : lastFocusedWidget.showNextValue();\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\r\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\r\nimport { FuzzyScore } from '../../../../base/common/filters.js';\r\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\r\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\r\nimport { assertType } from '../../../../base/common/types.js';\r\nimport { URI } from '../../../../base/common/uri.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\r\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\r\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\r\nimport { historyNavigationVisible } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\r\nexport const Context = {\r\n    Visible: historyNavigationVisible,\r\n    HasFocusedSuggestion: new RawContextKey('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\r\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\r\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\r\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\r\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\r\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\r\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\r\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\r\n};\r\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\r\nexport class CompletionItem {\r\n    constructor(position, completion, container, provider) {\r\n        var _a;\r\n        this.position = position;\r\n        this.completion = completion;\r\n        this.container = container;\r\n        this.provider = provider;\r\n        // validation\r\n        this.isInvalid = false;\r\n        // sorting, filtering\r\n        this.score = FuzzyScore.Default;\r\n        this.distance = 0;\r\n        this.textLabel = typeof completion.label === 'string'\r\n            ? completion.label\r\n            : (_a = completion.label) === null || _a === void 0 ? void 0 : _a.label;\r\n        // ensure lower-variants (perf)\r\n        this.labelLow = this.textLabel.toLowerCase();\r\n        // validate label\r\n        this.isInvalid = !this.textLabel;\r\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\r\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\r\n        this.extensionId = completion.extensionId;\r\n        // normalize ranges\r\n        if (Range.isIRange(completion.range)) {\r\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            // validate range\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\r\n        }\r\n        else {\r\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\r\n            // validate ranges\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\r\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\r\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\r\n        }\r\n        // create the suggestion resolver\r\n        if (typeof provider.resolveCompletionItem !== 'function') {\r\n            this._resolveCache = Promise.resolve();\r\n            this._resolveDuration = 0;\r\n        }\r\n    }\r\n    // ---- resolving\r\n    get isResolved() {\r\n        return this._resolveDuration !== undefined;\r\n    }\r\n    get resolveDuration() {\r\n        return this._resolveDuration !== undefined ? this._resolveDuration : -1;\r\n    }\r\n    async resolve(token) {\r\n        if (!this._resolveCache) {\r\n            const sub = token.onCancellationRequested(() => {\r\n                this._resolveCache = undefined;\r\n                this._resolveDuration = undefined;\r\n            });\r\n            const sw = new StopWatch(true);\r\n            this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\r\n                Object.assign(this.completion, value);\r\n                this._resolveDuration = sw.elapsed();\r\n            }, err => {\r\n                if (isCancellationError(err)) {\r\n                    // the IPC queue will reject the request with the\r\n                    // cancellation error -> reset cached\r\n                    this._resolveCache = undefined;\r\n                    this._resolveDuration = undefined;\r\n                }\r\n            }).finally(() => {\r\n                sub.dispose();\r\n            });\r\n        }\r\n        return this._resolveCache;\r\n    }\r\n}\r\nexport class CompletionOptions {\r\n    constructor(snippetSortOrder = 2 /* SnippetSortOrder.Bottom */, kindFilter = new Set(), providerFilter = new Set(), providerItemsToReuse = new Map(), showDeprecated = true) {\r\n        this.snippetSortOrder = snippetSortOrder;\r\n        this.kindFilter = kindFilter;\r\n        this.providerFilter = providerFilter;\r\n        this.providerItemsToReuse = providerItemsToReuse;\r\n        this.showDeprecated = showDeprecated;\r\n    }\r\n}\r\nCompletionOptions.default = new CompletionOptions();\r\nlet _snippetSuggestSupport;\r\nexport function getSnippetSuggestSupport() {\r\n    return _snippetSuggestSupport;\r\n}\r\nexport class CompletionItemModel {\r\n    constructor(items, needsClipboard, durations, disposable) {\r\n        this.items = items;\r\n        this.needsClipboard = needsClipboard;\r\n        this.durations = durations;\r\n        this.disposable = disposable;\r\n    }\r\n}\r\nexport async function provideSuggestionItems(registry, model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* languages.CompletionTriggerKind.Invoke */ }, token = CancellationToken.None) {\r\n    const sw = new StopWatch();\r\n    position = position.clone();\r\n    const word = model.getWordAtPosition(position);\r\n    const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\r\n    const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\r\n    const result = [];\r\n    const disposables = new DisposableStore();\r\n    const durations = [];\r\n    let needsClipboard = false;\r\n    const onCompletionList = (provider, container, sw) => {\r\n        var _a, _b, _c;\r\n        let didAddResult = false;\r\n        if (!container) {\r\n            return didAddResult;\r\n        }\r\n        for (const suggestion of container.suggestions) {\r\n            if (!options.kindFilter.has(suggestion.kind)) {\r\n                // skip if not showing deprecated suggestions\r\n                if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* languages.CompletionItemTag.Deprecated */))) {\r\n                    continue;\r\n                }\r\n                // fill in default range when missing\r\n                if (!suggestion.range) {\r\n                    suggestion.range = defaultRange;\r\n                }\r\n                // fill in default sortText when missing\r\n                if (!suggestion.sortText) {\r\n                    suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\r\n                }\r\n                if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* languages.CompletionItemInsertTextRule.InsertAsSnippet */) {\r\n                    needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\r\n                }\r\n                result.push(new CompletionItem(position, suggestion, container, provider));\r\n                didAddResult = true;\r\n            }\r\n        }\r\n        if (isDisposable(container)) {\r\n            disposables.add(container);\r\n        }\r\n        durations.push({\r\n            providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unknown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\r\n        });\r\n        return didAddResult;\r\n    };\r\n    // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\r\n    // do so - no snippet filter, no special-providers-only request\r\n    const snippetCompletions = (async () => {\r\n        if (!_snippetSuggestSupport || options.kindFilter.has(27 /* languages.CompletionItemKind.Snippet */)) {\r\n            return;\r\n        }\r\n        // we have items from a previous session that we can reuse\r\n        const reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\r\n        if (reuseItems) {\r\n            reuseItems.forEach(item => result.push(item));\r\n            return;\r\n        }\r\n        if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\r\n            return;\r\n        }\r\n        const sw = new StopWatch();\r\n        const list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\r\n        onCompletionList(_snippetSuggestSupport, list, sw);\r\n    })();\r\n    // add suggestions from contributed providers - providers are ordered in groups of\r\n    // equal score and once a group produces a result the process stops\r\n    // get provider groups, always add snippet suggestion provider\r\n    for (const providerGroup of registry.orderedGroups(model)) {\r\n        // for each support in the group ask for suggestions\r\n        let didAddResult = false;\r\n        await Promise.all(providerGroup.map(async (provider) => {\r\n            // we have items from a previous session that we can reuse\r\n            if (options.providerItemsToReuse.has(provider)) {\r\n                const items = options.providerItemsToReuse.get(provider);\r\n                items.forEach(item => result.push(item));\r\n                didAddResult = didAddResult || items.length > 0;\r\n                return;\r\n            }\r\n            // check if this provider is filtered out\r\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\r\n                return;\r\n            }\r\n            try {\r\n                const sw = new StopWatch();\r\n                const list = await provider.provideCompletionItems(model, position, context, token);\r\n                didAddResult = onCompletionList(provider, list, sw) || didAddResult;\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }));\r\n        if (didAddResult || token.isCancellationRequested) {\r\n            break;\r\n        }\r\n    }\r\n    await snippetCompletions;\r\n    if (token.isCancellationRequested) {\r\n        disposables.dispose();\r\n        return Promise.reject(new CancellationError());\r\n    }\r\n    return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\r\n}\r\nfunction defaultComparator(a, b) {\r\n    // check with 'sortText'\r\n    if (a.sortTextLow && b.sortTextLow) {\r\n        if (a.sortTextLow < b.sortTextLow) {\r\n            return -1;\r\n        }\r\n        else if (a.sortTextLow > b.sortTextLow) {\r\n            return 1;\r\n        }\r\n    }\r\n    // check with 'label'\r\n    if (a.textLabel < b.textLabel) {\r\n        return -1;\r\n    }\r\n    else if (a.textLabel > b.textLabel) {\r\n        return 1;\r\n    }\r\n    // check with 'type'\r\n    return a.completion.kind - b.completion.kind;\r\n}\r\nfunction snippetUpComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\r\n            return -1;\r\n        }\r\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\r\n            return 1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nfunction snippetDownComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\r\n            return 1;\r\n        }\r\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\r\n            return -1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nconst _snippetComparators = new Map();\r\n_snippetComparators.set(0 /* SnippetSortOrder.Top */, snippetUpComparator);\r\n_snippetComparators.set(2 /* SnippetSortOrder.Bottom */, snippetDownComparator);\r\n_snippetComparators.set(1 /* SnippetSortOrder.Inline */, defaultComparator);\r\nexport function getSuggestionComparator(snippetConfig) {\r\n    return _snippetComparators.get(snippetConfig);\r\n}\r\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args) => {\r\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\r\n    const { completionProvider } = accessor.get(ILanguageFeaturesService);\r\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = {\r\n            incomplete: false,\r\n            suggestions: []\r\n        };\r\n        const resolving = [];\r\n        const actualPosition = ref.object.textEditorModel.validatePosition(position);\r\n        const completions = await provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, { triggerCharacter: triggerCharacter !== null && triggerCharacter !== void 0 ? triggerCharacter : undefined, triggerKind: triggerCharacter ? 1 /* languages.CompletionTriggerKind.TriggerCharacter */ : 0 /* languages.CompletionTriggerKind.Invoke */ });\r\n        for (const item of completions.items) {\r\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\r\n                resolving.push(item.resolve(CancellationToken.None));\r\n            }\r\n            result.incomplete = result.incomplete || item.container.incomplete;\r\n            result.suggestions.push(item.completion);\r\n        }\r\n        try {\r\n            await Promise.all(resolving);\r\n            return result;\r\n        }\r\n        finally {\r\n            setTimeout(() => completions.disposable.dispose(), 100);\r\n        }\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n});\r\nexport function showSimpleSuggestions(editor, provider) {\r\n    var _a;\r\n    (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(provider), undefined, true);\r\n}\r\nexport class QuickSuggestionsOptions {\r\n    static isAllOff(config) {\r\n        return config.other === 'off' && config.comments === 'off' && config.strings === 'off';\r\n    }\r\n    static isAllOn(config) {\r\n        return config.other === 'on' && config.comments === 'on' && config.strings === 'on';\r\n    }\r\n    static valueFor(config, tokenType) {\r\n        switch (tokenType) {\r\n            case 1 /* StandardTokenType.Comment */: return config.comments;\r\n            case 2 /* StandardTokenType.String */: return config.strings;\r\n            default: return config.other;\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SnippetSession_1;\r\nimport { groupBy } from '../../../../base/common/arrays.js';\r\nimport { dispose } from '../../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../../common/core/editOperation.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { Selection } from '../../../common/core/selection.js';\r\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\r\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\r\nimport { Choice, Placeholder, SnippetParser, Text, TextmateSnippet } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CommentBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, RandomBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, WorkspaceBasedVariableResolver } from './snippetVariables.js';\r\nexport class OneSnippet {\r\n    constructor(_editor, _snippet, _snippetLineLeadingWhitespace) {\r\n        this._editor = _editor;\r\n        this._snippet = _snippet;\r\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\r\n        this._offset = -1;\r\n        this._nestingLevel = 1;\r\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    initialize(textChange) {\r\n        this._offset = textChange.newPosition;\r\n    }\r\n    dispose() {\r\n        if (this._placeholderDecorations) {\r\n            this._editor.removeDecorations([...this._placeholderDecorations.values()]);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    }\r\n    _initDecorations() {\r\n        if (this._offset === -1) {\r\n            throw new Error(`Snippet not initialized!`);\r\n        }\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        const model = this._editor.getModel();\r\n        this._editor.changeDecorations(accessor => {\r\n            // create a decoration for each placeholder\r\n            for (const placeholder of this._snippet.placeholders) {\r\n                const placeholderOffset = this._snippet.offset(placeholder);\r\n                const placeholderLen = this._snippet.fullLen(placeholder);\r\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\r\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                const handle = accessor.addDecoration(range, options);\r\n                this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    }\r\n    move(fwd) {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            const operations = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    const id = this._placeholderDecorations.get(placeholder);\r\n                    const range = this._editor.getModel().getDecorationRange(id);\r\n                    const currentValue = this._editor.getModel().getValueInRange(range);\r\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\r\n                    // fix indentation for transformed lines\r\n                    for (let i = 1; i < transformedValueLines.length; i++) {\r\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\r\n                    }\r\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        let couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\r\n            const activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            const selections = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\r\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            for (const [placeholder, id] of this._placeholderDecorations) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            }\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\r\n    }\r\n    _hasPlaceholderBeenCollapsed(placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        let marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                const id = this._placeholderDecorations.get(marker);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippet.placeholders.length > 0;\r\n    }\r\n    /**\r\n     * A snippet is trivial when it has no placeholder or only a final placeholder at\r\n     * its very end\r\n     */\r\n    get isTrivialSnippet() {\r\n        if (this._snippet.placeholders.length === 0) {\r\n            return true;\r\n        }\r\n        if (this._snippet.placeholders.length === 1) {\r\n            const [placeholder] = this._snippet.placeholders;\r\n            if (placeholder.isFinalTabstop) {\r\n                if (this._snippet.rightMostDescendant === placeholder) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    computePossibleSelections() {\r\n        const result = new Map();\r\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\r\n            let ranges;\r\n            for (const placeholder of placeholdersWithEqualIndex) {\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get activeChoice() {\r\n        if (!this._placeholderDecorations) {\r\n            return undefined;\r\n        }\r\n        const placeholder = this._placeholderGroups[this._placeholderGroupsIdx][0];\r\n        if (!(placeholder === null || placeholder === void 0 ? void 0 : placeholder.choice)) {\r\n            return undefined;\r\n        }\r\n        const id = this._placeholderDecorations.get(placeholder);\r\n        if (!id) {\r\n            return undefined;\r\n        }\r\n        const range = this._editor.getModel().getDecorationRange(id);\r\n        if (!range) {\r\n            return undefined;\r\n        }\r\n        return { range, choice: placeholder.choice };\r\n    }\r\n    get hasChoice() {\r\n        let result = false;\r\n        this._snippet.walk(marker => {\r\n            result = marker instanceof Choice;\r\n            return !result;\r\n        });\r\n        return result;\r\n    }\r\n    merge(others) {\r\n        const model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(accessor => {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const nested = others.shift();\r\n                console.assert(nested._offset !== -1);\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\r\n                    }\r\n                }\r\n                this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (const placeholder of nested._snippet.placeholders) {\r\n                    const placeholderOffset = nested._snippet.offset(placeholder);\r\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\r\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    this._placeholderDecorations.set(placeholder, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    }\r\n}\r\nOneSnippet._decor = {\r\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n};\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetSession = SnippetSession_1 = class SnippetSession {\r\n    static adjustWhitespace(model, position, adjustIndentation, snippet, filter) {\r\n        const line = model.getLineContent(position.lineNumber);\r\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        // the snippet as inserted\r\n        let snippetTextString;\r\n        snippet.walk(marker => {\r\n            // all text elements that are not inside choice\r\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\r\n                return true;\r\n            }\r\n            // check with filter (iff provided)\r\n            if (filter && !filter.has(marker)) {\r\n                return true;\r\n            }\r\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n            if (adjustIndentation) {\r\n                // adjust indentation of snippet test\r\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\r\n                // -all N+1 lines get extra-indented and normalized\r\n                // -the text start get extra-indented and normalized when following a linebreak\r\n                const offset = snippet.offset(marker);\r\n                if (offset === 0) {\r\n                    // snippet start\r\n                    lines[0] = model.normalizeIndentation(lines[0]);\r\n                }\r\n                else {\r\n                    // check if text start is after a linebreak\r\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\r\n                    const prevChar = snippetTextString.charCodeAt(offset - 1);\r\n                    if (prevChar === 10 /* CharCode.LineFeed */ || prevChar === 13 /* CharCode.CarriageReturn */) {\r\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\r\n                    }\r\n                }\r\n                for (let i = 1; i < lines.length; i++) {\r\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\r\n                }\r\n            }\r\n            const newValue = lines.join(model.getEOL());\r\n            if (newValue !== marker.value) {\r\n                marker.parent.replace(marker, [new Text(newValue)]);\r\n                snippetTextString = undefined;\r\n            }\r\n            return true;\r\n        });\r\n        return lineLeadingWhitespace;\r\n    }\r\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            const { positionLineNumber, positionColumn } = selection;\r\n            const positionColumnBefore = positionColumn - overwriteBefore;\r\n            const positionColumnAfter = positionColumn + overwriteAfter;\r\n            const range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    }\r\n    static createEditsAndSnippetsFromSelections(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\r\n        const edits = [];\r\n        const snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits, snippets };\r\n        }\r\n        const model = editor.getModel();\r\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService));\r\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model));\r\n        const readClipboardText = () => clipboardText;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        const firstBeforeText = model.getValueInRange(SnippetSession_1.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        const firstAfterText = model.getValueInRange(SnippetSession_1.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        const firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        const indexedSelections = editor.getSelections()\r\n            .map((selection, idx) => ({ selection, idx }))\r\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        for (const { selection, idx } of indexedSelections) {\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            let extensionBefore = SnippetSession_1.adjustSelection(model, selection, overwriteBefore, 0);\r\n            let extensionAfter = SnippetSession_1.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            const snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            const start = snippetSelection.getStartPosition();\r\n            const snippetLineLeadingWhitespace = SnippetSession_1.adjustWhitespace(model, start, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), snippet);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(78 /* EditorOption.multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\r\n                new CommentBasedVariableResolver(model, selection, languageConfigurationService),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            edits[idx]._isTracked = true;\r\n            snippets[idx] = new OneSnippet(editor, snippet, snippetLineLeadingWhitespace);\r\n        }\r\n        return { edits, snippets };\r\n    }\r\n    static createEditsAndSnippetsFromEdits(editor, snippetEdits, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\r\n        if (!editor.hasModel() || snippetEdits.length === 0) {\r\n            return { edits: [], snippets: [] };\r\n        }\r\n        const edits = [];\r\n        const model = editor.getModel();\r\n        const parser = new SnippetParser();\r\n        const snippet = new TextmateSnippet();\r\n        // snippet variables resolver\r\n        const resolver = new CompositeSnippetVariableResolver([\r\n            editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model)),\r\n            new ClipboardBasedVariableResolver(() => clipboardText, 0, editor.getSelections().length, editor.getOption(78 /* EditorOption.multiCursorPaste */) === 'spread'),\r\n            new SelectionBasedVariableResolver(model, editor.getSelection(), 0, overtypingCapturer),\r\n            new CommentBasedVariableResolver(model, editor.getSelection(), languageConfigurationService),\r\n            new TimeBasedVariableResolver,\r\n            new WorkspaceBasedVariableResolver(editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService))),\r\n            new RandomBasedVariableResolver,\r\n        ]);\r\n        //\r\n        snippetEdits = snippetEdits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n        let offset = 0;\r\n        for (let i = 0; i < snippetEdits.length; i++) {\r\n            const { range, template } = snippetEdits[i];\r\n            // gaps between snippet edits are appended as text nodes. this\r\n            // ensures placeholder-offsets are later correct\r\n            if (i > 0) {\r\n                const lastRange = snippetEdits[i - 1].range;\r\n                const textRange = Range.fromPositions(lastRange.getEndPosition(), range.getStartPosition());\r\n                const textNode = new Text(model.getValueInRange(textRange));\r\n                snippet.appendChild(textNode);\r\n                offset += textNode.value.length;\r\n            }\r\n            const newNodes = parser.parseFragment(template, snippet);\r\n            SnippetSession_1.adjustWhitespace(model, range.getStartPosition(), true, snippet, new Set(newNodes));\r\n            snippet.resolveVariables(resolver);\r\n            const snippetText = snippet.toString();\r\n            const snippetFragmentText = snippetText.slice(offset);\r\n            offset = snippetText.length;\r\n            // make edit\r\n            const edit = EditOperation.replace(range, snippetFragmentText);\r\n            edit.identifier = { major: i, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            edit._isTracked = true;\r\n            edits.push(edit);\r\n        }\r\n        //\r\n        parser.ensureFinalTabstop(snippet, enforceFinalTabstop, true);\r\n        return {\r\n            edits,\r\n            snippets: [new OneSnippet(editor, snippet, '')]\r\n        };\r\n    }\r\n    constructor(_editor, _template, _options = _defaultOptions, _languageConfigurationService) {\r\n        this._editor = _editor;\r\n        this._template = _template;\r\n        this._options = _options;\r\n        this._languageConfigurationService = _languageConfigurationService;\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n    }\r\n    dispose() {\r\n        dispose(this._snippets);\r\n    }\r\n    _logInfo() {\r\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\r\n    }\r\n    insert() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        const { edits, snippets } = typeof this._template === 'string'\r\n            ? SnippetSession_1.createEditsAndSnippetsFromSelections(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService)\r\n            : SnippetSession_1.createEditsAndSnippetsFromEdits(this._editor, this._template, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService);\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\r\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\r\n            // so we need to look only at the undo edits relevant for us.\r\n            // Our edits have an identifier set so that's how we can distinguish them\r\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\r\n            for (let idx = 0; idx < snippets.length; idx++) {\r\n                snippets[idx].initialize(undoEdits[idx].textChange);\r\n            }\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    }\r\n    merge(template, options = _defaultOptions) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        const { edits, snippets } = SnippetSession_1.createEditsAndSnippetsFromSelections(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer, this._languageConfigurationService);\r\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\r\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\r\n            // so we need to look only at the undo edits relevant for us.\r\n            // Our edits have an identifier set so that's how we can distinguish them\r\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\r\n            for (let idx = 0; idx < snippets.length; idx++) {\r\n                snippets[idx].initialize(undoEdits[idx].textChange);\r\n            }\r\n            // Trivial snippets have no placeholder or are just the final placeholder. That means they\r\n            // are just text insertions and we don't need to merge the nested snippet into the existing\r\n            // snippet\r\n            const isTrivialSnippet = snippets[0].isTrivialSnippet;\r\n            if (!isTrivialSnippet) {\r\n                for (const snippet of this._snippets) {\r\n                    snippet.merge(snippets);\r\n                }\r\n                console.assert(snippets.length === 0);\r\n            }\r\n            if (this._snippets[0].hasPlaceholder && !isTrivialSnippet) {\r\n                return this._move(undefined);\r\n            }\r\n            else {\r\n                return undoEdits.map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        const newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    prev() {\r\n        const newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    _move(fwd) {\r\n        const selections = [];\r\n        for (const snippet of this._snippets) {\r\n            const oneSelection = snippet.move(fwd);\r\n            selections.push(...oneSelection);\r\n        }\r\n        return selections;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._snippets[0].isAtFirstPlaceholder;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._snippets[0].isAtLastPlaceholder;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippets[0].hasPlaceholder;\r\n    }\r\n    get hasChoice() {\r\n        return this._snippets[0].hasChoice;\r\n    }\r\n    get activeChoice() {\r\n        return this._snippets[0].activeChoice;\r\n    }\r\n    isSelectionWithinPlaceholders() {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        const allPossibleSelections = new Map();\r\n        for (const snippet of this._snippets) {\r\n            const possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                for (const [index, ranges] of possibleSelections) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (const selection of selections) {\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                // return false if we couldn't associate a selection to\r\n                // this (the first) snippet\r\n                return false;\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach((array, index) => {\r\n                array.push(...possibleSelections.get(index));\r\n            });\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        for (const [index, ranges] of allPossibleSelections) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                continue;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (let i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    }\r\n};\r\nSnippetSession = SnippetSession_1 = __decorate([\r\n    __param(3, ILanguageConfigurationService)\r\n], SnippetSession);\r\nexport { SnippetSession };\r\n", "import { hasDriveLetter } from './extpath.js';\r\nimport { isWindows } from './platform.js';\r\nexport function normalizeDriveLetter(path, isWindowsOS = isWindows) {\r\n    if (hasDriveLetter(path, isWindowsOS)) {\r\n        return path.charAt(0).toUpperCase() + path.slice(1);\r\n    }\r\n    return path;\r\n}\r\nlet normalizedUserHomeCached = Object.create(null);\r\n", "export const generateUuid = (function () {\r\n    // use `randomUUID` if possible\r\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\r\n        return crypto.randomUUID.bind(crypto);\r\n    }\r\n    // use `randomValues` if possible\r\n    let getRandomValues;\r\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\r\n        getRandomValues = crypto.getRandomValues.bind(crypto);\r\n    }\r\n    else {\r\n        getRandomValues = function (bucket) {\r\n            for (let i = 0; i < bucket.length; i++) {\r\n                bucket[i] = Math.floor(Math.random() * 256);\r\n            }\r\n            return bucket;\r\n        };\r\n    }\r\n    // prep-work\r\n    const _data = new Uint8Array(16);\r\n    const _hex = [];\r\n    for (let i = 0; i < 256; i++) {\r\n        _hex.push(i.toString(16).padStart(2, '0'));\r\n    }\r\n    return function generateUuid() {\r\n        // get data\r\n        getRandomValues(_data);\r\n        // set version bits\r\n        _data[6] = (_data[6] & 0x0f) | 0x40;\r\n        _data[8] = (_data[8] & 0x3f) | 0x80;\r\n        // print as string\r\n        let i = 0;\r\n        let result = '';\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += '-';\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += '-';\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += '-';\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += '-';\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        result += _hex[_data[i++]];\r\n        return result;\r\n    };\r\n})();\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\r\nimport * as path from '../../../../base/common/path.js';\r\nimport { dirname } from '../../../../base/common/resources.js';\r\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\r\nimport { generateUuid } from '../../../../base/common/uuid.js';\r\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\r\nimport { Text } from './snippetParser.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\r\nexport const KnownSnippetVariableNames = Object.freeze({\r\n    'CURRENT_YEAR': true,\r\n    'CURRENT_YEAR_SHORT': true,\r\n    'CURRENT_MONTH': true,\r\n    'CURRENT_DATE': true,\r\n    'CURRENT_HOUR': true,\r\n    'CURRENT_MINUTE': true,\r\n    'CURRENT_SECOND': true,\r\n    'CURRENT_DAY_NAME': true,\r\n    'CURRENT_DAY_NAME_SHORT': true,\r\n    'CURRENT_MONTH_NAME': true,\r\n    'CURRENT_MONTH_NAME_SHORT': true,\r\n    'CURRENT_SECONDS_UNIX': true,\r\n    'CURRENT_TIMEZONE_OFFSET': true,\r\n    'SELECTION': true,\r\n    'CLIPBOARD': true,\r\n    'TM_SELECTED_TEXT': true,\r\n    'TM_CURRENT_LINE': true,\r\n    'TM_CURRENT_WORD': true,\r\n    'TM_LINE_INDEX': true,\r\n    'TM_LINE_NUMBER': true,\r\n    'TM_FILENAME': true,\r\n    'TM_FILENAME_BASE': true,\r\n    'TM_DIRECTORY': true,\r\n    'TM_FILEPATH': true,\r\n    'CURSOR_INDEX': true, // 0-offset\r\n    'CURSOR_NUMBER': true, // 1-offset\r\n    'RELATIVE_FILEPATH': true,\r\n    'BLOCK_COMMENT_START': true,\r\n    'BLOCK_COMMENT_END': true,\r\n    'LINE_COMMENT': true,\r\n    'WORKSPACE_NAME': true,\r\n    'WORKSPACE_FOLDER': true,\r\n    'RANDOM': true,\r\n    'RANDOM_HEX': true,\r\n    'UUID': true\r\n});\r\nexport class CompositeSnippetVariableResolver {\r\n    constructor(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        for (const delegate of this._delegates) {\r\n            const value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class SelectionBasedVariableResolver {\r\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._overtypingCapturer = _overtypingCapturer;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            let value = this._model.getValueInRange(this._selection) || undefined;\r\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\r\n            // If there was no selected text, try to get last overtyped text\r\n            if (!value && this._overtypingCapturer) {\r\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\r\n                if (info) {\r\n                    value = info.value;\r\n                    isMultiline = info.multiline;\r\n                }\r\n            }\r\n            if (value && isMultiline && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                const line = this._model.getLineContent(this._selection.startLineNumber);\r\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                let varLeadingWhitespace = lineLeadingWhitespace;\r\n                variable.snippet.walk(marker => {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            const info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'CURSOR_INDEX') {\r\n            return String(this._selectionIdx);\r\n        }\r\n        else if (name === 'CURSOR_NUMBER') {\r\n            return String(this._selectionIdx + 1);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ModelBasedVariableResolver {\r\n    constructor(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            const name = path.basename(this._model.uri.fsPath);\r\n            const idx = name.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name;\r\n            }\r\n            else {\r\n                return name.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY') {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH') {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        else if (name === 'RELATIVE_FILEPATH') {\r\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ClipboardBasedVariableResolver {\r\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        const clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    }\r\n}\r\nlet CommentBasedVariableResolver = class CommentBasedVariableResolver {\r\n    constructor(_model, _selection, _languageConfigurationService) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._languageConfigurationService = _languageConfigurationService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\r\n        const config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n};\r\nCommentBasedVariableResolver = __decorate([\r\n    __param(2, ILanguageConfigurationService)\r\n], CommentBasedVariableResolver);\r\nexport { CommentBasedVariableResolver };\r\nexport class TimeBasedVariableResolver {\r\n    constructor() {\r\n        this._date = new Date();\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(this._date.getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(this._date.getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(this._date.getTime() / 1000));\r\n        }\r\n        else if (name === 'CURRENT_TIMEZONE_OFFSET') {\r\n            const rawTimeOffset = this._date.getTimezoneOffset();\r\n            const sign = rawTimeOffset > 0 ? '-' : '+';\r\n            const hours = Math.trunc(Math.abs(rawTimeOffset / 60));\r\n            const hoursString = (hours < 10 ? '0' + hours : hours);\r\n            const minutes = Math.abs(rawTimeOffset) - hours * 60;\r\n            const minutesString = (minutes < 10 ? '0' + minutes : minutes);\r\n            return sign + hoursString + ':' + minutesString;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\nexport class WorkspaceBasedVariableResolver {\r\n    constructor(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    }\r\n    _resolveWorkspaceName(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.uri.path);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    }\r\n    _resoveWorkspacePath(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\r\n        }\r\n        const filename = path.basename(workspaceIdentifier.configPath.path);\r\n        let folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (folderpath.endsWith(filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    }\r\n}\r\nexport class RandomBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        else if (name === 'UUID') {\r\n            return generateUuid();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SnippetController2_1;\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { assertType } from '../../../../base/common/types.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\r\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\r\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = SnippetController2_1 = class SnippetController2 {\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2_1.ID);\r\n    }\r\n    constructor(_editor, _logService, _languageFeaturesService, contextKeyService, _languageConfigurationService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._languageFeaturesService = _languageFeaturesService;\r\n        this._languageConfigurationService = _languageConfigurationService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2_1.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2_1.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2_1.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        var _a;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        // don't merge\r\n        if (this._session && typeof template !== 'string') {\r\n            this.cancel();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            assertType(typeof template === 'string');\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        // regster completion item provider when there is any choice element\r\n        if ((_a = this._session) === null || _a === void 0 ? void 0 : _a.hasChoice) {\r\n            const provider = {\r\n                _debugDisplayName: 'snippetChoiceCompletions',\r\n                provideCompletionItems: (model, position) => {\r\n                    if (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\r\n                        return undefined;\r\n                    }\r\n                    const { activeChoice } = this._session;\r\n                    if (!activeChoice || activeChoice.choice.options.length === 0) {\r\n                        return undefined;\r\n                    }\r\n                    const word = model.getValueInRange(activeChoice.range);\r\n                    const isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\r\n                    const suggestions = [];\r\n                    for (let i = 0; i < activeChoice.choice.options.length; i++) {\r\n                        const option = activeChoice.choice.options[i];\r\n                        suggestions.push({\r\n                            kind: 13 /* CompletionItemKind.Value */,\r\n                            label: option.value,\r\n                            insertText: option.value,\r\n                            sortText: 'a'.repeat(i + 1),\r\n                            range: activeChoice.range,\r\n                            filterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\r\n                            command: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\r\n                        });\r\n                    }\r\n                    return { suggestions };\r\n                }\r\n            };\r\n            const model = this._editor.getModel();\r\n            let registration;\r\n            let isRegistered = false;\r\n            const disable = () => {\r\n                registration === null || registration === void 0 ? void 0 : registration.dispose();\r\n                isRegistered = false;\r\n            };\r\n            const enable = () => {\r\n                if (!isRegistered) {\r\n                    registration = this._languageFeaturesService.completionProvider.register({\r\n                        language: model.getLanguageId(),\r\n                        pattern: model.uri.fsPath,\r\n                        scheme: model.uri.scheme,\r\n                        exclusive: true\r\n                    }, provider);\r\n                    this._snippetListener.add(registration);\r\n                    isRegistered = true;\r\n                }\r\n            };\r\n            this._choiceCompletions = { provider, enable, disable };\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            this._editor.getModel().pushStackElement();\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        var _a;\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { activeChoice } = this._session;\r\n        if (!activeChoice || !this._choiceCompletions) {\r\n            (_a = this._choiceCompletions) === null || _a === void 0 ? void 0 : _a.disable();\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== activeChoice.choice) {\r\n            this._currentChoice = activeChoice.choice;\r\n            this._choiceCompletions.enable();\r\n            // trigger suggest with the special choice completion provider\r\n            queueMicrotask(() => {\r\n                showSimpleSuggestions(this._editor, this._choiceCompletions.provider);\r\n            });\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        this._currentChoice = undefined;\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        var _a;\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.prev();\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        var _a;\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.next();\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\r\nSnippetController2 = SnippetController2_1 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, ILanguageFeaturesService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, ILanguageConfigurationService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2, 4 /* EditorContributionInstantiation.Lazy */);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* KeyCode.Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* KeyCode.Escape */,\r\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { mapFindFirst } from '../../../../base/common/arraysFind.js';\r\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\r\nimport { isDefined } from '../../../../base/common/types.js';\r\nimport { EditOperation } from '../../../common/core/editOperation.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\r\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\r\nimport { GhostText, ghostTextOrReplacementEquals } from './ghostText.js';\r\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\r\nimport { addPositions, lengthOfText } from './utils.js';\r\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\r\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nexport var VersionIdChangeReason;\r\n(function (VersionIdChangeReason) {\r\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\r\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\r\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\r\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\r\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\r\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\r\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\r\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\r\n        super();\r\n        this.textModel = textModel;\r\n        this.selectedSuggestItem = selectedSuggestItem;\r\n        this.cursorPosition = cursorPosition;\r\n        this.textModelVersionId = textModelVersionId;\r\n        this._debounceValue = _debounceValue;\r\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\r\n        this._suggestPreviewMode = _suggestPreviewMode;\r\n        this._inlineSuggestMode = _inlineSuggestMode;\r\n        this._enabled = _enabled;\r\n        this._instantiationService = _instantiationService;\r\n        this._commandService = _commandService;\r\n        this._languageConfigurationService = _languageConfigurationService;\r\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\r\n        this._isActive = observableValue(this, false);\r\n        this._forceUpdateSignal = observableSignal('forceUpdate');\r\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\r\n        this._selectedInlineCompletionId = observableValue(this, undefined);\r\n        this._isAcceptingPartially = false;\r\n        this._preserveCurrentCompletionReasons = new Set([\r\n            VersionIdChangeReason.Redo,\r\n            VersionIdChangeReason.Undo,\r\n            VersionIdChangeReason.AcceptWord,\r\n        ]);\r\n        this._fetchInlineCompletions = derivedHandleChanges({\r\n            owner: this,\r\n            createEmptyChangeSummary: () => ({\r\n                preserveCurrentCompletion: false,\r\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\r\n            }),\r\n            handleChange: (ctx, changeSummary) => {\r\n                /** @description fetch inline completions */\r\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\r\n                    changeSummary.preserveCurrentCompletion = true;\r\n                }\r\n                else if (ctx.didChange(this._forceUpdateSignal)) {\r\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\r\n                }\r\n                return true;\r\n            },\r\n        }, (reader, changeSummary) => {\r\n            this._forceUpdateSignal.read(reader);\r\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\r\n            if (!shouldUpdate) {\r\n                this._source.cancelUpdate();\r\n                return undefined;\r\n            }\r\n            this.textModelVersionId.read(reader); // Refetch on text change\r\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\r\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\r\n                ? itemToPreserveCandidate : undefined;\r\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\r\n            const suggestItem = this.selectedSuggestItem.read(reader);\r\n            if (suggestWidgetInlineCompletions && !suggestItem) {\r\n                const inlineCompletions = this._source.inlineCompletions.get();\r\n                transaction(tx => {\r\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\r\n                    if (!inlineCompletions || suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\r\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\r\n                    }\r\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\r\n                });\r\n            }\r\n            const cursorPosition = this.cursorPosition.read(reader);\r\n            const context = {\r\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\r\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\r\n            };\r\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\r\n        });\r\n        this._filteredInlineCompletionItems = derived(this, reader => {\r\n            const c = this._source.inlineCompletions.read(reader);\r\n            if (!c) {\r\n                return [];\r\n            }\r\n            const cursorPosition = this.cursorPosition.read(reader);\r\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\r\n            return filteredCompletions;\r\n        });\r\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\r\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\r\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\r\n            const idx = this._selectedInlineCompletionId === undefined ? -1\r\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\r\n            if (idx === -1) {\r\n                // Reset the selection so that the selection does not jump back when it appears again\r\n                this._selectedInlineCompletionId.set(undefined, undefined);\r\n                return 0;\r\n            }\r\n            return idx;\r\n        });\r\n        this.selectedInlineCompletion = derived(this, (reader) => {\r\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\r\n            const idx = this.selectedInlineCompletionIndex.read(reader);\r\n            return filteredCompletions[idx];\r\n        });\r\n        this.lastTriggerKind = this._source.inlineCompletions.map(this, v => v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\r\n        this.inlineCompletionsCount = derived(this, reader => {\r\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\r\n                return this._filteredInlineCompletionItems.read(reader).length;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        this.state = derivedOpts({\r\n            owner: this,\r\n            equalityComparer: (a, b) => {\r\n                if (!a || !b) {\r\n                    return a === b;\r\n                }\r\n                return ghostTextOrReplacementEquals(a.ghostText, b.ghostText)\r\n                    && a.inlineCompletion === b.inlineCompletion\r\n                    && a.suggestItem === b.suggestItem;\r\n            }\r\n        }, (reader) => {\r\n            var _a;\r\n            const model = this.textModel;\r\n            const suggestItem = this.selectedSuggestItem.read(reader);\r\n            if (suggestItem) {\r\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\r\n                const augmentedCompletion = this._computeAugmentedCompletion(suggestCompletion, reader);\r\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\r\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\r\n                    return undefined;\r\n                }\r\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\r\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\r\n                const mode = this._suggestPreviewMode.read(reader);\r\n                const cursor = this.cursorPosition.read(reader);\r\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\r\n                // Show an invisible ghost text to reserve space\r\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\r\n                return { ghostText, inlineCompletion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\r\n            }\r\n            else {\r\n                if (!this._isActive.read(reader)) {\r\n                    return undefined;\r\n                }\r\n                const item = this.selectedInlineCompletion.read(reader);\r\n                if (!item) {\r\n                    return undefined;\r\n                }\r\n                const replacement = item.toSingleTextEdit(reader);\r\n                const mode = this._inlineSuggestMode.read(reader);\r\n                const cursor = this.cursorPosition.read(reader);\r\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\r\n                return ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\r\n            }\r\n        });\r\n        this.ghostText = derivedOpts({\r\n            owner: this,\r\n            equalityComparer: ghostTextOrReplacementEquals\r\n        }, reader => {\r\n            const v = this.state.read(reader);\r\n            if (!v) {\r\n                return undefined;\r\n            }\r\n            return v.ghostText;\r\n        });\r\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletions));\r\n        let lastItem = undefined;\r\n        this._register(autorun(reader => {\r\n            var _a, _b;\r\n            /** @description call handleItemDidShow */\r\n            const item = this.state.read(reader);\r\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\r\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\r\n                lastItem = completion;\r\n                if (completion) {\r\n                    const i = completion.inlineCompletion;\r\n                    const src = i.source;\r\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    async trigger(tx) {\r\n        this._isActive.set(true, tx);\r\n        await this._fetchInlineCompletions.get();\r\n    }\r\n    async triggerExplicitly(tx) {\r\n        subtransaction(tx, tx => {\r\n            this._isActive.set(true, tx);\r\n            this._forceUpdateSignal.trigger(tx, InlineCompletionTriggerKind.Explicit);\r\n        });\r\n        await this._fetchInlineCompletions.get();\r\n    }\r\n    stop(tx) {\r\n        subtransaction(tx, tx => {\r\n            this._isActive.set(false, tx);\r\n            this._source.clear(tx);\r\n        });\r\n    }\r\n    _computeAugmentedCompletion(suggestCompletion, reader) {\r\n        const model = this.textModel;\r\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\r\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\r\n            ? suggestWidgetInlineCompletions.inlineCompletions\r\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\r\n        const augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\r\n            let r = completion.toSingleTextEdit(reader);\r\n            r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\r\n            return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\r\n        });\r\n        return augmentedCompletion;\r\n    }\r\n    async _deltaSelectedInlineCompletionIndex(delta) {\r\n        await this.triggerExplicitly();\r\n        const completions = this._filteredInlineCompletionItems.get() || [];\r\n        if (completions.length > 0) {\r\n            const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\r\n            this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\r\n        }\r\n        else {\r\n            this._selectedInlineCompletionId.set(undefined, undefined);\r\n        }\r\n    }\r\n    async next() {\r\n        await this._deltaSelectedInlineCompletionIndex(1);\r\n    }\r\n    async previous() {\r\n        await this._deltaSelectedInlineCompletionIndex(-1);\r\n    }\r\n    async accept(editor) {\r\n        var _a;\r\n        if (editor.getModel() !== this.textModel) {\r\n            throw new BugIndicatingError();\r\n        }\r\n        const state = this.state.get();\r\n        if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\r\n            return;\r\n        }\r\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\r\n        editor.pushUndoStop();\r\n        if (completion.snippetInfo) {\r\n            editor.executeEdits('inlineSuggestion.accept', [\r\n                EditOperation.replaceMove(completion.range, ''),\r\n                ...completion.additionalTextEdits\r\n            ]);\r\n            editor.setPosition(completion.snippetInfo.range.getStartPosition());\r\n            (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\r\n        }\r\n        else {\r\n            editor.executeEdits('inlineSuggestion.accept', [\r\n                EditOperation.replaceMove(completion.range, completion.insertText),\r\n                ...completion.additionalTextEdits\r\n            ]);\r\n        }\r\n        if (completion.command) {\r\n            // Make sure the completion list will not be disposed.\r\n            completion.source.addRef();\r\n        }\r\n        // Reset before invoking the command, since the command might cause a follow up trigger.\r\n        transaction(tx => {\r\n            this._source.clear(tx);\r\n            // Potentially, isActive will get set back to true by the typing or accept inline suggest event\r\n            // if automatic inline suggestions are enabled.\r\n            this._isActive.set(false, tx);\r\n        });\r\n        if (completion.command) {\r\n            await this._commandService\r\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\r\n                .then(undefined, onUnexpectedExternalError);\r\n            completion.source.removeRef();\r\n        }\r\n    }\r\n    async acceptNextWord(editor) {\r\n        await this._acceptNext(editor, (pos, text) => {\r\n            const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\r\n            const config = this._languageConfigurationService.getLanguageConfiguration(langId);\r\n            const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\r\n            const m1 = text.match(wordRegExp);\r\n            let acceptUntilIndexExclusive = 0;\r\n            if (m1 && m1.index !== undefined) {\r\n                if (m1.index === 0) {\r\n                    acceptUntilIndexExclusive = m1[0].length;\r\n                }\r\n                else {\r\n                    acceptUntilIndexExclusive = m1.index;\r\n                }\r\n            }\r\n            else {\r\n                acceptUntilIndexExclusive = text.length;\r\n            }\r\n            const wsRegExp = /\\s+/g;\r\n            const m2 = wsRegExp.exec(text);\r\n            if (m2 && m2.index !== undefined) {\r\n                if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\r\n                    acceptUntilIndexExclusive = m2.index + m2[0].length;\r\n                }\r\n            }\r\n            return acceptUntilIndexExclusive;\r\n        });\r\n    }\r\n    async acceptNextLine(editor) {\r\n        await this._acceptNext(editor, (pos, text) => {\r\n            const m = text.match(/\\n/);\r\n            if (m && m.index !== undefined) {\r\n                return m.index + 1;\r\n            }\r\n            return text.length;\r\n        });\r\n    }\r\n    async _acceptNext(editor, getAcceptUntilIndex) {\r\n        if (editor.getModel() !== this.textModel) {\r\n            throw new BugIndicatingError();\r\n        }\r\n        const state = this.state.get();\r\n        if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\r\n            return;\r\n        }\r\n        const ghostText = state.ghostText;\r\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\r\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\r\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\r\n            await this.accept(editor);\r\n            return;\r\n        }\r\n        const firstPart = ghostText.parts[0];\r\n        const position = new Position(ghostText.lineNumber, firstPart.column);\r\n        const line = firstPart.lines.join('\\n');\r\n        const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\r\n        if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\r\n            this.accept(editor);\r\n            return;\r\n        }\r\n        const partialText = line.substring(0, acceptUntilIndexExclusive);\r\n        // Executing the edit might free the completion, so we have to hold a reference on it.\r\n        completion.source.addRef();\r\n        try {\r\n            this._isAcceptingPartially = true;\r\n            try {\r\n                editor.pushUndoStop();\r\n                editor.executeEdits('inlineSuggestion.accept', [\r\n                    EditOperation.replace(Range.fromPositions(position), partialText),\r\n                ]);\r\n                const length = lengthOfText(partialText);\r\n                editor.setPosition(addPositions(position, length));\r\n            }\r\n            finally {\r\n                this._isAcceptingPartially = false;\r\n            }\r\n            if (completion.source.provider.handlePartialAccept) {\r\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\r\n                // This assumes that the inline completion and the model use the same EOL style.\r\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\r\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\r\n            }\r\n        }\r\n        finally {\r\n            completion.source.removeRef();\r\n        }\r\n    }\r\n    handleSuggestAccepted(item) {\r\n        var _a, _b;\r\n        const itemEdit = item.toSingleTextEdit().removeCommonPrefix(this.textModel);\r\n        const augmentedCompletion = this._computeAugmentedCompletion(itemEdit, undefined);\r\n        if (!augmentedCompletion) {\r\n            return;\r\n        }\r\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\r\n        (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length);\r\n    }\r\n};\r\nInlineCompletionsModel = __decorate([\r\n    __param(9, IInstantiationService),\r\n    __param(10, ICommandService),\r\n    __param(11, ILanguageConfigurationService)\r\n], InlineCompletionsModel);\r\nexport { InlineCompletionsModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SuggestMemoryService_1;\r\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { LRUCache } from '../../../../base/common/map.js';\r\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\r\nimport { CompletionItemKinds } from '../../../common/languages.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\r\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\r\nexport class Memory {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const topScore = items[0].score[0];\r\n        for (let i = 0; i < items.length; i++) {\r\n            const { score, completion: suggestion } = items[i];\r\n            if (score[0] !== topScore) {\r\n                // stop when leaving the group of top matches\r\n                break;\r\n            }\r\n            if (suggestion.preselect) {\r\n                // stop when seeing an auto-select-item\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport class NoMemory extends Memory {\r\n    constructor() {\r\n        super('first');\r\n    }\r\n    memorize(model, pos, item) {\r\n        // no-op\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    fromJSON() {\r\n        //\r\n    }\r\n}\r\nexport class LRUMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsed');\r\n        this._cache = new LRUCache(300, 0.66);\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const key = `${model.getLanguageId()}/${item.textLabel}`;\r\n        this._cache.set(key, {\r\n            touch: this._seq++,\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\r\n        if (/\\s$/.test(lineSuffix)) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        const topScore = items[0].score[0];\r\n        let indexPreselect = -1;\r\n        let indexRecency = -1;\r\n        let seq = -1;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].score[0] !== topScore) {\r\n                // consider only top items\r\n                break;\r\n            }\r\n            const key = `${model.getLanguageId()}/${items[i].textLabel}`;\r\n            const item = this._cache.peek(key);\r\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\r\n                seq = item.touch;\r\n                indexRecency = i;\r\n            }\r\n            if (items[i].completion.preselect && indexPreselect === -1) {\r\n                // stop when seeing an auto-select-item\r\n                return indexPreselect = i;\r\n            }\r\n        }\r\n        if (indexRecency !== -1) {\r\n            return indexRecency;\r\n        }\r\n        else if (indexPreselect !== -1) {\r\n            return indexPreselect;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this._cache.toJSON();\r\n    }\r\n    fromJSON(data) {\r\n        this._cache.clear();\r\n        const seq = 0;\r\n        for (const [key, value] of data) {\r\n            value.touch = seq;\r\n            value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\r\n            this._cache.set(key, value);\r\n        }\r\n        this._seq = this._cache.size;\r\n    }\r\n}\r\nexport class PrefixMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsedByPrefix');\r\n        this._trie = TernarySearchTree.forStrings();\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        const key = `${model.getLanguageId()}/${word}`;\r\n        this._trie.set(key, {\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText,\r\n            touch: this._seq++\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        if (!word) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        const key = `${model.getLanguageId()}/${word}`;\r\n        let item = this._trie.get(key);\r\n        if (!item) {\r\n            item = this._trie.findSubstr(key);\r\n        }\r\n        if (item) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                const { kind, insertText } = items[i].completion;\r\n                if (kind === item.type && insertText === item.insertText) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return super.select(model, pos, items);\r\n    }\r\n    toJSON() {\r\n        const entries = [];\r\n        this._trie.forEach((value, key) => entries.push([key, value]));\r\n        // sort by last recently used (touch), then\r\n        // take the top 200 item and normalize their\r\n        // touch\r\n        entries\r\n            .sort((a, b) => -(a[1].touch - b[1].touch))\r\n            .forEach((value, i) => value[1].touch = i);\r\n        return entries.slice(0, 200);\r\n    }\r\n    fromJSON(data) {\r\n        this._trie.clear();\r\n        if (data.length > 0) {\r\n            this._seq = data[0][1].touch + 1;\r\n            for (const [key, value] of data) {\r\n                value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\r\n                this._trie.set(key, value);\r\n            }\r\n        }\r\n    }\r\n}\r\nlet SuggestMemoryService = SuggestMemoryService_1 = class SuggestMemoryService {\r\n    constructor(_storageService, _configService) {\r\n        this._storageService = _storageService;\r\n        this._configService = _configService;\r\n        this._disposables = new DisposableStore();\r\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\r\n        this._disposables.add(_storageService.onWillSaveState(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                this._saveState();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._persistSoon.dispose();\r\n    }\r\n    memorize(model, pos, item) {\r\n        this._withStrategy(model, pos).memorize(model, pos, item);\r\n        this._persistSoon.schedule();\r\n    }\r\n    select(model, pos, items) {\r\n        return this._withStrategy(model, pos).select(model, pos, items);\r\n    }\r\n    _withStrategy(model, pos) {\r\n        var _a;\r\n        const mode = this._configService.getValue('editor.suggestSelection', {\r\n            overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\r\n            resource: model.uri\r\n        });\r\n        if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\r\n            this._saveState();\r\n            const ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\r\n            this._strategy = new ctor();\r\n            try {\r\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n                const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\r\n                const raw = this._storageService.get(`${SuggestMemoryService_1._storagePrefix}/${mode}`, scope);\r\n                if (raw) {\r\n                    this._strategy.fromJSON(JSON.parse(raw));\r\n                }\r\n            }\r\n            catch (e) {\r\n                // things can go wrong with JSON...\r\n            }\r\n        }\r\n        return this._strategy;\r\n    }\r\n    _saveState() {\r\n        if (this._strategy) {\r\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n            const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\r\n            const raw = JSON.stringify(this._strategy);\r\n            this._storageService.store(`${SuggestMemoryService_1._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* StorageTarget.MACHINE */);\r\n        }\r\n    }\r\n};\r\nSuggestMemoryService._strategyCtors = new Map([\r\n    ['recentlyUsedByPrefix', PrefixMemory],\r\n    ['recentlyUsed', LRUMemory],\r\n    ['first', NoMemory]\r\n]);\r\nSuggestMemoryService._storagePrefix = 'suggest/memories';\r\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IConfigurationService)\r\n], SuggestMemoryService);\r\nexport { SuggestMemoryService };\r\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\r\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar WordContextKey_1;\r\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet WordContextKey = WordContextKey_1 = class WordContextKey {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._enabled = false;\r\n        this._ckAtEnd = WordContextKey_1.AtEnd.bindTo(contextKeyService);\r\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(122 /* EditorOption.tabCompletion */) && this._update());\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._configListener.dispose();\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._ckAtEnd.reset();\r\n    }\r\n    _update() {\r\n        // only update this when tab completions are enabled\r\n        const enabled = this._editor.getOption(122 /* EditorOption.tabCompletion */) === 'on';\r\n        if (this._enabled === enabled) {\r\n            return;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            const checkForWordEnd = () => {\r\n                if (!this._editor.hasModel()) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const selection = this._editor.getSelection();\r\n                const word = model.getWordAtPosition(selection.getStartPosition());\r\n                if (!word) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\r\n            };\r\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\r\n            checkForWordEnd();\r\n        }\r\n        else if (this._selectionListener) {\r\n            this._ckAtEnd.reset();\r\n            this._selectionListener.dispose();\r\n            this._selectionListener = undefined;\r\n        }\r\n    }\r\n};\r\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\r\nWordContextKey = WordContextKey_1 = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordContextKey);\r\nexport { WordContextKey };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SuggestAlternatives_1;\r\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet SuggestAlternatives = SuggestAlternatives_1 = class SuggestAlternatives {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._index = 0;\r\n        this._ckOtherSuggestions = SuggestAlternatives_1.OtherSuggestions.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        var _a;\r\n        this._ckOtherSuggestions.reset();\r\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._model = undefined;\r\n        this._acceptNext = undefined;\r\n        this._ignore = false;\r\n    }\r\n    set({ model, index }, acceptNext) {\r\n        // no suggestions -> nothing to do\r\n        if (model.items.length === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        // no alternative suggestions -> nothing to do\r\n        const nextIndex = SuggestAlternatives_1._moveIndex(true, model, index);\r\n        if (nextIndex === index) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._acceptNext = acceptNext;\r\n        this._model = model;\r\n        this._index = index;\r\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\r\n            if (!this._ignore) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._ckOtherSuggestions.set(true);\r\n    }\r\n    static _moveIndex(fwd, model, index) {\r\n        let newIndex = index;\r\n        for (let rounds = model.items.length; rounds > 0; rounds--) {\r\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\r\n            if (newIndex === index) {\r\n                break;\r\n            }\r\n            if (!model.items[newIndex].completion.additionalTextEdits) {\r\n                break;\r\n            }\r\n        }\r\n        return newIndex;\r\n    }\r\n    next() {\r\n        this._move(true);\r\n    }\r\n    prev() {\r\n        this._move(false);\r\n    }\r\n    _move(fwd) {\r\n        if (!this._model) {\r\n            // nothing to reason about\r\n            return;\r\n        }\r\n        try {\r\n            this._ignore = true;\r\n            this._index = SuggestAlternatives_1._moveIndex(fwd, this._model, this._index);\r\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\r\n        }\r\n        finally {\r\n            this._ignore = false;\r\n        }\r\n    }\r\n};\r\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\r\nSuggestAlternatives = SuggestAlternatives_1 = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SuggestAlternatives);\r\nexport { SuggestAlternatives };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, model, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(model.onDidSuggest(e => {\r\n            if (e.completionModel.items.length === 0) {\r\n                this.reset();\r\n            }\r\n        }));\r\n        this._disposables.add(model.onDidCancel(e => {\r\n            this.reset();\r\n        }));\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen() && model.state !== 0 /* State.Idle */) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { LinkedList } from '../../../../base/common/linkedList.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nexport class BracketSelectionRangeProvider {\r\n    async provideSelectionRanges(model, positions) {\r\n        const result = [];\r\n        for (const position of positions) {\r\n            const bucket = [];\r\n            result.push(bucket);\r\n            const ranges = new Map();\r\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n        }\r\n        return result;\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            const bracket = model.bracketPairs.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            const d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            if (bracket.bracketInfo.isOpeningBracket) {\r\n                const key = bracket.bracketInfo.bracketText;\r\n                // wait for closing\r\n                const val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            const bracket = model.bracketPairs.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            const d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            if (!bracket.bracketInfo.isOpeningBracket) {\r\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\r\n                // wait for opening\r\n                const val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                const key = bracket.bracketInfo.bracketText;\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    const list = ranges.get(key);\r\n                    if (list) {\r\n                        const closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\r\nexport class WordDistance {\r\n    static async create(service, editor) {\r\n        if (!editor.getOption(117 /* EditorOption.suggest */).localityBonus) {\r\n            return WordDistance.None;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return WordDistance.None;\r\n        }\r\n        const model = editor.getModel();\r\n        const position = editor.getPosition();\r\n        if (!service.canComputeWordRanges(model.uri)) {\r\n            return WordDistance.None;\r\n        }\r\n        const [ranges] = await new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\r\n        if (ranges.length === 0) {\r\n            return WordDistance.None;\r\n        }\r\n        const wordRanges = await service.computeWordRanges(model.uri, ranges[0].range);\r\n        if (!wordRanges) {\r\n            return WordDistance.None;\r\n        }\r\n        // remove current word\r\n        const wordUntilPos = model.getWordUntilPosition(position);\r\n        delete wordRanges[wordUntilPos.word];\r\n        return new class extends WordDistance {\r\n            distance(anchor, item) {\r\n                if (!position.equals(editor.getPosition())) {\r\n                    return 0;\r\n                }\r\n                if (item.kind === 17 /* CompletionItemKind.Keyword */) {\r\n                    return 2 << 20;\r\n                }\r\n                const word = typeof item.label === 'string' ? item.label : item.label.label;\r\n                const wordLines = wordRanges[word];\r\n                if (isFalsyOrEmpty(wordLines)) {\r\n                    return 2 << 20;\r\n                }\r\n                const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\r\n                const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\r\n                let blockDistance = ranges.length;\r\n                for (const range of ranges) {\r\n                    if (!Range.containsRange(range.range, bestWordRange)) {\r\n                        break;\r\n                    }\r\n                    blockDistance -= 1;\r\n                }\r\n                return blockDistance;\r\n            }\r\n        };\r\n    }\r\n}\r\nWordDistance.None = new class extends WordDistance {\r\n    distance() { return 0; }\r\n};\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { quickSelect } from '../../../../base/common/arrays.js';\r\nimport { anyScore, fuzzyScore, FuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScoreOptions } from '../../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../../base/common/strings.js';\r\nexport class LineContext {\r\n    constructor(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n}\r\n/**\r\n * Sorted, filtered completion view model\r\n * */\r\nexport class CompletionModel {\r\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, fuzzyScoreOptions = FuzzyScoreOptions.default, clipboardText = undefined) {\r\n        this.clipboardText = clipboardText;\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* Refilter.All */;\r\n        this._lineContext = lineContext;\r\n        this._fuzzyScoreOptions = fuzzyScoreOptions;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    get lineContext() {\r\n        return this._lineContext;\r\n    }\r\n    set lineContext(value) {\r\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Refilter.Incr */ : 1 /* Refilter.All */;\r\n            this._lineContext = value;\r\n        }\r\n    }\r\n    get items() {\r\n        this._ensureCachedState();\r\n        return this._filteredItems;\r\n    }\r\n    getItemsByProvider() {\r\n        this._ensureCachedState();\r\n        return this._itemsByProvider;\r\n    }\r\n    getIncompleteProvider() {\r\n        this._ensureCachedState();\r\n        const result = new Set();\r\n        for (const [provider, items] of this.getItemsByProvider()) {\r\n            if (items.length > 0 && items[0].container.incomplete) {\r\n                result.add(provider);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get stats() {\r\n        this._ensureCachedState();\r\n        return this._stats;\r\n    }\r\n    _ensureCachedState() {\r\n        if (this._refilterKind !== 0 /* Refilter.Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    }\r\n    _createCachedState() {\r\n        this._itemsByProvider = new Map();\r\n        const labelLengths = [];\r\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\r\n        let word = '';\r\n        let wordLow = '';\r\n        // incrementally filter less\r\n        const source = this._refilterKind === 1 /* Refilter.All */ ? this._items : this._filteredItems;\r\n        const target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (let i = 0; i < source.length; i++) {\r\n            const item = source[i];\r\n            if (item.isInvalid) {\r\n                continue; // SKIP invalid items\r\n            }\r\n            // keep all items by their provider\r\n            const arr = this._itemsByProvider.get(item.provider);\r\n            if (arr) {\r\n                arr.push(item);\r\n            }\r\n            else {\r\n                this._itemsByProvider.set(item.provider, [item]);\r\n            }\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            const overwriteBefore = item.position.column - item.editStart.column;\r\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                let wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    const ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* CharCode.Space */ || ch === 9 /* CharCode.Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    const match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, this._fuzzyScoreOptions);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    const match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, this._fuzzyScoreOptions);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            labelLengths.push(item.textLabel.length);\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Refilter.Nothing */;\r\n        this._stats = {\r\n            pLabelLen: labelLengths.length ?\r\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\r\n                : 0\r\n        };\r\n    }\r\n    static _compareCompletionItems(a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    static _compareCompletionItemsSnippetsDown(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* CompletionItemKind.Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 27 /* CompletionItemKind.Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n    static _compareCompletionItemsSnippetsUp(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* CompletionItemKind.Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 27 /* CompletionItemKind.Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SuggestModel_1;\r\nimport { TimeoutTimer } from '../../../../base/common/async.js';\r\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace, isHighSurrogate, isLowSurrogate } from '../../../../base/common/strings.js';\r\nimport { Selection } from '../../../common/core/selection.js';\r\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../../platform/log/common/log.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { CompletionOptions, getSnippetSuggestSupport, provideSuggestionItems, QuickSuggestionsOptions } from './suggest.js';\r\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\r\nimport { FuzzyScoreOptions } from '../../../../base/common/filters.js';\r\nimport { assertType } from '../../../../base/common/types.js';\r\nimport { InlineCompletionContextKeys } from '../../inlineCompletions/browser/inlineCompletionContextKeys.js';\r\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\r\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\r\nexport class LineContext {\r\n    static shouldAutoTrigger(editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        model.tokenization.tokenizeIfCheap(pos.lineNumber);\r\n        const word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column &&\r\n            word.startColumn + 1 !== pos.column /* after typing a single character before a word */) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    constructor(model, position, triggerOptions) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.triggerOptions = triggerOptions;\r\n    }\r\n}\r\nfunction canShowQuickSuggest(editor, contextKeyService, configurationService) {\r\n    if (!Boolean(contextKeyService.getContextKeyValue(InlineCompletionContextKeys.inlineSuggestionVisible.key))) {\r\n        // Allow if there is no inline suggestion.\r\n        return true;\r\n    }\r\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\r\n    if (suppressSuggestions !== undefined) {\r\n        return !suppressSuggestions;\r\n    }\r\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\r\n}\r\nfunction canShowSuggestOnTriggerCharacters(editor, contextKeyService, configurationService) {\r\n    if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) {\r\n        // Allow if there is no inline suggestion.\r\n        return true;\r\n    }\r\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\r\n    if (suppressSuggestions !== undefined) {\r\n        return !suppressSuggestions;\r\n    }\r\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\r\n}\r\nlet SuggestModel = SuggestModel_1 = class SuggestModel {\r\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService, _languageFeaturesService, _envService) {\r\n        this._editor = _editor;\r\n        this._editorWorkerService = _editorWorkerService;\r\n        this._clipboardService = _clipboardService;\r\n        this._telemetryService = _telemetryService;\r\n        this._logService = _logService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._languageFeaturesService = _languageFeaturesService;\r\n        this._envService = _envService;\r\n        this._toDispose = new DisposableStore();\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._triggerState = undefined;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._telemetryGate = 0;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\r\n            this._updateTriggerCharacters();\r\n        }));\r\n        this._toDispose.add(this._languageFeaturesService.completionProvider.onDidChange(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateActiveSuggestSession();\r\n        }));\r\n        let editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\r\n            editorIsComposing = false;\r\n            this._onCompositionEnd();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\r\n            // only trigger suggest when the editor isn't composing a character\r\n            if (!editorIsComposing) {\r\n                this._onCursorChange(e);\r\n            }\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            // only filter completions when the editor isn't composing a character\r\n            // allow-any-unicode-next-line\r\n            // e.g. ¨ + u makes ü but just ¨ cannot be used for filtering\r\n            if (!editorIsComposing && this._triggerState !== undefined) {\r\n                this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n    }\r\n    dispose() {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    }\r\n    _updateTriggerCharacters() {\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(90 /* EditorOption.readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(120 /* EditorOption.suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        const supportsByTriggerCharacter = new Map();\r\n        for (const support of this._languageFeaturesService.completionProvider.all(this._editor.getModel())) {\r\n            for (const ch of support.triggerCharacters || []) {\r\n                let set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        const checkTriggerCharacter = (text) => {\r\n            var _a;\r\n            if (!canShowSuggestOnTriggerCharacters(this._editor, this._contextKeyService, this._configurationService)) {\r\n                return;\r\n            }\r\n            if (LineContext.shouldAutoTrigger(this._editor)) {\r\n                // don't trigger by trigger characters when this is a case for quick suggest\r\n                return;\r\n            }\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                const position = this._editor.getPosition();\r\n                const model = this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            let lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            const supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                const providerItemsToReuse = new Map();\r\n                if (this._completionModel) {\r\n                    for (const [provider, items] of this._completionModel.getItemsByProvider()) {\r\n                        if (!supports.has(provider)) {\r\n                            providerItemsToReuse.set(provider, items);\r\n                        }\r\n                    }\r\n                }\r\n                this.trigger({\r\n                    auto: true,\r\n                    triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\r\n                    triggerCharacter: lastChar,\r\n                    retrigger: Boolean(this._completionModel),\r\n                    clipboardText: (_a = this._completionModel) === null || _a === void 0 ? void 0 : _a.clipboardText,\r\n                    completionOptions: { providerFilter: supports, providerItemsToReuse }\r\n                });\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(() => checkTriggerCharacter()));\r\n    }\r\n    // --- trigger/retrigger/cancel suggest\r\n    get state() {\r\n        if (!this._triggerState) {\r\n            return 0 /* State.Idle */;\r\n        }\r\n        else if (!this._triggerState.auto) {\r\n            return 1 /* State.Manual */;\r\n        }\r\n        else {\r\n            return 2 /* State.Auto */;\r\n        }\r\n    }\r\n    cancel(retrigger = false) {\r\n        var _a;\r\n        if (this._triggerState !== undefined) {\r\n            this._triggerQuickSuggest.cancel();\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._requestToken = undefined;\r\n            this._triggerState = undefined;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger });\r\n        }\r\n    }\r\n    clear() {\r\n        this._completionDisposables.clear();\r\n    }\r\n    _updateActiveSuggestSession() {\r\n        if (this._triggerState !== undefined) {\r\n            if (!this._editor.hasModel() || !this._languageFeaturesService.completionProvider.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._triggerState.auto, retrigger: true });\r\n            }\r\n        }\r\n    }\r\n    _onCursorChange(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || (e.reason !== 0 /* CursorChangeReason.NotSet */ && e.reason !== 3 /* CursorChangeReason.Explicit */)\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (this._triggerState === undefined && e.reason === 0 /* CursorChangeReason.NotSet */) {\r\n            if (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor did move RIGHT due to typing -> trigger quick suggest\r\n                this._doTriggerQuickSuggest();\r\n            }\r\n        }\r\n        else if (this._triggerState !== undefined && e.reason === 3 /* CursorChangeReason.Explicit */) {\r\n            // suggest is active and something like cursor keys are used to move\r\n            // the cursor. this means we can refilter at the new position\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _onCompositionEnd() {\r\n        // trigger or refilter when composition ends\r\n        if (this._triggerState === undefined) {\r\n            this._doTriggerQuickSuggest();\r\n        }\r\n        else {\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _doTriggerQuickSuggest() {\r\n        var _a;\r\n        if (QuickSuggestionsOptions.isAllOff(this._editor.getOption(88 /* EditorOption.quickSuggestions */))) {\r\n            // not enabled\r\n            return;\r\n        }\r\n        if (this._editor.getOption(117 /* EditorOption.suggest */).snippetsPreventQuickSuggestions && ((_a = SnippetController2.get(this._editor)) === null || _a === void 0 ? void 0 : _a.isInSnippet())) {\r\n            // no quick suggestion when in snippet mode\r\n            return;\r\n        }\r\n        this.cancel();\r\n        this._triggerQuickSuggest.cancelAndSet(() => {\r\n            if (this._triggerState !== undefined) {\r\n                return;\r\n            }\r\n            if (!LineContext.shouldAutoTrigger(this._editor)) {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const pos = this._editor.getPosition();\r\n            // validate enabled now\r\n            const config = this._editor.getOption(88 /* EditorOption.quickSuggestions */);\r\n            if (QuickSuggestionsOptions.isAllOff(config)) {\r\n                return;\r\n            }\r\n            if (!QuickSuggestionsOptions.isAllOn(config)) {\r\n                // Check the type of the token that triggered this\r\n                model.tokenization.tokenizeIfCheap(pos.lineNumber);\r\n                const lineTokens = model.tokenization.getLineTokens(pos.lineNumber);\r\n                const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                if (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'on') {\r\n                    return;\r\n                }\r\n            }\r\n            if (!canShowQuickSuggest(this._editor, this._contextKeyService, this._configurationService)) {\r\n                // do not trigger quick suggestions if inline suggestions are shown\r\n                return;\r\n            }\r\n            if (!this._languageFeaturesService.completionProvider.has(model)) {\r\n                return;\r\n            }\r\n            // we made it till here -> trigger now\r\n            this.trigger({ auto: true });\r\n        }, this._editor.getOption(89 /* EditorOption.quickSuggestionsDelay */));\r\n    }\r\n    _refilterCompletionItems() {\r\n        assertType(this._editor.hasModel());\r\n        assertType(this._triggerState !== undefined);\r\n        const model = this._editor.getModel();\r\n        const position = this._editor.getPosition();\r\n        const ctx = new LineContext(model, position, { ...this._triggerState, refilter: true });\r\n        this._onNewContext(ctx);\r\n    }\r\n    trigger(options) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const ctx = new LineContext(model, this._editor.getPosition(), options);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(options.retrigger);\r\n        this._triggerState = options;\r\n        this._onDidTrigger.fire({ auto: options.auto, shy: (_a = options.shy) !== null && _a !== void 0 ? _a : false, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        let suggestCtx = { triggerKind: (_b = options.triggerKind) !== null && _b !== void 0 ? _b : 0 /* CompletionTriggerKind.Invoke */ };\r\n        if (options.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\r\n                triggerCharacter: options.triggerCharacter\r\n            };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        const snippetSuggestions = this._editor.getOption(111 /* EditorOption.snippetSuggestions */);\r\n        let snippetSortOrder = 1 /* SnippetSortOrder.Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* SnippetSortOrder.Top */;\r\n                break;\r\n            // \t↓ that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* SnippetSortOrder.Bottom */;\r\n                break;\r\n        }\r\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel_1._createSuggestFilter(this._editor);\r\n        const completionOptions = new CompletionOptions(snippetSortOrder, (_d = (_c = options.completionOptions) === null || _c === void 0 ? void 0 : _c.kindFilter) !== null && _d !== void 0 ? _d : itemKindFilter, (_e = options.completionOptions) === null || _e === void 0 ? void 0 : _e.providerFilter, (_f = options.completionOptions) === null || _f === void 0 ? void 0 : _f.providerItemsToReuse, showDeprecated);\r\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\r\n        const completions = provideSuggestionItems(this._languageFeaturesService.completionProvider, model, this._editor.getPosition(), completionOptions, suggestCtx, this._requestToken.token);\r\n        Promise.all([completions, wordDistance]).then(async ([completions, wordDistance]) => {\r\n            var _a;\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            let clipboardText = options === null || options === void 0 ? void 0 : options.clipboardText;\r\n            if (!clipboardText && completions.needsClipboard) {\r\n                clipboardText = await this._clipboardService.readText();\r\n            }\r\n            if (this._triggerState === undefined) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            // const items = completions.items;\r\n            // if (existing) {\r\n            // \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\r\n            // \titems = items.concat(existing.items).sort(cmpFn);\r\n            // }\r\n            const ctx = new LineContext(model, this._editor.getPosition(), options);\r\n            const fuzzySearchOptions = {\r\n                ...FuzzyScoreOptions.default,\r\n                firstMatchCanBeWeak: !this._editor.getOption(117 /* EditorOption.suggest */).matchOnWordStartOnly\r\n            };\r\n            this._completionModel = new CompletionModel(completions.items, this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            }, wordDistance, this._editor.getOption(117 /* EditorOption.suggest */), this._editor.getOption(111 /* EditorOption.snippetSuggestions */), fuzzySearchOptions, clipboardText);\r\n            // store containers so that they can be disposed later\r\n            this._completionDisposables.add(completions.disposable);\r\n            this._onNewContext(ctx);\r\n            // finally report telemetry about durations\r\n            this._reportDurationsTelemetry(completions.durations);\r\n            // report invalid completions by source\r\n            if (!this._envService.isBuilt || this._envService.isExtensionDevelopment) {\r\n                for (const item of completions.items) {\r\n                    if (item.isInvalid) {\r\n                        this._logService.warn(`[suggest] did IGNORE invalid completion item from ${item.provider._debugDisplayName}`, item.completion);\r\n                    }\r\n                }\r\n            }\r\n        }).catch(onUnexpectedError);\r\n    }\r\n    _reportDurationsTelemetry(durations) {\r\n        if (this._telemetryGate++ % 230 !== 0) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\r\n            this._logService.debug('suggest.durations.json', durations);\r\n        });\r\n    }\r\n    static _createSuggestFilter(editor) {\r\n        // kind filter and snippet sort rules\r\n        const result = new Set();\r\n        // snippet setting\r\n        const snippetSuggestions = editor.getOption(111 /* EditorOption.snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(27 /* CompletionItemKind.Snippet */);\r\n        }\r\n        // type setting\r\n        const suggestOptions = editor.getOption(117 /* EditorOption.suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* CompletionItemKind.Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* CompletionItemKind.Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* CompletionItemKind.Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* CompletionItemKind.Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* CompletionItemKind.Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* CompletionItemKind.Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* CompletionItemKind.Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* CompletionItemKind.Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* CompletionItemKind.Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* CompletionItemKind.Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* CompletionItemKind.Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* CompletionItemKind.Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* CompletionItemKind.Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* CompletionItemKind.Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* CompletionItemKind.Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* CompletionItemKind.Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* CompletionItemKind.EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* CompletionItemKind.Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* CompletionItemKind.Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* CompletionItemKind.Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* CompletionItemKind.File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* CompletionItemKind.Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* CompletionItemKind.Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* CompletionItemKind.Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* CompletionItemKind.TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(27 /* CompletionItemKind.Snippet */);\r\n        }\r\n        if (!suggestOptions.showUsers) {\r\n            result.add(25 /* CompletionItemKind.User */);\r\n        }\r\n        if (!suggestOptions.showIssues) {\r\n            result.add(26 /* CompletionItemKind.Issue */);\r\n        }\r\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\r\n    }\r\n    _onNewContext(ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\r\n            // cancel IntelliSense when line start changes\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\r\n            // started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\r\n            const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\r\n            if (shouldAutoTrigger && this._context) {\r\n                // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\r\n                // suggestions to be cancelled, which causes `this._context` to be undefined\r\n                const map = this._completionModel.getItemsByProvider();\r\n                this.trigger({\r\n                    auto: this._context.triggerOptions.auto,\r\n                    retrigger: true,\r\n                    clipboardText: this._completionModel.clipboardText,\r\n                    completionOptions: { providerItemsToReuse: map }\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.getIncompleteProvider().size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            const providerItemsToReuse = new Map();\r\n            const providerFilter = new Set();\r\n            for (const [provider, items] of this._completionModel.getItemsByProvider()) {\r\n                if (items.length > 0 && items[0].container.incomplete) {\r\n                    providerFilter.add(provider);\r\n                }\r\n                else {\r\n                    providerItemsToReuse.set(provider, items);\r\n                }\r\n            }\r\n            this.trigger({\r\n                auto: this._context.triggerOptions.auto,\r\n                triggerKind: 2 /* CompletionTriggerKind.TriggerForIncompleteCompletions */,\r\n                retrigger: true,\r\n                clipboardText: this._completionModel.clipboardText,\r\n                completionOptions: { providerFilter, providerItemsToReuse }\r\n            });\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            const oldLineContext = this._completionModel.lineContext;\r\n            let isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\r\n                if (!this._context) {\r\n                    // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\r\n                    // suggestions to be cancelled, which causes `this._context` to be undefined\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n                if (shouldAutoTrigger && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\r\n                    return;\r\n                }\r\n                if (!this._context.triggerOptions.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                triggerOptions: ctx.triggerOptions,\r\n                isFrozen,\r\n            });\r\n        }\r\n    }\r\n};\r\nSuggestModel = SuggestModel_1 = __decorate([\r\n    __param(1, IEditorWorkerService),\r\n    __param(2, IClipboardService),\r\n    __param(3, ITelemetryService),\r\n    __param(4, ILogService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IConfigurationService),\r\n    __param(7, ILanguageFeaturesService),\r\n    __param(8, IEnvironmentService)\r\n], SuggestModel);\r\nexport { SuggestModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nexport class OvertypingCapturer {\r\n    constructor(editor, suggestModel) {\r\n        this._disposables = new DisposableStore();\r\n        this._lastOvertyped = [];\r\n        this._locked = false;\r\n        this._disposables.add(editor.onWillType(() => {\r\n            if (this._locked || !editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = editor.getSelections();\r\n            const selectionsLength = selections.length;\r\n            // Check if it will overtype any selections\r\n            let willOvertype = false;\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                if (!selections[i].isEmpty()) {\r\n                    willOvertype = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!willOvertype) {\r\n                if (this._lastOvertyped.length !== 0) {\r\n                    this._lastOvertyped.length = 0;\r\n                }\r\n                return;\r\n            }\r\n            this._lastOvertyped = [];\r\n            const model = editor.getModel();\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                const selection = selections[i];\r\n                // Check for overtyping capturer restrictions\r\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\r\n                    return;\r\n                }\r\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\r\n            }\r\n        }));\r\n        this._disposables.add(suggestModel.onDidTrigger(e => {\r\n            this._locked = true;\r\n        }));\r\n        this._disposables.add(suggestModel.onDidCancel(e => {\r\n            this._locked = false;\r\n        }));\r\n    }\r\n    getLastOvertypedInfo(idx) {\r\n        if (idx >= 0 && idx < this._lastOvertyped.length) {\r\n            return this._lastOvertyped[idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\nOvertypingCapturer._maxSelectionLength = 51200;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SuggestWidget_1;\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\r\nimport { createCancelablePromise, disposableTimeout, TimeoutTimer } from '../../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { Emitter, PauseableEmitter } from '../../../../base/common/event.js';\r\nimport { DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\r\nimport { clamp } from '../../../../base/common/numbers.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport './media/suggest.css';\r\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\r\nimport '../../symbolIcons/browser/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport * as nls from '../../../../nls.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nimport { activeContrastBorder, editorForeground, editorWidgetBackground, editorWidgetBorder, listFocusHighlightForeground, listHighlightForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { canExpandCompletionItem, SuggestDetailsOverlay, SuggestDetailsWidget } from './suggestWidgetDetails.js';\r\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\r\nimport { getListStyles } from '../../../../platform/theme/browser/defaultStyles.js';\r\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\r\n/**\r\n * Suggest widget colors\r\n */\r\nregisterColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\r\nregisterColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\r\nconst editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hcDark: editorForeground, hcLight: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\r\nregisterColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hcDark: quickInputListFocusForeground, hcLight: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\r\nregisterColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hcDark: quickInputListFocusIconForeground, hcLight: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hcDark: quickInputListFocusBackground, hcLight: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\r\nregisterColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\r\nregisterColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hcDark: listFocusHighlightForeground, hcLight: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\r\nregisterColor('editorSuggestWidgetStatus.foreground', { dark: transparent(editorSuggestWidgetForeground, .5), light: transparent(editorSuggestWidgetForeground, .5), hcDark: transparent(editorSuggestWidgetForeground, .5), hcLight: transparent(editorSuggestWidgetForeground, .5) }, nls.localize('editorSuggestWidgetStatusForeground', 'Foreground color of the suggest widget status.'));\r\nclass PersistedWidgetSize {\r\n    constructor(_service, editor) {\r\n        this._service = _service;\r\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\r\n    }\r\n    restore() {\r\n        var _a;\r\n        const raw = (_a = this._service.get(this._key, 0 /* StorageScope.PROFILE */)) !== null && _a !== void 0 ? _a : '';\r\n        try {\r\n            const obj = JSON.parse(raw);\r\n            if (dom.Dimension.is(obj)) {\r\n                return dom.Dimension.lift(obj);\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    store(size) {\r\n        this._service.store(this._key, JSON.stringify(size), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\r\n    }\r\n    reset() {\r\n        this._service.remove(this._key, 0 /* StorageScope.PROFILE */);\r\n    }\r\n}\r\nlet SuggestWidget = SuggestWidget_1 = class SuggestWidget {\r\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\r\n        this.editor = editor;\r\n        this._storageService = _storageService;\r\n        this._state = 0 /* State.Hidden */;\r\n        this._isAuto = false;\r\n        this._pendingLayout = new MutableDisposable();\r\n        this._pendingShowDetails = new MutableDisposable();\r\n        this._ignoreFocusEvents = false;\r\n        this._forceRenderingAbove = false;\r\n        this._explainMode = false;\r\n        this._showTimeout = new TimeoutTimer();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidSelect = new PauseableEmitter();\r\n        this._onDidFocus = new PauseableEmitter();\r\n        this._onDidHide = new Emitter();\r\n        this._onDidShow = new Emitter();\r\n        this.onDidSelect = this._onDidSelect.event;\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this.onDidHide = this._onDidHide.event;\r\n        this.onDidShow = this._onDidShow.event;\r\n        this._onDetailsKeydown = new Emitter();\r\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\r\n        this.element = new ResizableHTMLElement();\r\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\r\n        this._contentWidget = new SuggestContentWidget(this, editor);\r\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\r\n        class ResizeState {\r\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\r\n                this.persistedSize = persistedSize;\r\n                this.currentSize = currentSize;\r\n                this.persistHeight = persistHeight;\r\n                this.persistWidth = persistWidth;\r\n            }\r\n        }\r\n        let state;\r\n        this._disposables.add(this.element.onDidWillResize(() => {\r\n            this._contentWidget.lockPreference();\r\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\r\n        }));\r\n        this._disposables.add(this.element.onDidResize(e => {\r\n            var _a, _b, _c, _d;\r\n            this._resize(e.dimension.width, e.dimension.height);\r\n            if (state) {\r\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\r\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\r\n            }\r\n            if (!e.done) {\r\n                return;\r\n            }\r\n            if (state) {\r\n                // only store width or height value that have changed and also\r\n                // only store changes that are above a certain threshold\r\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\r\n                const threshold = Math.round(itemHeight / 2);\r\n                let { width, height } = this.element.size;\r\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\r\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\r\n                }\r\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\r\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\r\n                }\r\n                this._persistedSize.store(new dom.Dimension(width, height));\r\n            }\r\n            // reset working state\r\n            this._contentWidget.unlockPreference();\r\n            state = undefined;\r\n        }));\r\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\r\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\r\n        const details = this._disposables.add(instantiationService.createInstance(SuggestDetailsWidget, this.editor));\r\n        details.onDidClose(this.toggleDetails, this, this._disposables);\r\n        this._details = new SuggestDetailsOverlay(details, this.editor);\r\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(117 /* EditorOption.suggest */).showIcons);\r\n        applyIconStyle();\r\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\r\n        this._disposables.add(renderer);\r\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\r\n        this._list = new List('SuggestWidget', this._listElement, {\r\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\r\n            getTemplateId: (_element) => 'suggestion'\r\n        }, [renderer], {\r\n            alwaysConsumeMouseWheel: true,\r\n            useShadows: false,\r\n            mouseSupport: false,\r\n            multipleSelectionSupport: false,\r\n            accessibilityProvider: {\r\n                getRole: () => 'option',\r\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\r\n                getWidgetRole: () => 'listbox',\r\n                getAriaLabel: (item) => {\r\n                    let label = item.textLabel;\r\n                    if (typeof item.completion.label !== 'string') {\r\n                        const { detail, description } = item.completion.label;\r\n                        if (detail && description) {\r\n                            label = nls.localize('label.full', '{0} {1}, {2}', label, detail, description);\r\n                        }\r\n                        else if (detail) {\r\n                            label = nls.localize('label.detail', '{0} {1}', label, detail);\r\n                        }\r\n                        else if (description) {\r\n                            label = nls.localize('label.desc', '{0}, {1}', label, description);\r\n                        }\r\n                    }\r\n                    if (!item.isResolved || !this._isDetailsVisible()) {\r\n                        return label;\r\n                    }\r\n                    const { documentation, detail } = item.completion;\r\n                    const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\r\n                    return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", label, docs);\r\n                },\r\n            }\r\n        });\r\n        this._list.style(getListStyles({\r\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\r\n            listInactiveFocusOutline: activeContrastBorder\r\n        }));\r\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode, suggestWidgetStatusbarMenu);\r\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(117 /* EditorOption.suggest */).showStatusBar);\r\n        applyStatusBarStyle();\r\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\r\n        this._onThemeChange(_themeService.getColorTheme());\r\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\r\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\r\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\r\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(117 /* EditorOption.suggest */)) {\r\n                applyStatusBarStyle();\r\n                applyIconStyle();\r\n            }\r\n        }));\r\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetHasFocusedSuggestion = SuggestContext.HasFocusedSuggestion.bindTo(_contextKeyService);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\r\n            this._onDetailsKeydown.fire(e);\r\n        }));\r\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._details.widget.dispose();\r\n        this._details.dispose();\r\n        this._list.dispose();\r\n        this._status.dispose();\r\n        this._disposables.dispose();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._pendingLayout.dispose();\r\n        this._pendingShowDetails.dispose();\r\n        this._showTimeout.dispose();\r\n        this._contentWidget.dispose();\r\n        this.element.dispose();\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\r\n            // Clicking inside details\r\n            this._details.widget.domNode.focus();\r\n        }\r\n        else {\r\n            // Clicking outside details and inside suggest\r\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\r\n                this.editor.focus();\r\n            }\r\n        }\r\n    }\r\n    _onCursorSelectionChanged() {\r\n        if (this._state !== 0 /* State.Hidden */) {\r\n            this._contentWidget.layout();\r\n        }\r\n    }\r\n    _onListMouseDownOrTap(e) {\r\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\r\n            return;\r\n        }\r\n        // prevent stealing browser focus from the editor\r\n        e.browserEvent.preventDefault();\r\n        e.browserEvent.stopPropagation();\r\n        this._select(e.element, e.index);\r\n    }\r\n    _onListSelection(e) {\r\n        if (e.elements.length) {\r\n            this._select(e.elements[0], e.indexes[0]);\r\n        }\r\n    }\r\n    _select(item, index) {\r\n        const completionModel = this._completionModel;\r\n        if (completionModel) {\r\n            this._onDidSelect.fire({ item, index, model: completionModel });\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    _onThemeChange(theme) {\r\n        this._details.widget.borderWidth = isHighContrast(theme.type) ? 2 : 1;\r\n    }\r\n    _onListFocus(e) {\r\n        var _a;\r\n        if (this._ignoreFocusEvents) {\r\n            return;\r\n        }\r\n        if (!e.elements.length) {\r\n            if (this._currentSuggestionDetails) {\r\n                this._currentSuggestionDetails.cancel();\r\n                this._currentSuggestionDetails = undefined;\r\n                this._focusedItem = undefined;\r\n            }\r\n            this.editor.setAriaOptions({ activeDescendant: undefined });\r\n            this._ctxSuggestWidgetHasFocusedSuggestion.set(false);\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            return;\r\n        }\r\n        this._ctxSuggestWidgetHasFocusedSuggestion.set(true);\r\n        const item = e.elements[0];\r\n        const index = e.indexes[0];\r\n        if (item !== this._focusedItem) {\r\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._currentSuggestionDetails = undefined;\r\n            this._focusedItem = item;\r\n            this._list.reveal(index);\r\n            this._currentSuggestionDetails = createCancelablePromise(async (token) => {\r\n                const loading = disposableTimeout(() => {\r\n                    if (this._isDetailsVisible()) {\r\n                        this.showDetails(true);\r\n                    }\r\n                }, 250);\r\n                const sub = token.onCancellationRequested(() => loading.dispose());\r\n                try {\r\n                    return await item.resolve(token);\r\n                }\r\n                finally {\r\n                    loading.dispose();\r\n                    sub.dispose();\r\n                }\r\n            });\r\n            this._currentSuggestionDetails.then(() => {\r\n                if (index >= this._list.length || item !== this._list.element(index)) {\r\n                    return;\r\n                }\r\n                // item can have extra information, so re-render\r\n                this._ignoreFocusEvents = true;\r\n                this._list.splice(index, 1, [item]);\r\n                this._list.setFocus([index]);\r\n                this._ignoreFocusEvents = false;\r\n                if (this._isDetailsVisible()) {\r\n                    this.showDetails(false);\r\n                }\r\n                else {\r\n                    this.element.domNode.classList.remove('docs-side');\r\n                }\r\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\r\n            }).catch(onUnexpectedError);\r\n        }\r\n        // emit an event\r\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\r\n    }\r\n    _setState(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        this._state = state;\r\n        this.element.domNode.classList.toggle('frozen', state === 4 /* State.Frozen */);\r\n        this.element.domNode.classList.remove('message');\r\n        switch (state) {\r\n            case 0 /* State.Hidden */:\r\n                dom.hide(this._messageElement, this._listElement, this._status.element);\r\n                this._details.hide(true);\r\n                this._status.hide();\r\n                this._contentWidget.hide();\r\n                this._ctxSuggestWidgetVisible.reset();\r\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\r\n                this._ctxSuggestWidgetHasFocusedSuggestion.reset();\r\n                this._showTimeout.cancel();\r\n                this.element.domNode.classList.remove('visible');\r\n                this._list.splice(0, this._list.length);\r\n                this._focusedItem = undefined;\r\n                this._cappedHeight = undefined;\r\n                this._explainMode = false;\r\n                break;\r\n            case 1 /* State.Loading */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget_1.LOADING_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                status(SuggestWidget_1.LOADING_MESSAGE);\r\n                break;\r\n            case 2 /* State.Empty */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget_1.NO_SUGGESTIONS_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                status(SuggestWidget_1.NO_SUGGESTIONS_MESSAGE);\r\n                break;\r\n            case 3 /* State.Open */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 4 /* State.Frozen */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 5 /* State.Details */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._details.show();\r\n                this._show();\r\n                break;\r\n        }\r\n    }\r\n    _show() {\r\n        this._status.show();\r\n        this._contentWidget.show();\r\n        this._layout(this._persistedSize.restore());\r\n        this._ctxSuggestWidgetVisible.set(true);\r\n        this._showTimeout.cancelAndSet(() => {\r\n            this.element.domNode.classList.add('visible');\r\n            this._onDidShow.fire(this);\r\n        }, 100);\r\n    }\r\n    showTriggered(auto, delay) {\r\n        if (this._state !== 0 /* State.Hidden */) {\r\n            return;\r\n        }\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        this._isAuto = !!auto;\r\n        if (!this._isAuto) {\r\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* State.Loading */), delay);\r\n        }\r\n    }\r\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto, noFocus) {\r\n        var _a, _b;\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._currentSuggestionDetails = undefined;\r\n        if (this._completionModel !== completionModel) {\r\n            this._completionModel = completionModel;\r\n        }\r\n        if (isFrozen && this._state !== 2 /* State.Empty */ && this._state !== 0 /* State.Hidden */) {\r\n            this._setState(4 /* State.Frozen */);\r\n            return;\r\n        }\r\n        const visibleCount = this._completionModel.items.length;\r\n        const isEmpty = visibleCount === 0;\r\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\r\n        if (isEmpty) {\r\n            this._setState(isAuto ? 0 /* State.Hidden */ : 2 /* State.Empty */);\r\n            this._completionModel = undefined;\r\n            return;\r\n        }\r\n        this._focusedItem = undefined;\r\n        // calling list.splice triggers focus event which this widget forwards. That can lead to\r\n        // suggestions being cancelled and the widget being cleared (and hidden). All this happens\r\n        // before revealing and focusing is done which means revealing and focusing will fail when\r\n        // they get run.\r\n        this._onDidFocus.pause();\r\n        this._onDidSelect.pause();\r\n        try {\r\n            this._list.splice(0, this._list.length, this._completionModel.items);\r\n            this._setState(isFrozen ? 4 /* State.Frozen */ : 3 /* State.Open */);\r\n            this._list.reveal(selectionIndex, 0);\r\n            this._list.setFocus(noFocus ? [] : [selectionIndex]);\r\n        }\r\n        finally {\r\n            this._onDidFocus.resume();\r\n            this._onDidSelect.resume();\r\n        }\r\n        this._pendingLayout.value = dom.runAtThisOrScheduleAtNextAnimationFrame(dom.getWindow(this.element.domNode), () => {\r\n            this._pendingLayout.clear();\r\n            this._layout(this.element.size);\r\n            // Reset focus border\r\n            this._details.widget.domNode.classList.remove('focused');\r\n        });\r\n    }\r\n    focusSelected() {\r\n        if (this._list.length > 0) {\r\n            this._list.setFocus([0]);\r\n        }\r\n    }\r\n    selectNextPage() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 5 /* State.Details */:\r\n                this._details.widget.pageDown();\r\n                return true;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNextPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectNext() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNext(1, true);\r\n                return true;\r\n        }\r\n    }\r\n    selectLast() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 5 /* State.Details */:\r\n                this._details.widget.scrollBottom();\r\n                return true;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusLast();\r\n                return true;\r\n        }\r\n    }\r\n    selectPreviousPage() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 5 /* State.Details */:\r\n                this._details.widget.pageUp();\r\n                return true;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPreviousPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectPrevious() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPrevious(1, true);\r\n                return false;\r\n        }\r\n    }\r\n    selectFirst() {\r\n        switch (this._state) {\r\n            case 0 /* State.Hidden */:\r\n                return false;\r\n            case 5 /* State.Details */:\r\n                this._details.widget.scrollTop();\r\n                return true;\r\n            case 1 /* State.Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusFirst();\r\n                return true;\r\n        }\r\n    }\r\n    getFocusedItem() {\r\n        if (this._state !== 0 /* State.Hidden */\r\n            && this._state !== 2 /* State.Empty */\r\n            && this._state !== 1 /* State.Loading */\r\n            && this._completionModel\r\n            && this._list.getFocus().length > 0) {\r\n            return {\r\n                item: this._list.getFocusedElements()[0],\r\n                index: this._list.getFocus()[0],\r\n                model: this._completionModel\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    toggleDetailsFocus() {\r\n        if (this._state === 5 /* State.Details */) {\r\n            this._setState(3 /* State.Open */);\r\n            this._details.widget.domNode.classList.remove('focused');\r\n        }\r\n        else if (this._state === 3 /* State.Open */ && this._isDetailsVisible()) {\r\n            this._setState(5 /* State.Details */);\r\n            this._details.widget.domNode.classList.add('focused');\r\n        }\r\n    }\r\n    toggleDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            // hide details widget\r\n            this._pendingShowDetails.clear();\r\n            this._ctxSuggestWidgetDetailsVisible.set(false);\r\n            this._setDetailsVisible(false);\r\n            this._details.hide();\r\n            this.element.domNode.classList.remove('shows-details');\r\n        }\r\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* State.Open */ || this._state === 5 /* State.Details */ || this._state === 4 /* State.Frozen */)) {\r\n            // show details widget (iff possible)\r\n            this._ctxSuggestWidgetDetailsVisible.set(true);\r\n            this._setDetailsVisible(true);\r\n            this.showDetails(false);\r\n        }\r\n    }\r\n    showDetails(loading) {\r\n        this._pendingShowDetails.value = dom.runAtThisOrScheduleAtNextAnimationFrame(dom.getWindow(this.element.domNode), () => {\r\n            this._pendingShowDetails.clear();\r\n            this._details.show();\r\n            if (loading) {\r\n                this._details.widget.renderLoading();\r\n            }\r\n            else {\r\n                this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\r\n            }\r\n            this._positionDetails();\r\n            this.editor.focus();\r\n            this.element.domNode.classList.add('shows-details');\r\n        });\r\n    }\r\n    toggleExplainMode() {\r\n        if (this._list.getFocusedElements()[0]) {\r\n            this._explainMode = !this._explainMode;\r\n            if (!this._isDetailsVisible()) {\r\n                this.toggleDetails();\r\n            }\r\n            else {\r\n                this.showDetails(false);\r\n            }\r\n        }\r\n    }\r\n    resetPersistedSize() {\r\n        this._persistedSize.reset();\r\n    }\r\n    hideWidget() {\r\n        var _a;\r\n        this._pendingLayout.clear();\r\n        this._pendingShowDetails.clear();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._setState(0 /* State.Hidden */);\r\n        this._onDidHide.fire(this);\r\n        this.element.clearSashHoverState();\r\n        // ensure that a reasonable widget height is persisted so that\r\n        // accidential \"resize-to-single-items\" cases aren't happening\r\n        const dim = this._persistedSize.restore();\r\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\r\n        if (dim && dim.height < minPersistedHeight) {\r\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\r\n        }\r\n    }\r\n    isFrozen() {\r\n        return this._state === 4 /* State.Frozen */;\r\n    }\r\n    _afterRender(position) {\r\n        if (position === null) {\r\n            if (this._isDetailsVisible()) {\r\n                this._details.hide(); //todo@jrieken soft-hide\r\n            }\r\n            return;\r\n        }\r\n        if (this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */) {\r\n            // no special positioning when widget isn't showing list\r\n            return;\r\n        }\r\n        if (this._isDetailsVisible()) {\r\n            this._details.show();\r\n        }\r\n        this._positionDetails();\r\n    }\r\n    _layout(size) {\r\n        var _a, _b, _c;\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this.editor.getDomNode()) {\r\n            // happens when running tests\r\n            return;\r\n        }\r\n        const bodyBox = dom.getClientArea(this.element.domNode.ownerDocument.body);\r\n        const info = this.getLayoutInfo();\r\n        if (!size) {\r\n            size = info.defaultSize;\r\n        }\r\n        let height = size.height;\r\n        let width = size.width;\r\n        // status bar\r\n        this._status.element.style.height = `${info.itemHeight}px`;\r\n        if (this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */) {\r\n            // showing a message only\r\n            height = info.itemHeight + info.borderHeight;\r\n            width = info.defaultSize.width / 2;\r\n            this.element.enableSashes(false, false, false, false);\r\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\r\n            this._contentWidget.setPreference(2 /* ContentWidgetPositionPreference.BELOW */);\r\n        }\r\n        else {\r\n            // showing items\r\n            // width math\r\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\r\n            if (width > maxWidth) {\r\n                width = maxWidth;\r\n            }\r\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\r\n            // height math\r\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\r\n            const minHeight = info.itemHeight + info.statusBarHeight;\r\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\r\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\r\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\r\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\r\n            const availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;\r\n            const maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);\r\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\r\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\r\n                // Restore the old (wanted) height when the current\r\n                // height is capped to fit\r\n                height = this._cappedHeight.wanted;\r\n            }\r\n            if (height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            if (height > maxHeight) {\r\n                height = maxHeight;\r\n            }\r\n            const forceRenderingAboveRequiredSpace = 150;\r\n            if (height > maxHeightBelow || (this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace)) {\r\n                this._contentWidget.setPreference(1 /* ContentWidgetPositionPreference.ABOVE */);\r\n                this.element.enableSashes(true, true, false, false);\r\n                maxHeight = maxHeightAbove;\r\n            }\r\n            else {\r\n                this._contentWidget.setPreference(2 /* ContentWidgetPositionPreference.BELOW */);\r\n                this.element.enableSashes(false, true, true, false);\r\n                maxHeight = maxHeightBelow;\r\n            }\r\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\r\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\r\n            this.element.minSize = new dom.Dimension(220, minHeight);\r\n            // Know when the height was capped to fit and remember\r\n            // the wanted height for later. This is required when going\r\n            // left to widen suggestions.\r\n            this._cappedHeight = height === fullHeight\r\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\r\n                : undefined;\r\n        }\r\n        this._resize(width, height);\r\n    }\r\n    _resize(width, height) {\r\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\r\n        width = Math.min(maxWidth, width);\r\n        height = Math.min(maxHeight, height);\r\n        const { statusBarHeight } = this.getLayoutInfo();\r\n        this._list.layout(height - statusBarHeight, width);\r\n        this._listElement.style.height = `${height - statusBarHeight}px`;\r\n        this.element.layout(height, width);\r\n        this._contentWidget.layout();\r\n        this._positionDetails();\r\n    }\r\n    _positionDetails() {\r\n        var _a;\r\n        if (this._isDetailsVisible()) {\r\n            this._details.placeAtAnchor(this.element.domNode, ((_a = this._contentWidget.getPosition()) === null || _a === void 0 ? void 0 : _a.preference[0]) === 2 /* ContentWidgetPositionPreference.BELOW */);\r\n        }\r\n    }\r\n    getLayoutInfo() {\r\n        const fontInfo = this.editor.getOption(50 /* EditorOption.fontInfo */);\r\n        const itemHeight = clamp(this.editor.getOption(119 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\r\n        const statusBarHeight = !this.editor.getOption(117 /* EditorOption.suggest */).showStatusBar || this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */ ? 0 : itemHeight;\r\n        const borderWidth = this._details.widget.borderWidth;\r\n        const borderHeight = 2 * borderWidth;\r\n        return {\r\n            itemHeight,\r\n            statusBarHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14,\r\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\r\n        };\r\n    }\r\n    _isDetailsVisible() {\r\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* StorageScope.PROFILE */, false);\r\n    }\r\n    _setDetailsVisible(value) {\r\n        this._storageService.store('expandSuggestionDocs', value, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\r\n    }\r\n    forceRenderingAbove() {\r\n        if (!this._forceRenderingAbove) {\r\n            this._forceRenderingAbove = true;\r\n            this._layout(this._persistedSize.restore());\r\n        }\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this._forceRenderingAbove = false;\r\n    }\r\n};\r\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\r\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\r\nSuggestWidget = SuggestWidget_1 = __decorate([\r\n    __param(1, IStorageService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IInstantiationService)\r\n], SuggestWidget);\r\nexport { SuggestWidget };\r\nexport class SuggestContentWidget {\r\n    constructor(_widget, _editor) {\r\n        this._widget = _widget;\r\n        this._editor = _editor;\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._preferenceLocked = false;\r\n        this._added = false;\r\n        this._hidden = false;\r\n    }\r\n    dispose() {\r\n        if (this._added) {\r\n            this._added = false;\r\n            this._editor.removeContentWidget(this);\r\n        }\r\n    }\r\n    getId() {\r\n        return 'editor.widget.suggestWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._widget.element.domNode;\r\n    }\r\n    show() {\r\n        this._hidden = false;\r\n        if (!this._added) {\r\n            this._added = true;\r\n            this._editor.addContentWidget(this);\r\n        }\r\n    }\r\n    hide() {\r\n        if (!this._hidden) {\r\n            this._hidden = true;\r\n            this.layout();\r\n        }\r\n    }\r\n    layout() {\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this._hidden || !this._position || !this._preference) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [this._preference]\r\n        };\r\n    }\r\n    beforeRender() {\r\n        const { height, width } = this._widget.element.size;\r\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\r\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\r\n    }\r\n    afterRender(position) {\r\n        this._widget._afterRender(position);\r\n    }\r\n    setPreference(preference) {\r\n        if (!this._preferenceLocked) {\r\n            this._preference = preference;\r\n        }\r\n    }\r\n    lockPreference() {\r\n        this._preferenceLocked = true;\r\n    }\r\n    unlockPreference() {\r\n        this._preferenceLocked = false;\r\n    }\r\n    setPosition(position) {\r\n        this._position = position;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IMenuService, MenuItemAction } from '../../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nclass StatusBarViewItem extends MenuEntryActionViewItem {\r\n    updateLabel() {\r\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\r\n        if (!kb) {\r\n            return super.updateLabel();\r\n        }\r\n        if (this.label) {\r\n            this.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\r\n        }\r\n    }\r\n    static symbolPrintEnter(kb) {\r\n        var _a;\r\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\r\n    }\r\n}\r\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\r\n    constructor(container, _menuId, instantiationService, _menuService, _contextKeyService) {\r\n        this._menuId = _menuId;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuDisposables = new DisposableStore();\r\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\r\n        const actionViewItemProvider = (action => {\r\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\r\n        });\r\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._leftActions.domNode.classList.add('left');\r\n        this._rightActions.domNode.classList.add('right');\r\n    }\r\n    dispose() {\r\n        this._menuDisposables.dispose();\r\n        this._leftActions.dispose();\r\n        this._rightActions.dispose();\r\n        this.element.remove();\r\n    }\r\n    show() {\r\n        const menu = this._menuService.createMenu(this._menuId, this._contextKeyService);\r\n        const renderMenu = () => {\r\n            const left = [];\r\n            const right = [];\r\n            for (const [group, actions] of menu.getActions()) {\r\n                if (group === 'left') {\r\n                    left.push(...actions);\r\n                }\r\n                else {\r\n                    right.push(...actions);\r\n                }\r\n            }\r\n            this._leftActions.clear();\r\n            this._leftActions.push(left);\r\n            this._rightActions.clear();\r\n            this._rightActions.push(right);\r\n        };\r\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\r\n        this._menuDisposables.add(menu);\r\n    }\r\n    hide() {\r\n        this._menuDisposables.clear();\r\n    }\r\n};\r\nSuggestWidgetStatus = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, IMenuService),\r\n    __param(4, IContextKeyService)\r\n], SuggestWidgetStatus);\r\nexport { SuggestWidgetStatus };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Codicon } from '../../../../base/common/codicons.js';\r\nimport { ThemeIcon } from '../../../../base/common/themables.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\r\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nexport function canExpandCompletionItem(item) {\r\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\r\n}\r\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\r\n    constructor(_editor, instaService) {\r\n        this._editor = _editor;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        this._onDidChangeContents = new Emitter();\r\n        this.onDidChangeContents = this._onDidChangeContents.event;\r\n        this._disposables = new DisposableStore();\r\n        this._renderDisposeable = new DisposableStore();\r\n        this._borderWidth = 1;\r\n        this._size = new dom.Dimension(330, 0);\r\n        this.domNode = dom.$('.suggest-details');\r\n        this.domNode.classList.add('no-docs');\r\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\r\n        this._body = dom.$('.body');\r\n        this._scrollbar = new DomScrollableElement(this._body, {\r\n            alwaysConsumeMouseWheel: true,\r\n        });\r\n        dom.append(this.domNode, this._scrollbar.getDomNode());\r\n        this._disposables.add(this._scrollbar);\r\n        this._header = dom.append(this._body, dom.$('.header'));\r\n        this._close = dom.append(this._header, dom.$('span' + ThemeIcon.asCSSSelector(Codicon.close)));\r\n        this._close.title = nls.localize('details.close', \"Close\");\r\n        this._type = dom.append(this._header, dom.$('p.type'));\r\n        this._docs = dom.append(this._body, dom.$('p.docs'));\r\n        this._configureFont();\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\r\n                this._configureFont();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._renderDisposeable.dispose();\r\n    }\r\n    _configureFont() {\r\n        const options = this._editor.getOptions();\r\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\r\n        const fontFamily = fontInfo.getMassagedFontFamily();\r\n        const fontSize = options.get(118 /* EditorOption.suggestFontSize */) || fontInfo.fontSize;\r\n        const lineHeight = options.get(119 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight;\r\n        const fontWeight = fontInfo.fontWeight;\r\n        const fontSizePx = `${fontSize}px`;\r\n        const lineHeightPx = `${lineHeight}px`;\r\n        this.domNode.style.fontSize = fontSizePx;\r\n        this.domNode.style.lineHeight = `${lineHeight / fontSize}`;\r\n        this.domNode.style.fontWeight = fontWeight;\r\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n        this._type.style.fontFamily = fontFamily;\r\n        this._close.style.height = lineHeightPx;\r\n        this._close.style.width = lineHeightPx;\r\n    }\r\n    getLayoutInfo() {\r\n        const lineHeight = this._editor.getOption(119 /* EditorOption.suggestLineHeight */) || this._editor.getOption(50 /* EditorOption.fontInfo */).lineHeight;\r\n        const borderWidth = this._borderWidth;\r\n        const borderHeight = borderWidth * 2;\r\n        return {\r\n            lineHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14\r\n        };\r\n    }\r\n    renderLoading() {\r\n        this._type.textContent = nls.localize('loading', \"Loading...\");\r\n        this._docs.textContent = '';\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    renderItem(item, explainMode) {\r\n        var _a, _b;\r\n        this._renderDisposeable.clear();\r\n        let { detail, documentation } = item.completion;\r\n        if (explainMode) {\r\n            let md = '';\r\n            md += `score: ${item.score[0]}\\n`;\r\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\r\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\r\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\r\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\r\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\r\n            documentation = new MarkdownString().appendCodeblock('empty', md);\r\n            detail = `Provider: ${item.provider._debugDisplayName}`;\r\n        }\r\n        if (!explainMode && !canExpandCompletionItem(item)) {\r\n            this.clearContents();\r\n            return;\r\n        }\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        // --- details\r\n        if (detail) {\r\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}…` : detail;\r\n            this._type.textContent = cappedDetail;\r\n            this._type.title = cappedDetail;\r\n            dom.show(this._type);\r\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\r\n        }\r\n        else {\r\n            dom.clearNode(this._type);\r\n            this._type.title = '';\r\n            dom.hide(this._type);\r\n            this.domNode.classList.add('no-type');\r\n        }\r\n        // --- documentation\r\n        dom.clearNode(this._docs);\r\n        if (typeof documentation === 'string') {\r\n            this._docs.classList.remove('markdown-docs');\r\n            this._docs.textContent = documentation;\r\n        }\r\n        else if (documentation) {\r\n            this._docs.classList.add('markdown-docs');\r\n            dom.clearNode(this._docs);\r\n            const renderedContents = this._markdownRenderer.render(documentation);\r\n            this._docs.appendChild(renderedContents.element);\r\n            this._renderDisposeable.add(renderedContents);\r\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\r\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n                this._onDidChangeContents.fire(this);\r\n            }));\r\n        }\r\n        this.domNode.style.userSelect = 'text';\r\n        this.domNode.tabIndex = -1;\r\n        this._close.onmousedown = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        this._close.onclick = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._onDidClose.fire();\r\n        };\r\n        this._body.scrollTop = 0;\r\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    clearContents() {\r\n        this.domNode.classList.add('no-docs');\r\n        this._type.textContent = '';\r\n        this._docs.textContent = '';\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    layout(width, height) {\r\n        const newSize = new dom.Dimension(width, height);\r\n        if (!dom.Dimension.equals(newSize, this._size)) {\r\n            this._size = newSize;\r\n            dom.size(this.domNode, width, height);\r\n        }\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n    scrollDown(much = 8) {\r\n        this._body.scrollTop += much;\r\n    }\r\n    scrollUp(much = 8) {\r\n        this._body.scrollTop -= much;\r\n    }\r\n    scrollTop() {\r\n        this._body.scrollTop = 0;\r\n    }\r\n    scrollBottom() {\r\n        this._body.scrollTop = this._body.scrollHeight;\r\n    }\r\n    pageDown() {\r\n        this.scrollDown(80);\r\n    }\r\n    pageUp() {\r\n        this.scrollUp(80);\r\n    }\r\n    set borderWidth(width) {\r\n        this._borderWidth = width;\r\n    }\r\n    get borderWidth() {\r\n        return this._borderWidth;\r\n    }\r\n};\r\nSuggestDetailsWidget = __decorate([\r\n    __param(1, IInstantiationService)\r\n], SuggestDetailsWidget);\r\nexport { SuggestDetailsWidget };\r\nexport class SuggestDetailsOverlay {\r\n    constructor(widget, _editor) {\r\n        this.widget = widget;\r\n        this._editor = _editor;\r\n        this._disposables = new DisposableStore();\r\n        this._added = false;\r\n        this._preferAlignAtTop = true;\r\n        this._resizable = new ResizableHTMLElement();\r\n        this._resizable.domNode.classList.add('suggest-details-container');\r\n        this._resizable.domNode.appendChild(widget.domNode);\r\n        this._resizable.enableSashes(false, true, true, false);\r\n        let topLeftNow;\r\n        let sizeNow;\r\n        let deltaTop = 0;\r\n        let deltaLeft = 0;\r\n        this._disposables.add(this._resizable.onDidWillResize(() => {\r\n            topLeftNow = this._topLeft;\r\n            sizeNow = this._resizable.size;\r\n        }));\r\n        this._disposables.add(this._resizable.onDidResize(e => {\r\n            if (topLeftNow && sizeNow) {\r\n                this.widget.layout(e.dimension.width, e.dimension.height);\r\n                let updateTopLeft = false;\r\n                if (e.west) {\r\n                    deltaLeft = sizeNow.width - e.dimension.width;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (e.north) {\r\n                    deltaTop = sizeNow.height - e.dimension.height;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (updateTopLeft) {\r\n                    this._applyTopLeft({\r\n                        top: topLeftNow.top + deltaTop,\r\n                        left: topLeftNow.left + deltaLeft,\r\n                    });\r\n                }\r\n            }\r\n            if (e.done) {\r\n                topLeftNow = undefined;\r\n                sizeNow = undefined;\r\n                deltaTop = 0;\r\n                deltaLeft = 0;\r\n                this._userSize = e.dimension;\r\n            }\r\n        }));\r\n        this._disposables.add(this.widget.onDidChangeContents(() => {\r\n            var _a;\r\n            if (this._anchorBox) {\r\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, this._preferAlignAtTop);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._resizable.dispose();\r\n        this._disposables.dispose();\r\n        this.hide();\r\n    }\r\n    getId() {\r\n        return 'suggest.details';\r\n    }\r\n    getDomNode() {\r\n        return this._resizable.domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    show() {\r\n        if (!this._added) {\r\n            this._editor.addOverlayWidget(this);\r\n            this.getDomNode().style.position = 'fixed';\r\n            this._added = true;\r\n        }\r\n    }\r\n    hide(sessionEnded = false) {\r\n        this._resizable.clearSashHoverState();\r\n        if (this._added) {\r\n            this._editor.removeOverlayWidget(this);\r\n            this._added = false;\r\n            this._anchorBox = undefined;\r\n            this._topLeft = undefined;\r\n        }\r\n        if (sessionEnded) {\r\n            this._userSize = undefined;\r\n            this.widget.clearContents();\r\n        }\r\n    }\r\n    placeAtAnchor(anchor, preferAlignAtTop) {\r\n        var _a;\r\n        const anchorBox = anchor.getBoundingClientRect();\r\n        this._anchorBox = anchorBox;\r\n        this._preferAlignAtTop = preferAlignAtTop;\r\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, preferAlignAtTop);\r\n    }\r\n    _placeAtAnchor(anchorBox, size, preferAlignAtTop) {\r\n        var _a;\r\n        const bodyBox = dom.getClientArea(this.getDomNode().ownerDocument.body);\r\n        const info = this.widget.getLayoutInfo();\r\n        const defaultMinSize = new dom.Dimension(220, 2 * info.lineHeight);\r\n        const defaultTop = anchorBox.top;\r\n        // EAST\r\n        const eastPlacement = (function () {\r\n            const width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\r\n            const left = -info.borderWidth + anchorBox.left + anchorBox.width;\r\n            const maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n            return { top: defaultTop, left, fit: width - size.width, maxSizeTop, maxSizeBottom, minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width)) };\r\n        })();\r\n        // WEST\r\n        const westPlacement = (function () {\r\n            const width = anchorBox.left - info.borderWidth - info.horizontalPadding;\r\n            const left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\r\n            const maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n            return { top: defaultTop, left, fit: width - size.width, maxSizeTop, maxSizeBottom, minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width)) };\r\n        })();\r\n        // SOUTH\r\n        const southPacement = (function () {\r\n            const left = anchorBox.left;\r\n            const top = -info.borderWidth + anchorBox.top + anchorBox.height;\r\n            const maxSizeBottom = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\r\n            return { top, left, fit: maxSizeBottom.height - size.height, maxSizeBottom, maxSizeTop: maxSizeBottom, minSize: defaultMinSize.with(maxSizeBottom.width) };\r\n        })();\r\n        // take first placement that fits or the first with \"least bad\" fit\r\n        const placements = [eastPlacement, westPlacement, southPacement];\r\n        const placement = (_a = placements.find(p => p.fit >= 0)) !== null && _a !== void 0 ? _a : placements.sort((a, b) => b.fit - a.fit)[0];\r\n        // top/bottom placement\r\n        const bottom = anchorBox.top + anchorBox.height - info.borderHeight;\r\n        let alignAtTop;\r\n        let height = size.height;\r\n        const maxHeight = Math.max(placement.maxSizeTop.height, placement.maxSizeBottom.height);\r\n        if (height > maxHeight) {\r\n            height = maxHeight;\r\n        }\r\n        let maxSize;\r\n        if (preferAlignAtTop) {\r\n            if (height <= placement.maxSizeTop.height) {\r\n                alignAtTop = true;\r\n                maxSize = placement.maxSizeTop;\r\n            }\r\n            else {\r\n                alignAtTop = false;\r\n                maxSize = placement.maxSizeBottom;\r\n            }\r\n        }\r\n        else {\r\n            if (height <= placement.maxSizeBottom.height) {\r\n                alignAtTop = false;\r\n                maxSize = placement.maxSizeBottom;\r\n            }\r\n            else {\r\n                alignAtTop = true;\r\n                maxSize = placement.maxSizeTop;\r\n            }\r\n        }\r\n        this._applyTopLeft({ left: placement.left, top: alignAtTop ? placement.top : bottom - height });\r\n        this.getDomNode().style.position = 'fixed';\r\n        this._resizable.enableSashes(!alignAtTop, placement === eastPlacement, alignAtTop, placement !== eastPlacement);\r\n        this._resizable.minSize = placement.minSize;\r\n        this._resizable.maxSize = maxSize;\r\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\r\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\r\n    }\r\n    _applyTopLeft(topLeft) {\r\n        this._topLeft = topLeft;\r\n        this.getDomNode().style.left = `${this._topLeft.left}px`;\r\n        this.getDomNode().style.top = `${this._topLeft.top}px`;\r\n    }\r\n}\r\n", "//#endregion\r\n//#region Utilities\r\nexport var FileKind;\r\n(function (FileKind) {\r\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\r\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\r\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\r\n})(FileKind || (FileKind = {}));\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { DataUri } from '../../../base/common/resources.js';\r\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nconst fileIconDirectoryRegex = /(?:\\/|^)(?:([^\\/]+)\\/)?([^\\/]+)$/;\r\nexport function getIconClasses(modelService, languageService, resource, fileKind) {\r\n    // we always set these base classes even if we do not have a path\r\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\r\n    if (resource) {\r\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\r\n        let name;\r\n        if (resource.scheme === Schemas.data) {\r\n            const metadata = DataUri.parseMetaData(resource);\r\n            name = metadata.get(DataUri.META_DATA_LABEL);\r\n        }\r\n        else {\r\n            const match = resource.path.match(fileIconDirectoryRegex);\r\n            if (match) {\r\n                name = cssEscape(match[2].toLowerCase());\r\n                if (match[1]) {\r\n                    classes.push(`${cssEscape(match[1].toLowerCase())}-name-dir-icon`); // parent directory\r\n                }\r\n            }\r\n            else {\r\n                name = cssEscape(resource.authority.toLowerCase());\r\n            }\r\n        }\r\n        // Root Folders\r\n        if (fileKind === FileKind.ROOT_FOLDER) {\r\n            classes.push(`${name}-root-name-folder-icon`);\r\n        }\r\n        // Folders\r\n        else if (fileKind === FileKind.FOLDER) {\r\n            classes.push(`${name}-name-folder-icon`);\r\n        }\r\n        // Files\r\n        else {\r\n            // Name & Extension(s)\r\n            if (name) {\r\n                classes.push(`${name}-name-file-icon`);\r\n                classes.push(`name-file-icon`); // extra segment to increase file-name score\r\n                // Avoid doing an explosive combination of extensions for very long filenames\r\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\r\n                // https://github.com/microsoft/vscode/issues/116199\r\n                if (name.length <= 255) {\r\n                    const dotSegments = name.split('.');\r\n                    for (let i = 1; i < dotSegments.length; i++) {\r\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\r\n                    }\r\n                }\r\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\r\n            }\r\n            // Detected Mode\r\n            const detectedLanguageId = detectLanguageId(modelService, languageService, resource);\r\n            if (detectedLanguageId) {\r\n                classes.push(`${cssEscape(detectedLanguageId)}-lang-file-icon`);\r\n            }\r\n        }\r\n    }\r\n    return classes;\r\n}\r\nfunction detectLanguageId(modelService, languageService, resource) {\r\n    if (!resource) {\r\n        return null; // we need a resource at least\r\n    }\r\n    let languageId = null;\r\n    // Data URI: check for encoded metadata\r\n    if (resource.scheme === Schemas.data) {\r\n        const metadata = DataUri.parseMetaData(resource);\r\n        const mime = metadata.get(DataUri.META_DATA_MIME);\r\n        if (mime) {\r\n            languageId = languageService.getLanguageIdByMimeType(mime);\r\n        }\r\n    }\r\n    // Any other URI: check for model if existing\r\n    else {\r\n        const model = modelService.getModel(resource);\r\n        if (model) {\r\n            languageId = model.getLanguageId();\r\n        }\r\n    }\r\n    // only take if the language id is specific (aka no just plain text)\r\n    if (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\r\n        return languageId;\r\n    }\r\n    // otherwise fallback to path based detection\r\n    return languageService.guessLanguageIdByFilepathOrFirstLine(resource);\r\n}\r\nfunction cssEscape(str) {\r\n    return str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport { $, append, hide, show } from '../../../../base/browser/dom.js';\r\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { Codicon } from '../../../../base/common/codicons.js';\r\nimport { ThemeIcon } from '../../../../base/common/themables.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport { createMatches } from '../../../../base/common/filters.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { URI } from '../../../../base/common/uri.js';\r\nimport { CompletionItemKinds } from '../../../common/languages.js';\r\nimport { getIconClasses } from '../../../common/services/getIconClasses.js';\r\nimport { IModelService } from '../../../common/services/model.js';\r\nimport { ILanguageService } from '../../../common/languages/language.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { FileKind } from '../../../../platform/files/common/files.js';\r\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\r\nexport function getAriaId(index) {\r\n    return `suggest-aria-id:${index}`;\r\n}\r\nconst suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\r\nconst _completionItemColor = new (_a = class ColorExtractor {\r\n        extract(item, out) {\r\n            if (item.textLabel.match(_a._regexStrict)) {\r\n                out[0] = item.textLabel;\r\n                return true;\r\n            }\r\n            if (item.completion.detail && item.completion.detail.match(_a._regexStrict)) {\r\n                out[0] = item.completion.detail;\r\n                return true;\r\n            }\r\n            if (typeof item.completion.documentation === 'string') {\r\n                const match = _a._regexRelaxed.exec(item.completion.documentation);\r\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\r\n                    out[0] = match[0];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\r\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\r\n    _a);\r\nlet ItemRenderer = class ItemRenderer {\r\n    constructor(_editor, _modelService, _languageService, _themeService) {\r\n        this._editor = _editor;\r\n        this._modelService = _modelService;\r\n        this._languageService = _languageService;\r\n        this._themeService = _themeService;\r\n        this._onDidToggleDetails = new Emitter();\r\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\r\n        this.templateId = 'suggestion';\r\n    }\r\n    dispose() {\r\n        this._onDidToggleDetails.dispose();\r\n    }\r\n    renderTemplate(container) {\r\n        const disposables = new DisposableStore();\r\n        const root = container;\r\n        root.classList.add('show-file-icons');\r\n        const icon = append(container, $('.icon'));\r\n        const colorspan = append(icon, $('span.colorspan'));\r\n        const text = append(container, $('.contents'));\r\n        const main = append(text, $('.main'));\r\n        const iconContainer = append(main, $('.icon-label.codicon'));\r\n        const left = append(main, $('span.left'));\r\n        const right = append(main, $('span.right'));\r\n        const iconLabel = new IconLabel(left, { supportHighlights: true, supportIcons: true });\r\n        disposables.add(iconLabel);\r\n        const parametersLabel = append(left, $('span.signature-label'));\r\n        const qualifierLabel = append(left, $('span.qualifier-label'));\r\n        const detailsLabel = append(right, $('span.details-label'));\r\n        const readMore = append(right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\r\n        readMore.title = nls.localize('readMore', \"Read More\");\r\n        const configureFont = () => {\r\n            const options = this._editor.getOptions();\r\n            const fontInfo = options.get(50 /* EditorOption.fontInfo */);\r\n            const fontFamily = fontInfo.getMassagedFontFamily();\r\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n            const fontSize = options.get(118 /* EditorOption.suggestFontSize */) || fontInfo.fontSize;\r\n            const lineHeight = options.get(119 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight;\r\n            const fontWeight = fontInfo.fontWeight;\r\n            const letterSpacing = fontInfo.letterSpacing;\r\n            const fontSizePx = `${fontSize}px`;\r\n            const lineHeightPx = `${lineHeight}px`;\r\n            const letterSpacingPx = `${letterSpacing}px`;\r\n            root.style.fontSize = fontSizePx;\r\n            root.style.fontWeight = fontWeight;\r\n            root.style.letterSpacing = letterSpacingPx;\r\n            main.style.fontFamily = fontFamily;\r\n            main.style.fontFeatureSettings = fontFeatureSettings;\r\n            main.style.lineHeight = lineHeightPx;\r\n            icon.style.height = lineHeightPx;\r\n            icon.style.width = lineHeightPx;\r\n            readMore.style.height = lineHeightPx;\r\n            readMore.style.width = lineHeightPx;\r\n        };\r\n        configureFont();\r\n        disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(50 /* EditorOption.fontInfo */) || e.hasChanged(118 /* EditorOption.suggestFontSize */) || e.hasChanged(119 /* EditorOption.suggestLineHeight */)) {\r\n                configureFont();\r\n            }\r\n        }));\r\n        return { root, left, right, icon, colorspan, iconLabel, iconContainer, parametersLabel, qualifierLabel, detailsLabel, readMore, disposables };\r\n    }\r\n    renderElement(element, index, data) {\r\n        const { completion } = element;\r\n        data.root.id = getAriaId(index);\r\n        data.colorspan.style.backgroundColor = '';\r\n        const labelOptions = {\r\n            labelEscapeNewLines: true,\r\n            matches: createMatches(element.score)\r\n        };\r\n        const color = [];\r\n        if (completion.kind === 19 /* CompletionItemKind.Color */ && _completionItemColor.extract(element, color)) {\r\n            // special logic for 'color' completion items\r\n            data.icon.className = 'icon customcolor';\r\n            data.iconContainer.className = 'icon hide';\r\n            data.colorspan.style.backgroundColor = color[0];\r\n        }\r\n        else if (completion.kind === 20 /* CompletionItemKind.File */ && this._themeService.getFileIconTheme().hasFileIcons) {\r\n            // special logic for 'file' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            const labelClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\r\n            const detailClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\r\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\r\n        }\r\n        else if (completion.kind === 23 /* CompletionItemKind.Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\r\n            // special logic for 'folder' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            labelOptions.extraClasses = [\r\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\r\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\r\n            ].flat();\r\n        }\r\n        else {\r\n            // normal icon\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = '';\r\n            data.iconContainer.classList.add('suggest-icon', ...ThemeIcon.asClassNameArray(CompletionItemKinds.toIcon(completion.kind)));\r\n        }\r\n        if (completion.tags && completion.tags.indexOf(1 /* CompletionItemTag.Deprecated */) >= 0) {\r\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\r\n            labelOptions.matches = [];\r\n        }\r\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\r\n        if (typeof completion.label === 'string') {\r\n            data.parametersLabel.textContent = '';\r\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\r\n            data.root.classList.add('string-label');\r\n        }\r\n        else {\r\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\r\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\r\n            data.root.classList.remove('string-label');\r\n        }\r\n        if (this._editor.getOption(117 /* EditorOption.suggest */).showInlineDetails) {\r\n            show(data.detailsLabel);\r\n        }\r\n        else {\r\n            hide(data.detailsLabel);\r\n        }\r\n        if (canExpandCompletionItem(element)) {\r\n            data.right.classList.add('can-expand-details');\r\n            show(data.readMore);\r\n            data.readMore.onmousedown = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            };\r\n            data.readMore.onclick = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                this._onDidToggleDetails.fire();\r\n            };\r\n        }\r\n        else {\r\n            data.right.classList.remove('can-expand-details');\r\n            hide(data.readMore);\r\n            data.readMore.onmousedown = null;\r\n            data.readMore.onclick = null;\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.disposables.dispose();\r\n    }\r\n};\r\nItemRenderer = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, ILanguageService),\r\n    __param(3, IThemeService)\r\n], ItemRenderer);\r\nexport { ItemRenderer };\r\nfunction stripNewLines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar SuggestController_1;\r\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\r\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\r\nimport { Emitter, Event } from '../../../../base/common/event.js';\r\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\r\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\r\nimport { assertType, isObject } from '../../../../base/common/types.js';\r\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../../common/core/editOperation.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\r\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { ILogService } from '../../../../platform/log/common/log.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nimport { basename, extname } from '../../../../base/common/resources.js';\r\nimport { hash } from '../../../../base/common/hash.js';\r\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nconst _sticky = false;\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = SuggestController_1 = class SuggestController {\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController_1.ID);\r\n    }\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._telemetryService = _telemetryService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this._selectors = new PriorityRegistry(s => s.priority);\r\n        this._onWillInsertSuggestItem = new Emitter();\r\n        this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // default selector\r\n        this._selectors.register({\r\n            priority: 0,\r\n            select: (model, pos, items) => this._memoryService.select(model, pos, items)\r\n        });\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode);\r\n        this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(117 /* EditorOption.suggest */).insertMode)));\r\n        this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* State.Auto */\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) ||\r\n                    (platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeyCodeChord().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (e.triggerOptions.shy) {\r\n                return;\r\n            }\r\n            let index = -1;\r\n            for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\r\n                index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                if (index !== -1) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index === -1) {\r\n                index = 0;\r\n            }\r\n            let noFocus = false;\r\n            if (e.triggerOptions.auto) {\r\n                // don't \"focus\" item when configured to do\r\n                const options = this.editor.getOption(117 /* EditorOption.suggest */);\r\n                if (options.selectionMode === 'never' || options.selectionMode === 'always') {\r\n                    // simple: always or never\r\n                    noFocus = options.selectionMode === 'never';\r\n                }\r\n                else if (options.selectionMode === 'whenTriggerCharacter') {\r\n                    // on with trigger character\r\n                    noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\r\n                }\r\n                else if (options.selectionMode === 'whenQuickSuggestion') {\r\n                    // without trigger character or when refiltering\r\n                    noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\r\n                }\r\n            }\r\n            this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        const updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n        this._onWillInsertSuggestItem.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const snippetController = SnippetController2.get(this.editor);\r\n        if (!snippetController) {\r\n            return;\r\n        }\r\n        this._onWillInsertSuggestItem.fire({ item: event.item });\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        const isResolved = item.isResolved;\r\n        // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\r\n        let _commandExectionDuration = -1;\r\n        let _additionalEditsAppliedAsync = -1;\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // cancel -> stops all listening and closes widget\r\n            this.model.cancel();\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch();\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (const change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            const oldFlags = flags;\r\n            flags |= 2 /* InsertFlags.NoAfterUndoStop */;\r\n            let didType = false;\r\n            const typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return undefined;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\r\n            }).finally(() => {\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        // cancel -> stops all listening and closes widget\r\n        this.model.cancel();\r\n        snippetController.insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (item.completion.command) {\r\n            if (item.completion.command.id === TriggerSuggestAction.id) {\r\n                // retigger\r\n                this.model.trigger({ auto: true, retrigger: true });\r\n            }\r\n            else {\r\n                // exec command, done\r\n                const sw = new StopWatch();\r\n                tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\r\n                    if (item.completion.extensionId) {\r\n                        onUnexpectedExternalError(e);\r\n                    }\r\n                    else {\r\n                        onUnexpectedError(e);\r\n                    }\r\n                }).finally(() => {\r\n                    _commandExectionDuration = sw.elapsed();\r\n                }));\r\n            }\r\n        }\r\n        if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\r\n        var _a, _b, _c;\r\n        if (Math.floor(Math.random() * 100) === 0) {\r\n            // throttle telemetry event because accepting completions happens a lot\r\n            return;\r\n        }\r\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\r\n            extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\r\n            providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\r\n            kind: item.completion.kind,\r\n            basenameHash: hash(basename(model.uri)).toString(16),\r\n            languageId: model.getLanguageId(),\r\n            fileExtension: extname(model.uri),\r\n            resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\r\n            resolveDuration: item.resolveDuration,\r\n            commandDuration: commandExectionDuration,\r\n            additionalEditsAsync: additionalEditsAppliedAsync\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(117 /* EditorOption.suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem(item) {\r\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\r\n            const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom, auto, noFilter) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({\r\n                auto: auto !== null && auto !== void 0 ? auto : false,\r\n                completionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\r\n            });\r\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            const listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    focusSuggestion() {\r\n        this.widget.value.focusSelected();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n    forceRenderingAbove() {\r\n        this.widget.value.forceRenderingAbove();\r\n    }\r\n    stopForceRenderingAbove() {\r\n        if (!this.widget.isInitialized) {\r\n            // This method has no effect if the widget is not initialized yet.\r\n            return;\r\n        }\r\n        this.widget.value.stopForceRenderingAbove();\r\n    }\r\n    registerSelector(selector) {\r\n        return this._selectors.register(selector);\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = SuggestController_1 = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService),\r\n    __param(6, ITelemetryService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nclass PriorityRegistry {\r\n    constructor(prioritySelector) {\r\n        this.prioritySelector = prioritySelector;\r\n        this._items = new Array();\r\n    }\r\n    register(value) {\r\n        if (this._items.indexOf(value) !== -1) {\r\n            throw new Error('Value is already registered');\r\n        }\r\n        this._items.push(value);\r\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\r\n        return {\r\n            dispose: () => {\r\n                const idx = this._items.indexOf(value);\r\n                if (idx >= 0) {\r\n                    this._items.splice(idx, 1);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    get itemsOrderedByPriorityDesc() {\r\n        return this._items;\r\n    }\r\n}\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\r\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\r\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] },\r\n                weight: 100 /* KeybindingWeight.EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, args) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        let auto;\r\n        if (args && typeof args === 'object') {\r\n            if (args.auto === true) {\r\n                auto = true;\r\n            }\r\n        }\r\n        controller.triggerSuggest(undefined, auto, undefined);\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    },\r\n    kbOpts: [{\r\n            // normal tab\r\n            primary: 2 /* KeyCode.Tab */,\r\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n            weight,\r\n        }, {\r\n            // accept on enter has special rules\r\n            primary: 3 /* KeyCode.Enter */,\r\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n            weight,\r\n        }],\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            title: nls.localize('accept.insert', \"Insert\"),\r\n            group: 'left',\r\n            order: 1,\r\n            when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            title: nls.localize('accept.insert', \"Insert\"),\r\n            group: 'left',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            title: nls.localize('accept.replace', \"Replace\"),\r\n            group: 'left',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\r\n        secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* KeyCode.Escape */,\r\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* KeyCode.DownArrow */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\r\n        mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* KeyCode.PageDown */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* KeyCode.UpArrow */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\r\n        mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* KeyCode.PageUp */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'focusSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\r\n    handler: x => x.focusSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\r\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\r\n    },\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'focusAndAcceptSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\r\n    handler: c => {\r\n        c.focusSuggestion();\r\n        c.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\r\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\r\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* KeybindingWeight.EditorContrib */,\r\n        primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\r\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* KeyCode.Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* KeyCode.Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        var _a;\r\n        (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\r\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\r\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\r\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\r\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\r\nimport { SingleTextEdit } from './singleTextEdit.js';\r\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\r\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\r\nexport class SuggestWidgetAdaptor extends Disposable {\r\n    get selectedItem() {\r\n        return this._selectedItem;\r\n    }\r\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\r\n        super();\r\n        this.editor = editor;\r\n        this.suggestControllerPreselector = suggestControllerPreselector;\r\n        this.checkModelVersion = checkModelVersion;\r\n        this.onWillAccept = onWillAccept;\r\n        this.isSuggestWidgetVisible = false;\r\n        this.isShiftKeyPressed = false;\r\n        this._isActive = false;\r\n        this._currentSuggestItemInfo = undefined;\r\n        this._selectedItem = observableValue(this, undefined);\r\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\r\n        this._register(editor.onKeyDown(e => {\r\n            if (e.shiftKey && !this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = true;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        this._register(editor.onKeyUp(e => {\r\n            if (e.shiftKey && this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = false;\r\n                this.update(this._isActive);\r\n            }\r\n        }));\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            this._register(suggestController.registerSelector({\r\n                priority: 100,\r\n                select: (model, pos, suggestItems) => {\r\n                    var _a;\r\n                    transaction(tx => this.checkModelVersion(tx));\r\n                    const textModel = this.editor.getModel();\r\n                    if (!textModel) {\r\n                        // Should not happen\r\n                        return -1;\r\n                    }\r\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\r\n                    if (!itemToPreselect) {\r\n                        return -1;\r\n                    }\r\n                    const position = Position.lift(pos);\r\n                    const candidates = suggestItems\r\n                        .map((suggestItem, index) => {\r\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\r\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\r\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\r\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\r\n                    })\r\n                        .filter(item => item && item.valid && item.prefixLength > 0);\r\n                    const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\r\n                    return result ? result.index : -1;\r\n                }\r\n            }));\r\n            let isBoundToSuggestWidget = false;\r\n            const bindToSuggestWidget = () => {\r\n                if (isBoundToSuggestWidget) {\r\n                    return;\r\n                }\r\n                isBoundToSuggestWidget = true;\r\n                this._register(suggestController.widget.value.onDidShow(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidHide(() => {\r\n                    this.isSuggestWidgetVisible = false;\r\n                    this.update(false);\r\n                }));\r\n                this._register(suggestController.widget.value.onDidFocus(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this.update(true);\r\n                }));\r\n            };\r\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\r\n                bindToSuggestWidget();\r\n            }));\r\n            this._register(suggestController.onWillInsertSuggestItem(e => {\r\n                const position = this.editor.getPosition();\r\n                const model = this.editor.getModel();\r\n                if (!position || !model) {\r\n                    return undefined;\r\n                }\r\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\r\n                this.onWillAccept(suggestItemInfo);\r\n            }));\r\n        }\r\n        this.update(this._isActive);\r\n    }\r\n    update(newActive) {\r\n        const newInlineCompletion = this.getSuggestItemInfo();\r\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\r\n            this._isActive = newActive;\r\n            this._currentSuggestItemInfo = newInlineCompletion;\r\n            transaction(tx => {\r\n                /** @description Update state from suggest widget */\r\n                this.checkModelVersion(tx);\r\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\r\n            });\r\n        }\r\n    }\r\n    getSuggestItemInfo() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (!suggestController || !this.isSuggestWidgetVisible) {\r\n            return undefined;\r\n        }\r\n        const focusedItem = suggestController.widget.value.getFocusedItem();\r\n        const position = this.editor.getPosition();\r\n        const model = this.editor.getModel();\r\n        if (!focusedItem || !position || !model) {\r\n            return undefined;\r\n        }\r\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\r\n    }\r\n    stopForceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\r\n    }\r\n    forceRenderingAbove() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\r\n    }\r\n}\r\nexport class SuggestItemInfo {\r\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\r\n        let { insertText } = item.completion;\r\n        let isSnippetText = false;\r\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\r\n            const snippet = new SnippetParser().parse(insertText);\r\n            if (snippet.children.length < 100) {\r\n                // Adjust whitespace is expensive.\r\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\r\n            }\r\n            insertText = snippet.toString();\r\n            isSnippetText = true;\r\n        }\r\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\r\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\r\n    }\r\n    constructor(range, insertText, completionItemKind, isSnippetText) {\r\n        this.range = range;\r\n        this.insertText = insertText;\r\n        this.completionItemKind = completionItemKind;\r\n        this.isSnippetText = isSnippetText;\r\n    }\r\n    equals(other) {\r\n        return this.range.equalsRange(other.range)\r\n            && this.insertText === other.insertText\r\n            && this.completionItemKind === other.completionItemKind\r\n            && this.isSnippetText === other.isSnippetText;\r\n    }\r\n    toSelectedSuggestionInfo() {\r\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\r\n    }\r\n    toSingleTextEdit() {\r\n        return new SingleTextEdit(this.range, this.insertText);\r\n    }\r\n}\r\nfunction suggestItemInfoEquals(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (!a || !b) {\r\n        return false;\r\n    }\r\n    return a.equals(b);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar InlineCompletionsController_1;\r\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\r\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\r\nimport { autorun, autorunHandleChanges, constObservable, derived, disposableObservableValue, observableFromEvent, observableSignal, observableValue, transaction } from '../../../../base/common/observable.js';\r\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\r\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\r\nimport { inlineSuggestCommitId } from './commandIds.js';\r\nimport { GhostTextWidget } from './ghostTextWidget.js';\r\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\r\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\r\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\r\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\r\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\r\n    static get(editor) {\r\n        return editor.getContribution(InlineCompletionsController_1.ID);\r\n    }\r\n    constructor(editor, _instantiationService, _contextKeyService, _configurationService, _commandService, _debounceService, _languageFeaturesService, _audioCueService, _keybindingService) {\r\n        super();\r\n        this.editor = editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._commandService = _commandService;\r\n        this._debounceService = _debounceService;\r\n        this._languageFeaturesService = _languageFeaturesService;\r\n        this._audioCueService = _audioCueService;\r\n        this._keybindingService = _keybindingService;\r\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\r\n        this._textModelVersionId = observableValue(this, -1);\r\n        this._cursorPosition = observableValue(this, new Position(1, 1));\r\n        this._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\r\n            transaction(tx => {\r\n                var _a;\r\n                /** @description InlineCompletionsController.handleSuggestAccepted */\r\n                this.updateObservables(tx, VersionIdChangeReason.Other);\r\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\r\n            });\r\n        }));\r\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\r\n        this._ghostTextWidget = this._register(this._instantiationService.createInstance(GhostTextWidget, this.editor, {\r\n            ghostText: this.model.map((v, reader) => /** ghostText */ v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\r\n            minReservedLineCount: constObservable(0),\r\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\r\n        }));\r\n        this._debounceValue = this._debounceService.for(this._languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\r\n        this._playAudioCueSignal = observableSignal(this);\r\n        this._isReadonly = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(90 /* EditorOption.readOnly */));\r\n        this._textModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\r\n        this._textModelIfWritable = derived(reader => this._isReadonly.read(reader) ? undefined : this._textModel.read(reader));\r\n        this._register(new InlineCompletionContextKeys(this._contextKeyService, this.model));\r\n        this._register(autorun(reader => {\r\n            /** @description InlineCompletionsController.update model */\r\n            const textModel = this._textModelIfWritable.read(reader);\r\n            transaction(tx => {\r\n                /** @description InlineCompletionsController.onDidChangeModel/readonly */\r\n                this.model.set(undefined, tx);\r\n                this.updateObservables(tx, VersionIdChangeReason.Other);\r\n                if (textModel) {\r\n                    const model = _instantiationService.createInstance(InlineCompletionsModel, textModel, this._suggestWidgetAdaptor.selectedItem, this._cursorPosition, this._textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\r\n                    this.model.set(model, tx);\r\n                }\r\n            });\r\n        }));\r\n        const getReason = (e) => {\r\n            var _a;\r\n            if (e.isUndoing) {\r\n                return VersionIdChangeReason.Undo;\r\n            }\r\n            if (e.isRedoing) {\r\n                return VersionIdChangeReason.Redo;\r\n            }\r\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\r\n                return VersionIdChangeReason.AcceptWord;\r\n            }\r\n            return VersionIdChangeReason.Other;\r\n        };\r\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \r\n        /** @description InlineCompletionsController.onDidChangeModelContent */\r\n        this.updateObservables(tx, getReason(e)))));\r\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\r\n            var _a;\r\n            /** @description InlineCompletionsController.onDidChangeCursorPosition */\r\n            this.updateObservables(tx, VersionIdChangeReason.Other);\r\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\r\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\r\n            }\r\n        })));\r\n        this._register(editor.onDidType(() => transaction(tx => {\r\n            var _a;\r\n            /** @description InlineCompletionsController.onDidType */\r\n            this.updateObservables(tx, VersionIdChangeReason.Other);\r\n            if (this._enabled.get()) {\r\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\r\n            }\r\n        })));\r\n        this._register(this._commandService.onDidExecuteCommand((e) => {\r\n            // These commands don't trigger onDidType.\r\n            const commands = new Set([\r\n                CoreEditingCommands.Tab.id,\r\n                CoreEditingCommands.DeleteLeft.id,\r\n                CoreEditingCommands.DeleteRight.id,\r\n                inlineSuggestCommitId,\r\n                'acceptSelectedSuggestion',\r\n            ]);\r\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\r\n                transaction(tx => {\r\n                    var _a;\r\n                    /** @description onDidExecuteCommand */\r\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\r\n                });\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidBlurEditorWidget(() => {\r\n            // This is a hidden setting very useful for debugging\r\n            if (this._contextKeyService.getContextKeyValue('accessibleViewIsShown') || this._configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\r\n                editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\r\n                return;\r\n            }\r\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\r\n                return;\r\n            }\r\n            transaction(tx => {\r\n                var _a;\r\n                /** @description InlineCompletionsController.onDidBlurEditorWidget */\r\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\r\n            });\r\n        }));\r\n        this._register(autorun(reader => {\r\n            var _a;\r\n            /** @description InlineCompletionsController.forceRenderingAbove */\r\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\r\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\r\n                if (state.ghostText.lineCount >= 2) {\r\n                    this._suggestWidgetAdaptor.forceRenderingAbove();\r\n                }\r\n            }\r\n            else {\r\n                this._suggestWidgetAdaptor.stopForceRenderingAbove();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            this._suggestWidgetAdaptor.stopForceRenderingAbove();\r\n        }));\r\n        let lastInlineCompletionId = undefined;\r\n        this._register(autorunHandleChanges({\r\n            handleChange: (context, changeSummary) => {\r\n                if (context.didChange(this._playAudioCueSignal)) {\r\n                    lastInlineCompletionId = undefined;\r\n                }\r\n                return true;\r\n            },\r\n        }, async (reader) => {\r\n            /** @description InlineCompletionsController.playAudioCueAndReadSuggestion */\r\n            this._playAudioCueSignal.read(reader);\r\n            const model = this.model.read(reader);\r\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\r\n            if (!model || !state || !state.inlineCompletion) {\r\n                lastInlineCompletionId = undefined;\r\n                return;\r\n            }\r\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\r\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\r\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\r\n                this._audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\r\n                    if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\r\n                        this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\r\n                    }\r\n                });\r\n            }\r\n        }));\r\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this._instantiationService));\r\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\r\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\r\n            }\r\n        }));\r\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\r\n    }\r\n    playAudioCue(tx) {\r\n        this._playAudioCueSignal.trigger(tx);\r\n    }\r\n    provideScreenReaderUpdate(content) {\r\n        const accessibleViewShowing = this._contextKeyService.getContextKeyValue('accessibleViewIsShown');\r\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\r\n        let hint;\r\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(147 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\r\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\r\n        }\r\n        hint ? alert(content + ', ' + hint) : alert(content);\r\n    }\r\n    /**\r\n     * Copies over the relevant state from the text model to observables.\r\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\r\n     * regardless of who calls into us.\r\n     */\r\n    updateObservables(tx, changeReason) {\r\n        var _a, _b;\r\n        const newModel = this.editor.getModel();\r\n        this._textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\r\n        this._cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\r\n    }\r\n    shouldShowHoverAt(range) {\r\n        var _a;\r\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\r\n        if (ghostText) {\r\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\r\n        }\r\n        return false;\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        return this._ghostTextWidget.ownsViewZone(viewZoneId);\r\n    }\r\n};\r\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\r\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IConfigurationService),\r\n    __param(4, ICommandService),\r\n    __param(5, ILanguageFeatureDebounceService),\r\n    __param(6, ILanguageFeaturesService),\r\n    __param(7, IAudioCueService),\r\n    __param(8, IKeybindingService)\r\n], InlineCompletionsController);\r\nexport { InlineCompletionsController };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { transaction } from '../../../../base/common/observable.js';\r\nimport { asyncTransaction } from '../../../../base/common/observableInternal/base.js';\r\nimport { EditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\r\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\r\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\r\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\r\nexport class ShowNextInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowNextInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\r\n            alias: 'Show Next Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\r\n            },\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        var _a;\r\n        const controller = InlineCompletionsController.get(editor);\r\n        (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\r\n    }\r\n}\r\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\r\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowPreviousInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\r\n            alias: 'Show Previous Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\r\n            },\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        var _a;\r\n        const controller = InlineCompletionsController.get(editor);\r\n        (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\r\n    }\r\n}\r\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\r\nexport class TriggerInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.trigger',\r\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\r\n            alias: 'Trigger Inline Suggestion',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        const controller = InlineCompletionsController.get(editor);\r\n        await asyncTransaction(async (tx) => {\r\n            var _a;\r\n            /** @description triggerExplicitly from command */\r\n            await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly(tx));\r\n            controller === null || controller === void 0 ? void 0 : controller.playAudioCue(tx);\r\n        });\r\n    }\r\n}\r\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.acceptNextWord',\r\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\r\n            alias: 'Accept Next Word Of Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\r\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\r\n            },\r\n            menuOpts: [{\r\n                    menuId: MenuId.InlineSuggestionToolbar,\r\n                    title: nls.localize('acceptWord', 'Accept Word'),\r\n                    group: 'primary',\r\n                    order: 2,\r\n                }],\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        var _a;\r\n        const controller = InlineCompletionsController.get(editor);\r\n        await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor));\r\n    }\r\n}\r\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.acceptNextLine',\r\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\r\n            alias: 'Accept Next Line Of Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\r\n            },\r\n            menuOpts: [{\r\n                    menuId: MenuId.InlineSuggestionToolbar,\r\n                    title: nls.localize('acceptLine', 'Accept Line'),\r\n                    group: 'secondary',\r\n                    order: 2,\r\n                }],\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        var _a;\r\n        const controller = InlineCompletionsController.get(editor);\r\n        await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor));\r\n    }\r\n}\r\nexport class AcceptInlineCompletion extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: inlineSuggestCommitId,\r\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\r\n            alias: 'Accept Inline Suggestion',\r\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\r\n            menuOpts: [{\r\n                    menuId: MenuId.InlineSuggestionToolbar,\r\n                    title: nls.localize('accept', \"Accept\"),\r\n                    group: 'primary',\r\n                    order: 1,\r\n                }],\r\n            kbOpts: {\r\n                primary: 2 /* KeyCode.Tab */,\r\n                weight: 200,\r\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated()),\r\n            }\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        var _a;\r\n        const controller = InlineCompletionsController.get(editor);\r\n        if (controller) {\r\n            (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\r\n            controller.editor.focus();\r\n        }\r\n    }\r\n}\r\nexport class HideInlineCompletion extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: HideInlineCompletion.ID,\r\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\r\n            alias: 'Hide Inline Suggestion',\r\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 9 /* KeyCode.Escape */,\r\n            }\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        const controller = InlineCompletionsController.get(editor);\r\n        transaction(tx => {\r\n            var _a;\r\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\r\n        });\r\n    }\r\n}\r\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\r\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\r\n    constructor() {\r\n        super({\r\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\r\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\r\n            f1: false,\r\n            precondition: undefined,\r\n            menu: [{\r\n                    id: MenuId.InlineSuggestionToolbar,\r\n                    group: 'secondary',\r\n                    order: 10,\r\n                }],\r\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\r\n        });\r\n    }\r\n    async run(accessor, editor) {\r\n        const configService = accessor.get(IConfigurationService);\r\n        const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\r\n        const newValue = currentValue === 'always' ? 'onHover' : 'always';\r\n        configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\r\n    }\r\n}\r\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { autorun, constObservable } from '../../../../base/common/observable.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { ILanguageService } from '../../../common/languages/language.js';\r\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\r\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\r\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\r\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nexport class InlineCompletionsHover {\r\n    constructor(owner, range, controller) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.controller = controller;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* HoverAnchorType.Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\r\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\r\n        this._editor = _editor;\r\n        this._languageService = _languageService;\r\n        this._openerService = _openerService;\r\n        this.accessibilityService = accessibilityService;\r\n        this._instantiationService = _instantiationService;\r\n        this._telemetryService = _telemetryService;\r\n        this.hoverOrdinal = 4;\r\n    }\r\n    suggestHoverAnchor(mouseEvent) {\r\n        const controller = InlineCompletionsController.get(this._editor);\r\n        if (!controller) {\r\n            return null;\r\n        }\r\n        const target = mouseEvent.target;\r\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\r\n            // handle the case where the mouse is over the view zone\r\n            const viewZoneData = target.detail;\r\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\r\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\r\n            }\r\n        }\r\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\r\n            // handle the case where the mouse is over the empty portion of a line following ghost text\r\n            if (controller.shouldShowHoverAt(target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\r\n            }\r\n        }\r\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\r\n            // handle the case where the mouse is directly over ghost text\r\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\r\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (this._editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar !== 'onHover') {\r\n            return [];\r\n        }\r\n        const controller = InlineCompletionsController.get(this._editor);\r\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\r\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\r\n        }\r\n        return [];\r\n    }\r\n    renderHoverParts(context, hoverParts) {\r\n        const disposableStore = new DisposableStore();\r\n        const part = hoverParts[0];\r\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\r\n        if (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\r\n            this.renderScreenReaderText(context, part, disposableStore);\r\n        }\r\n        const model = part.controller.model.get();\r\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => /** @description commands */ { var _a; /** @description commands */ return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; }));\r\n        context.fragment.appendChild(w.getDomNode());\r\n        model.triggerExplicitly();\r\n        disposableStore.add(w);\r\n        return disposableStore;\r\n    }\r\n    renderScreenReaderText(context, part, disposableStore) {\r\n        const $ = dom.$;\r\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\r\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\r\n        const render = (code) => {\r\n            disposableStore.add(renderer.onDidRenderAsync(() => {\r\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                context.onContentsChanged();\r\n            }));\r\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\r\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\r\n            hoverContentsElement.replaceChildren(renderedContents.element);\r\n        };\r\n        disposableStore.add(autorun(reader => {\r\n            var _a;\r\n            /** @description update hover */\r\n            const ghostText = (_a = part.controller.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\r\n            if (ghostText) {\r\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\r\n                render(ghostText.renderForScreenReader(lineText));\r\n            }\r\n            else {\r\n                dom.reset(hoverContentsElement);\r\n            }\r\n        }));\r\n        context.fragment.appendChild(markdownHoverElement);\r\n    }\r\n};\r\nInlineCompletionsHoverParticipant = __decorate([\r\n    __param(1, ILanguageService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IAccessibilityService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ITelemetryService)\r\n], InlineCompletionsHoverParticipant);\r\nexport { InlineCompletionsHoverParticipant };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\r\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './commands.js';\r\nimport { InlineCompletionsHoverParticipant } from './hoverParticipant.js';\r\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\r\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\r\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\r\nregisterEditorAction(TriggerInlineSuggestionAction);\r\nregisterEditorAction(ShowNextInlineSuggestionAction);\r\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\r\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\r\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\r\nregisterEditorAction(AcceptInlineCompletion);\r\nregisterEditorAction(HideInlineCompletion);\r\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\r\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\r\n"],
  "mappings": "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",
  "names": ["model", "d", "GhostTextWidget", "lines", "isBasicASCII", "containsRTL", "node", "parent", "child", "marker", "stack", "providers", "maxCharCode", "__decorate", "__param", "InlineCompletionsSource", "_a", "equals", "_a", "_a", "__decorate", "__param", "ContextScopedFindInput", "ContextScopedReplaceInput", "__decorate", "__param", "_a", "sw", "generateUuid", "__decorate", "__param", "name", "dirname", "CommentBasedVariableResolver", "__decorate", "__param", "id", "placeholder", "SnippetSession", "array", "__decorate", "__param", "_defaultOptions", "SnippetController2", "_a", "model", "__decorate", "__param", "VersionIdChangeReason", "InlineCompletionsModel", "cursorPosition", "c", "_a", "tx", "length", "__decorate", "__param", "SuggestMemoryService", "_a", "__decorate", "__param", "WordContextKey", "_a", "__decorate", "__param", "SuggestAlternatives", "_a", "column", "__decorate", "__param", "SuggestModel", "_a", "completions", "wordDistance", "model", "ctx", "__decorate", "__param", "_a", "SuggestWidgetStatus", "__decorate", "__param", "SuggestDetailsWidget", "_a", "_a", "size", "FileKind", "__decorate", "__param", "ItemRenderer", "__decorate", "__param", "_a", "size", "SuggestWidget", "detail", "__decorate", "__param", "SuggestController", "_a", "basename", "_a", "_a", "__decorate", "__param", "InlineCompletionsController", "_a", "_a", "__decorate", "__param", "InlineCompletionsHoverParticipant", "_a", "$"]
}
