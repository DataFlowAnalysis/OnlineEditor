{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/platform/environment/common/environment.js", "../../monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js", "../../monaco-editor/esm/vs/editor/common/services/editorWorker.js", "../../monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js", "../../monaco-editor/esm/vs/editor/common/core/editOperation.js", "../../monaco-editor/esm/vs/base/common/ternarySearchTree.js", "../../monaco-editor/esm/vs/platform/workspace/common/workspace.js", "../../monaco-editor/esm/vs/editor/browser/stableEditorScroll.js", "../../monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js"],
  "sourcesContent": ["import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IEnvironmentService = createDecorator('environmentService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { doHash } from '../../../base/common/hash.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { clamp, MovingAverage, SlidingWindowAverage } from '../../../base/common/numbers.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { matchesScheme } from '../../../base/common/network.js';\nexport const ILanguageFeatureDebounceService = createDecorator('ILanguageFeatureDebounceService');\nvar IdentityHash;\n(function (IdentityHash) {\n    const _hashes = new WeakMap();\n    let pool = 0;\n    function of(obj) {\n        let value = _hashes.get(obj);\n        if (value === undefined) {\n            value = ++pool;\n            _hashes.set(obj, value);\n        }\n        return value;\n    }\n    IdentityHash.of = of;\n})(IdentityHash || (IdentityHash = {}));\nclass NullDebounceInformation {\n    constructor(_default) {\n        this._default = _default;\n    }\n    get(_model) {\n        return this._default;\n    }\n    update(_model, _value) {\n        return this._default;\n    }\n    default() {\n        return this._default;\n    }\n}\nclass FeatureDebounceInformation {\n    constructor(_logService, _name, _registry, _default, _min, _max) {\n        this._logService = _logService;\n        this._name = _name;\n        this._registry = _registry;\n        this._default = _default;\n        this._min = _min;\n        this._max = _max;\n        this._cache = new LRUCache(50, 0.7);\n    }\n    _key(model) {\n        return model.id + this._registry.all(model).reduce((hashVal, obj) => doHash(IdentityHash.of(obj), hashVal), 0);\n    }\n    get(model) {\n        const key = this._key(model);\n        const avg = this._cache.get(key);\n        return avg\n            ? clamp(avg.value, this._min, this._max)\n            : this.default();\n    }\n    update(model, value) {\n        const key = this._key(model);\n        let avg = this._cache.get(key);\n        if (!avg) {\n            avg = new SlidingWindowAverage(6);\n            this._cache.set(key, avg);\n        }\n        const newValue = clamp(avg.update(value), this._min, this._max);\n        if (!matchesScheme(model.uri, 'output')) {\n            this._logService.trace(`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`);\n        }\n        return newValue;\n    }\n    _overall() {\n        const result = new MovingAverage();\n        for (const [, avg] of this._cache) {\n            result.update(avg.value);\n        }\n        return result.value;\n    }\n    default() {\n        const value = (this._overall() | 0) || this._default;\n        return clamp(value, this._min, this._max);\n    }\n}\nlet LanguageFeatureDebounceService = class LanguageFeatureDebounceService {\n    constructor(_logService, envService) {\n        this._logService = _logService;\n        this._data = new Map();\n        this._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n    }\n    for(feature, name, config) {\n        var _a, _b, _c;\n        const min = (_a = config === null || config === void 0 ? void 0 : config.min) !== null && _a !== void 0 ? _a : 50;\n        const max = (_b = config === null || config === void 0 ? void 0 : config.max) !== null && _b !== void 0 ? _b : min ** 2;\n        const extra = (_c = config === null || config === void 0 ? void 0 : config.key) !== null && _c !== void 0 ? _c : undefined;\n        const key = `${IdentityHash.of(feature)},${min}${extra ? ',' + extra : ''}`;\n        let info = this._data.get(key);\n        if (!info) {\n            if (!this._isDev) {\n                this._logService.debug(`[DEBOUNCE: ${name}] is disabled in developed mode`);\n                info = new NullDebounceInformation(min * 1.5);\n            }\n            else {\n                info = new FeatureDebounceInformation(this._logService, name, feature, (this._overallAverage() | 0) || (min * 1.5), // default is overall default or derived from min-value\n                min, max);\n            }\n            this._data.set(key, info);\n        }\n        return info;\n    }\n    _overallAverage() {\n        // Average of all language features. Not a great value but an approximation\n        const result = new MovingAverage();\n        for (const info of this._data.values()) {\n            result.update(info.default());\n        }\n        return result.value;\n    }\n};\nLanguageFeatureDebounceService = __decorate([\n    __param(0, ILogService),\n    __param(1, IEnvironmentService)\n], LanguageFeatureDebounceService);\nexport { LanguageFeatureDebounceService };\nregisterSingleton(ILanguageFeatureDebounceService, LanguageFeatureDebounceService, 1 /* InstantiationType.Delayed */);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IEditorWorkerService = createDecorator('editorWorkerService');\n", "import { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nexport const IAudioCueService = createDecorator('audioCue');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nSound.error = Sound.register({ fileName: 'error.mp3' });\nSound.warning = Sound.register({ fileName: 'warning.mp3' });\nSound.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\nSound.break = Sound.register({ fileName: 'break.mp3' });\nSound.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\nSound.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\nSound.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\nSound.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\nSound.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\nSound.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\nSound.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\nSound.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' });\nSound.chatResponsePending = Sound.register({ fileName: 'chatResponsePending.mp3' });\nSound.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' });\nSound.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' });\nSound.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' });\nSound.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' });\nSound.clear = Sound.register({ fileName: 'clear.mp3' });\nSound.save = Sound.register({ fileName: 'save.mp3' });\nSound.format = Sound.register({ fileName: 'format.mp3' });\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AudioCue {\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const audioCue = new AudioCue(soundSource, options.name, options.settingsKey);\n        AudioCue._audioCues.add(audioCue);\n        return audioCue;\n    }\n    constructor(sound, name, settingsKey) {\n        this.sound = sound;\n        this.name = name;\n        this.settingsKey = settingsKey;\n    }\n}\nAudioCue._audioCues = new Set();\nAudioCue.error = AudioCue.register({\n    name: localize('audioCues.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.lineHasError',\n});\nAudioCue.warning = AudioCue.register({\n    name: localize('audioCues.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    settingsKey: 'audioCues.lineHasWarning',\n});\nAudioCue.foldedArea = AudioCue.register({\n    name: localize('audioCues.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    settingsKey: 'audioCues.lineHasFoldedArea',\n});\nAudioCue.break = AudioCue.register({\n    name: localize('audioCues.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.lineHasBreakpoint',\n});\nAudioCue.inlineSuggestion = AudioCue.register({\n    name: localize('audioCues.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.lineHasInlineSuggestion',\n});\nAudioCue.terminalQuickFix = AudioCue.register({\n    name: localize('audioCues.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.terminalQuickFix',\n});\nAudioCue.onDebugBreak = AudioCue.register({\n    name: localize('audioCues.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.onDebugBreak',\n});\nAudioCue.noInlayHints = AudioCue.register({\n    name: localize('audioCues.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.noInlayHints'\n});\nAudioCue.taskCompleted = AudioCue.register({\n    name: localize('audioCues.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.taskCompleted'\n});\nAudioCue.taskFailed = AudioCue.register({\n    name: localize('audioCues.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.taskFailed'\n});\nAudioCue.terminalCommandFailed = AudioCue.register({\n    name: localize('audioCues.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.terminalCommandFailed'\n});\nAudioCue.terminalBell = AudioCue.register({\n    name: localize('audioCues.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    settingsKey: 'audioCues.terminalBell'\n});\nAudioCue.notebookCellCompleted = AudioCue.register({\n    name: localize('audioCues.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.notebookCellCompleted'\n});\nAudioCue.notebookCellFailed = AudioCue.register({\n    name: localize('audioCues.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.notebookCellFailed'\n});\nAudioCue.diffLineInserted = AudioCue.register({\n    name: localize('audioCues.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    settingsKey: 'audioCues.diffLineInserted'\n});\nAudioCue.diffLineDeleted = AudioCue.register({\n    name: localize('audioCues.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    settingsKey: 'audioCues.diffLineDeleted'\n});\nAudioCue.diffLineModified = AudioCue.register({\n    name: localize('audioCues.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    settingsKey: 'audioCues.diffLineModified'\n});\nAudioCue.chatRequestSent = AudioCue.register({\n    name: localize('audioCues.chatRequestSent', 'Chat Request Sent'),\n    sound: Sound.chatRequestSent,\n    settingsKey: 'audioCues.chatRequestSent'\n});\nAudioCue.chatResponseReceived = AudioCue.register({\n    name: localize('audioCues.chatResponseReceived', 'Chat Response Received'),\n    settingsKey: 'audioCues.chatResponseReceived',\n    sound: {\n        randomOneOf: [\n            Sound.chatResponseReceived1,\n            Sound.chatResponseReceived2,\n            Sound.chatResponseReceived3,\n            Sound.chatResponseReceived4\n        ]\n    }\n});\nAudioCue.chatResponsePending = AudioCue.register({\n    name: localize('audioCues.chatResponsePending', 'Chat Response Pending'),\n    sound: Sound.chatResponsePending,\n    settingsKey: 'audioCues.chatResponsePending'\n});\nAudioCue.clear = AudioCue.register({\n    name: localize('audioCues.clear', 'Clear'),\n    sound: Sound.clear,\n    settingsKey: 'audioCues.clear'\n});\nAudioCue.save = AudioCue.register({\n    name: localize('audioCues.save', 'Save'),\n    sound: Sound.save,\n    settingsKey: 'audioCues.save'\n});\nAudioCue.format = AudioCue.register({\n    name: localize('audioCues.format', 'Format'),\n    sound: Sound.format,\n    settingsKey: 'audioCues.format'\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from './range.js';\nexport class EditOperation {\n    static insert(position, text) {\n        return {\n            range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n            text: text,\n            forceMoveMarkers: true\n        };\n    }\n    static delete(range) {\n        return {\n            range: range,\n            text: null\n        };\n    }\n    static replace(range, text) {\n        return {\n            range: range,\n            text: text\n        };\n    }\n    static replaceMove(range, text) {\n        return {\n            range: range,\n            text: text,\n            forceMoveMarkers: true\n        };\n    }\n}\n", "import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { basename } from '../../../base/common/path.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function isEmptyWorkspaceIdentifier(obj) {\n    const emptyWorkspaceIdentifier = obj;\n    return typeof (emptyWorkspaceIdentifier === null || emptyWorkspaceIdentifier === void 0 ? void 0 : emptyWorkspaceIdentifier.id) === 'string'\n        && !isSingleFolderWorkspaceIdentifier(obj)\n        && !isWorkspaceIdentifier(obj);\n}\nexport const EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE = { id: 'ext-dev' };\nexport const UNKNOWN_EMPTY_WINDOW_WORKSPACE = { id: 'empty-window' };\nexport function toWorkspaceIdentifier(arg0, isExtensionDevelopment) {\n    // Empty workspace\n    if (typeof arg0 === 'string' || typeof arg0 === 'undefined') {\n        // With a backupPath, the basename is the empty workspace identifier\n        if (typeof arg0 === 'string') {\n            return {\n                id: basename(arg0)\n            };\n        }\n        // Extension development empty windows have backups disabled\n        // so we return a constant workspace identifier for extension\n        // authors to allow to restore their workspace state even then.\n        if (isExtensionDevelopment) {\n            return EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE;\n        }\n        return UNKNOWN_EMPTY_WINDOW_WORKSPACE;\n    }\n    // Multi root\n    const workspace = arg0;\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty window\n    return {\n        id: workspace.id\n    };\n}\nexport function isWorkspaceIdentifier(obj) {\n    const workspaceIdentifier = obj;\n    return typeof (workspaceIdentifier === null || workspaceIdentifier === void 0 ? void 0 : workspaceIdentifier.id) === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const STANDALONE_EDITOR_WORKSPACE_ID = '4064f6ec-cb38-4ad0-af64-ee6467e63c82';\nexport function isStandaloneEditorWorkspace(workspace) {\n    return workspace.id === STANDALONE_EDITOR_WORKSPACE_ID;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n"],
  "mappings": "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",
  "names": ["IdentityHash", "LanguageFeatureDebounceService", "node", "key"]
}
