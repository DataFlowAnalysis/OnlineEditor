/********************************************************************************
 * Copyright (c) 2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/// <reference types="node" />
import { ElkNode } from 'elkjs/lib/elk-api';
import { Dimension, Point } from 'sprotty-protocol';
/**
 * Data structure received in JSON format from an ELK server.
 */
export interface LayoutData {
    [id: string]: LayoutElement;
}
export type LayoutElement = ShapeLayoutElement | EdgeLayoutElement;
export interface ShapeLayoutElement {
    position: Point;
    size: Dimension;
}
export declare function isShapeLayout(element: unknown): element is ShapeLayoutElement;
export interface EdgeLayoutElement {
    route: Point[];
}
export declare function isEdgeLayout(element: unknown): element is EdgeLayoutElement;
export declare function isError(element: unknown): element is Error;
/**
 * Apply the given layout data received from an ELK server to the original graph.
 */
export declare function applyLayoutData(data: LayoutData, node: ElkNode): void;
/**
 * Utility function that looks for the end of a JSON object in an incoming stream.
 */
export declare function findObjectEnd(chunk: Buffer, state: ParseState): void;
export interface ParseState {
    objLevel: number;
}
//# sourceMappingURL=layout-data.d.ts.map